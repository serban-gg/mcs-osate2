/*
 * generated by Xtext
 */
parser grammar InternalMCSParser;

options {
	tokenVocab=InternalMCSLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@header {
package org.osate.xtext.aadl2.mcs.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.osate.xtext.aadl2.mcs.services.MCSGrammarAccess;

}

@members {
 
 	private MCSGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("NumberSign", "'#'");
		tokenNameToValue.put("PercentSign", "'\%'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("VerticalLine", "'|'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("NumberSignQuestionMark", "'#?'");
		tokenNameToValue.put("LeftParenthesisSpace", "'( '");
		tokenNameToValue.put("AsteriskAsterisk", "'**'");
		tokenNameToValue.put("FullStopFullStop", "'..'");
		tokenNameToValue.put("ColonColon", "'::'");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("Eq", "'eq'");
		tokenNameToValue.put("If", "'if'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("Or", "'or'");
		tokenNameToValue.put("To", "'to'");
		tokenNameToValue.put("PlusSignEqualsSignGreaterThanSign", "'+=>'");
		tokenNameToValue.put("And", "'and'");
		tokenNameToValue.put("For", "'for'");
		tokenNameToValue.put("Get", "'get'");
		tokenNameToValue.put("Int", "'int'");
		tokenNameToValue.put("Key", "'key'");
		tokenNameToValue.put("Let", "'let'");
		tokenNameToValue.put("Max", "'max'");
		tokenNameToValue.put("Mcs", "'mcs'");
		tokenNameToValue.put("Min", "'min'");
		tokenNameToValue.put("Nil", "'nil'");
		tokenNameToValue.put("Not", "'not'");
		tokenNameToValue.put("Set", "'set'");
		tokenNameToValue.put("Sum", "'sum'");
		tokenNameToValue.put("Val", "'val'");
		tokenNameToValue.put("Bool", "'bool'");
		tokenNameToValue.put("Else", "'else'");
		tokenNameToValue.put("Enum", "'enum'");
		tokenNameToValue.put("Fail", "'fail'");
		tokenNameToValue.put("Join", "'join'");
		tokenNameToValue.put("Less", "'less'");
		tokenNameToValue.put("List", "'list'");
		tokenNameToValue.put("Path", "'path'");
		tokenNameToValue.put("Real", "'real'");
		tokenNameToValue.put("Root", "'root'");
		tokenNameToValue.put("Size", "'size'");
		tokenNameToValue.put("Then", "'then'");
		tokenNameToValue.put("This", "'this'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("Type", "'type'");
		tokenNameToValue.put("With", "'with'");
		tokenNameToValue.put("I_Bus", "'I_Bus'");
		tokenNameToValue.put("Annex", "'annex'");
		tokenNameToValue.put("Check", "'check'");
		tokenNameToValue.put("Class", "'class'");
		tokenNameToValue.put("Const", "'const'");
		tokenNameToValue.put("Delta", "'delta'");
		tokenNameToValue.put("Empty", "'empty'");
		tokenNameToValue.put("Equal", "'equal'");
		tokenNameToValue.put("False", "'false'");
		tokenNameToValue.put("Floor", "'floor'");
		tokenNameToValue.put("Iroot", "'iroot'");
		tokenNameToValue.put("Lower", "'lower'");
		tokenNameToValue.put("Modes", "'modes'");
		tokenNameToValue.put("Owner", "'owner'");
		tokenNameToValue.put("Prove", "'prove'");
		tokenNameToValue.put("Range", "'range'");
		tokenNameToValue.put("Types", "'types'");
		tokenNameToValue.put("Union", "'union'");
		tokenNameToValue.put("Units", "'units'");
		tokenNameToValue.put("Upper", "'upper'");
		tokenNameToValue.put("C_Impl", "'C_Impl'");
		tokenNameToValue.put("C_type", "'C_Type'");
		tokenNameToValue.put("I_Data", "'I_Data'");
		tokenNameToValue.put("I_Mode", "'I_Mode'");
		tokenNameToValue.put("I_Port", "'I_Port'");
		tokenNameToValue.put("As_set", "'as_set'");
		tokenNameToValue.put("C_type", "'c_type'");
		tokenNameToValue.put("Concat", "'concat'");
		tokenNameToValue.put("Exists", "'exists'");
		tokenNameToValue.put("Forall", "'forall'");
		tokenNameToValue.put("Import", "'import'");
		tokenNameToValue.put("Parent", "'parent'");
		tokenNameToValue.put("Record", "'record'");
		tokenNameToValue.put("Source", "'source'");
		tokenNameToValue.put("String", "'string'");
		tokenNameToValue.put("C_Annex", "'C_Annex'");
		tokenNameToValue.put("Andthen", "'andthen'");
		tokenNameToValue.put("Applies", "'applies'");
		tokenNameToValue.put("Binding", "'binding'");
		tokenNameToValue.put("Case_eq", "'case_eq'");
		tokenNameToValue.put("Ceiling", "'ceiling'");
		tokenNameToValue.put("Compute", "'compute'");
		tokenNameToValue.put("Extends", "'extends'");
		tokenNameToValue.put("Feature", "'feature'");
		tokenNameToValue.put("Foreach", "'foreach'");
		tokenNameToValue.put("Imports", "'imports'");
		tokenNameToValue.put("Inverse", "'inverse'");
		tokenNameToValue.put("Package", "'package'");
		tokenNameToValue.put("Sublist", "'sublist'");
		tokenNameToValue.put("I_Access", "'I_Access'");
		tokenNameToValue.put("I_Device", "'I_Device'");
		tokenNameToValue.put("I_Memory", "'I_Memory'");
		tokenNameToValue.put("I_System", "'I_System'");
		tokenNameToValue.put("I_Thread", "'I_Thread'");
		tokenNameToValue.put("Aadlreal", "'aadlreal'");
		tokenNameToValue.put("Allmodes", "'allmodes'");
		tokenNameToValue.put("Category", "'category'");
		tokenNameToValue.put("Constant", "'constant'");
		tokenNameToValue.put("Contaned", "'contaned'");
		tokenNameToValue.put("Features", "'features'");
		tokenNameToValue.put("Has_list", "'has_list'");
		tokenNameToValue.put("In_modes", "'in_modes'");
		tokenNameToValue.put("Is_named", "'is_named'");
		tokenNameToValue.put("Property", "'property'");
		tokenNameToValue.put("Theorems", "'theorems'");
		tokenNameToValue.put("I_Feature", "'I_Feature'");
		tokenNameToValue.put("I_Process", "'I_Process'");
		tokenNameToValue.put("T_Element", "'T_Element'");
		tokenNameToValue.put("T_Package", "'T_Package'");
		tokenNameToValue.put("Case_less", "'case_less'");
		tokenNameToValue.put("Constants", "'constants'");
		tokenNameToValue.put("Direction", "'direction'");
		tokenNameToValue.put("Functions", "'functions'");
		tokenNameToValue.put("Has_delta", "'has_delta'");
		tokenNameToValue.put("Has_range", "'has_range'");
		tokenNameToValue.put("Has_units", "'has_units'");
		tokenNameToValue.put("Instances", "'instances'");
		tokenNameToValue.put("Intersect", "'intersect'");
		tokenNameToValue.put("Modes_map", "'modes_map'");
		tokenNameToValue.put("Prototype", "'prototype'");
		tokenNameToValue.put("Reference", "'reference'");
		tokenNameToValue.put("Subclause", "'subclause'");
		tokenNameToValue.put("I_Abstract", "'I_Abstract'");
		tokenNameToValue.put("T_Instance", "'T_Instance'");
		tokenNameToValue.put("Aadlstring", "'aadlstring'");
		tokenNameToValue.put("Classifier", "'classifier'");
		tokenNameToValue.put("Has_member", "'has_member'");
		tokenNameToValue.put("Has_parent", "'has_parent'");
		tokenNameToValue.put("Instanceof", "'instanceof'");
		tokenNameToValue.put("Is_inverse", "'is_inverse'");
		tokenNameToValue.put("Is_of_type", "'is_of_type'");
		tokenNameToValue.put("Is_partial", "'is_partial'");
		tokenNameToValue.put("Is_refined", "'is_refined'");
		tokenNameToValue.put("Local_name", "'local_name'");
		tokenNameToValue.put("Mapped_set", "'mapped_set'");
		tokenNameToValue.put("I_Component", "'I_Component'");
		tokenNameToValue.put("I_Data_Port", "'I_Data_Port'");
		tokenNameToValue.put("I_Flow_Impl", "'I_Flow_Impl'");
		tokenNameToValue.put("I_Flow_Spec", "'I_Flow_Spec'");
		tokenNameToValue.put("I_Parameter", "'I_Parameter'");
		tokenNameToValue.put("I_Processor", "'I_Processor'");
		tokenNameToValue.put("I_Prototype", "'I_Prototype'");
		tokenNameToValue.put("Aadlboolean", "'aadlboolean'");
		tokenNameToValue.put("Aadlinteger", "'aadlinteger'");
		tokenNameToValue.put("Call_target", "'call_target'");
		tokenNameToValue.put("Classifiers", "'classifiers'");
		tokenNameToValue.put("Connections", "'connections'");
		tokenNameToValue.put("Constraints", "'constraints'");
		tokenNameToValue.put("Destination", "'destination'");
		tokenNameToValue.put("Enumeration", "'enumeration'");
		tokenNameToValue.put("Has_extends", "'has_extends'");
		tokenNameToValue.put("Has_inverse", "'has_inverse'");
		tokenNameToValue.put("Is_owned_by", "'is_owned_by'");
		tokenNameToValue.put("I_Bus_Access", "'I_Bus_Access'");
		tokenNameToValue.put("I_Connection", "'I_Connection'");
		tokenNameToValue.put("I_Event_Port", "'I_Event_Port'");
		tokenNameToValue.put("I_Subprogram", "'I_Subprogram'");
		tokenNameToValue.put("T_Classifier", "'T_Classifier'");
		tokenNameToValue.put("Bindings_map", "'bindings_map'");
		tokenNameToValue.put("Element_type", "'element_type'");
		tokenNameToValue.put("Has_bindings", "'has_bindings'");
		tokenNameToValue.put("Has_property", "'has_property'");
		tokenNameToValue.put("Package_name", "'package_name'");
		tokenNameToValue.put("Path_name_of", "'path_name_of'");
		tokenNameToValue.put("Property_ref", "'property_ref'");
		tokenNameToValue.put("Type_literal", "'type_literal'");
		tokenNameToValue.put("Unit_literal", "'unit_literal'");
		tokenNameToValue.put("I_Data_Access", "'I_Data_Access'");
		tokenNameToValue.put("I_Virtual_Bus", "'I_Virtual_Bus'");
		tokenNameToValue.put("Flat_features", "'flat_features'");
		tokenNameToValue.put("Property_type", "'property_type'");
		tokenNameToValue.put("Subcomponents", "'subcomponents'");
		tokenNameToValue.put("I_Thread_Group", "'I_Thread_Group'");
		tokenNameToValue.put("Array_cardinal", "'array_cardinal'");
		tokenNameToValue.put("Component_type", "'component_type'");
		tokenNameToValue.put("End_mode_state", "'end_mode_state'");
		tokenNameToValue.put("Qualified_name", "'qualified_name'");
		tokenNameToValue.put("C_Feature_Group", "'C_Feature_Group'");
		tokenNameToValue.put("I_Call_Sequence", "'I_Call_Sequence'");
		tokenNameToValue.put("I_Feature_Group", "'I_Feature_Group'");
		tokenNameToValue.put("Classifier_type", "'classifier_type'");
		tokenNameToValue.put("Is_fg_prototype", "'is_fg_prototype'");
		tokenNameToValue.put("Is_initial_mode", "'is_initial_mode'");
		tokenNameToValue.put("Transition_name", "'transition_name'");
		tokenNameToValue.put("Transitive_path", "'transitive_path'");
		tokenNameToValue.put("I_Flow_Impl_Path", "'I_Flow_Impl_Path'");
		tokenNameToValue.put("I_Flow_Impl_Sink", "'I_Flow_Impl_Sink'");
		tokenNameToValue.put("I_Flow_Spec_Path", "'I_Flow_Spec_Path'");
		tokenNameToValue.put("I_Flow_Spec_Sink", "'I_Flow_Spec_Sink'");
		tokenNameToValue.put("Is_bidirectional", "'is_bidirectional'");
		tokenNameToValue.put("Is_prototype_ref", "'is_prototype_ref'");
		tokenNameToValue.put("Is_required_mode", "'is_required_mode'");
		tokenNameToValue.put("Mode_transitions", "'mode_transitions'");
		tokenNameToValue.put("Start_mode_state", "'start_mode_state'");
		tokenNameToValue.put("I_Component_Annex", "'I_Component_Annex'");
		tokenNameToValue.put("I_End_To_End_Flow", "'I_End_To_End_Flow'");
		tokenNameToValue.put("I_Event_Data_Port", "'I_Event_Data_Port'");
		tokenNameToValue.put("I_Mode_Transition", "'I_Mode_Transition'");
		tokenNameToValue.put("I_Mode_Trigger_Id", "'I_Mode_Trigger_Id'");
		tokenNameToValue.put("I_Port_Connection", "'I_Port_Connection'");
		tokenNameToValue.put("I_Subprogram_Call", "'I_Subprogram_Call'");
		tokenNameToValue.put("Has_prototype_ref", "'has_prototype_ref'");
		tokenNameToValue.put("I_Abstract_Feature", "'I_Abstract_Feature'");
		tokenNameToValue.put("I_Flow_Impl_Source", "'I_Flow_Impl_Source'");
		tokenNameToValue.put("I_Flow_Spec_Source", "'I_Flow_Spec_Source'");
		tokenNameToValue.put("I_Subprogram_Group", "'I_Subprogram_Group'");
		tokenNameToValue.put("Is_c_type_instance", "'is_c_type_instance'");
		tokenNameToValue.put("Mode_state_machine", "'mode_state_machine'");
		tokenNameToValue.put("I_Access_Connection", "'I_Access_Connection'");
		tokenNameToValue.put("I_Subprogram_Access", "'I_Subprogram_Access'");
		tokenNameToValue.put("I_Virtual_Processor", "'I_Virtual_Processor'");
		tokenNameToValue.put("Has_classifier_type", "'has_classifier_type'");
		tokenNameToValue.put("Transition_triggers", "'transition_triggers'");
		tokenNameToValue.put("I_Feature_Connection", "'I_Feature_Connection'");
		tokenNameToValue.put("Classifier_reference", "'classifier_reference'");
		tokenNameToValue.put("Is_feature_prototype", "'is_feature_prototype'");
		tokenNameToValue.put("I_Parameter_Connection", "'I_Parameter_Connection'");
		tokenNameToValue.put("Is_component_prototype", "'is_component_prototype'");
		tokenNameToValue.put("Has_classifier_reference", "'has_classifier_reference'");
		tokenNameToValue.put("I_Subprogram_Group_Access", "'I_Subprogram_Group_Access'");
		tokenNameToValue.put("I_Feature_Group_Connection", "'I_Feature_Group_Connection'");
 	}
 	
    public void setGrammarAccess(MCSGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleMCSGrammarRoot
entryRuleMCSGrammarRoot 
:
{ before(grammarAccess.getMCSGrammarRootRule()); }
	 ruleMCSGrammarRoot
{ after(grammarAccess.getMCSGrammarRootRule()); } 
	 EOF 
;

// Rule MCSGrammarRoot
ruleMCSGrammarRoot 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMCSGrammarRootAccess().getAlternatives()); }
(rule__MCSGrammarRoot__Alternatives)
{ after(grammarAccess.getMCSGrammarRootAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleMCSAnnexLibrary
entryRuleMCSAnnexLibrary 
:
{ before(grammarAccess.getMCSAnnexLibraryRule()); }
	 ruleMCSAnnexLibrary
{ after(grammarAccess.getMCSAnnexLibraryRule()); } 
	 EOF 
;

// Rule MCSAnnexLibrary
ruleMCSAnnexLibrary 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup()); }
(rule__MCSAnnexLibrary__Group__0)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMCSFileLibrary
entryRuleMCSFileLibrary 
:
{ before(grammarAccess.getMCSFileLibraryRule()); }
	 ruleMCSFileLibrary
{ after(grammarAccess.getMCSFileLibraryRule()); } 
	 EOF 
;

// Rule MCSFileLibrary
ruleMCSFileLibrary 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup()); }
(rule__MCSFileLibrary__Group__0)
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMCSAnnexSubclause
entryRuleMCSAnnexSubclause 
:
{ before(grammarAccess.getMCSAnnexSubclauseRule()); }
	 ruleMCSAnnexSubclause
{ after(grammarAccess.getMCSAnnexSubclauseRule()); } 
	 EOF 
;

// Rule MCSAnnexSubclause
ruleMCSAnnexSubclause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getGroup()); }
(rule__MCSAnnexSubclause__Group__0)
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFile_name
entryRuleFile_name 
:
{ before(grammarAccess.getFile_nameRule()); }
	 ruleFile_name
{ after(grammarAccess.getFile_nameRule()); } 
	 EOF 
;

// Rule File_name
ruleFile_name 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFile_nameAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getFile_nameAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType_declaration
entryRuleType_declaration 
:
{ before(grammarAccess.getType_declarationRule()); }
	 ruleType_declaration
{ after(grammarAccess.getType_declarationRule()); } 
	 EOF 
;

// Rule Type_declaration
ruleType_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getType_declarationAccess().getGroup()); }
(rule__Type_declaration__Group__0)
{ after(grammarAccess.getType_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant_declaration
entryRuleConstant_declaration 
:
{ before(grammarAccess.getConstant_declarationRule()); }
	 ruleConstant_declaration
{ after(grammarAccess.getConstant_declarationRule()); } 
	 EOF 
;

// Rule Constant_declaration
ruleConstant_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstant_declarationAccess().getGroup()); }
(rule__Constant_declaration__Group__0)
{ after(grammarAccess.getConstant_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction_declaration
entryRuleFunction_declaration 
:
{ before(grammarAccess.getFunction_declarationRule()); }
	 ruleFunction_declaration
{ after(grammarAccess.getFunction_declarationRule()); } 
	 EOF 
;

// Rule Function_declaration
ruleFunction_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunction_declarationAccess().getGroup()); }
(rule__Function_declaration__Group__0)
{ after(grammarAccess.getFunction_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTheorem_declaration
entryRuleTheorem_declaration 
:
{ before(grammarAccess.getTheorem_declarationRule()); }
	 ruleTheorem_declaration
{ after(grammarAccess.getTheorem_declarationRule()); } 
	 EOF 
;

// Rule Theorem_declaration
ruleTheorem_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTheorem_declarationAccess().getGroup()); }
(rule__Theorem_declaration__Group__0)
{ after(grammarAccess.getTheorem_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTheorem_root
entryRuleTheorem_root 
:
{ before(grammarAccess.getTheorem_rootRule()); }
	 ruleTheorem_root
{ after(grammarAccess.getTheorem_rootRule()); } 
	 EOF 
;

// Rule Theorem_root
ruleTheorem_root 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTheorem_rootAccess().getGroup()); }
(rule__Theorem_root__Group__0)
{ after(grammarAccess.getTheorem_rootAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionBody
entryRuleFunctionBody 
:
{ before(grammarAccess.getFunctionBodyRule()); }
	 ruleFunctionBody
{ after(grammarAccess.getFunctionBodyRule()); } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunctionBodyAccess().getGroup()); }
(rule__FunctionBody__Group__0)
{ after(grammarAccess.getFunctionBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTheoremBody
entryRuleTheoremBody 
:
{ before(grammarAccess.getTheoremBodyRule()); }
	 ruleTheoremBody
{ after(grammarAccess.getTheoremBodyRule()); } 
	 EOF 
;

// Rule TheoremBody
ruleTheoremBody 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTheoremBodyAccess().getGroup()); }
(rule__TheoremBody__Group__0)
{ after(grammarAccess.getTheoremBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterizedString
entryRuleParameterizedString 
:
{ before(grammarAccess.getParameterizedStringRule()); }
	 ruleParameterizedString
{ after(grammarAccess.getParameterizedStringRule()); } 
	 EOF 
;

// Rule ParameterizedString
ruleParameterizedString 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParameterizedStringAccess().getGroup()); }
(rule__ParameterizedString__Group__0)
{ after(grammarAccess.getParameterizedStringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParameterAccess().getMcsTypedNameParserRuleCall()); }
	ruleMcsTypedName
{ after(grammarAccess.getParameterAccess().getMcsTypedNameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextParm
entryRuleTextParm 
:
{ before(grammarAccess.getTextParmRule()); }
	 ruleTextParm
{ after(grammarAccess.getTextParmRule()); } 
	 EOF 
;

// Rule TextParm
ruleTextParm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTextParmAccess().getAlternatives()); }
(rule__TextParm__Alternatives)
{ after(grammarAccess.getTextParmAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleMcsTypedName
entryRuleMcsTypedName 
:
{ before(grammarAccess.getMcsTypedNameRule()); }
	 ruleMcsTypedName
{ after(grammarAccess.getMcsTypedNameRule()); } 
	 EOF 
;

// Rule McsTypedName
ruleMcsTypedName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMcsTypedNameAccess().getGroup()); }
(rule__McsTypedName__Group__0)
{ after(grammarAccess.getMcsTypedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTheorem_call
entryRuleTheorem_call 
:
{ before(grammarAccess.getTheorem_callRule()); }
	 ruleTheorem_call
{ after(grammarAccess.getTheorem_callRule()); } 
	 EOF 
;

// Rule Theorem_call
ruleTheorem_call 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTheorem_callAccess().getGroup()); }
(rule__Theorem_call__Group__0)
{ after(grammarAccess.getTheorem_callAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifier_literal
entryRuleClassifier_literal 
:
{ before(grammarAccess.getClassifier_literalRule()); }
	 ruleClassifier_literal
{ after(grammarAccess.getClassifier_literalRule()); } 
	 EOF 
;

// Rule Classifier_literal
ruleClassifier_literal 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getClassifier_literalAccess().getAlternatives()); }
(rule__Classifier_literal__Alternatives)
{ after(grammarAccess.getClassifier_literalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealTerm
entryRuleRealTerm 
:
{ before(grammarAccess.getRealTermRule()); }
	 ruleRealTerm
{ after(grammarAccess.getRealTermRule()); } 
	 EOF 
;

// Rule RealTerm
ruleRealTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRealTermAccess().getGroup()); }
(rule__RealTerm__Group__0)
{ after(grammarAccess.getRealTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnsignedReal
entryRuleUnsignedReal 
:
{ before(grammarAccess.getUnsignedRealRule()); }
	 ruleUnsignedReal
{ after(grammarAccess.getUnsignedRealRule()); } 
	 EOF 
;

// Rule UnsignedReal
ruleUnsignedReal 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnsignedRealAccess().getREAL_LITTerminalRuleCall()); }
	RULE_REAL_LIT
{ after(grammarAccess.getUnsignedRealAccess().getREAL_LITTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm 
:
{ before(grammarAccess.getIntegerTermRule()); }
	 ruleIntegerTerm
{ after(grammarAccess.getIntegerTermRule()); } 
	 EOF 
;

// Rule IntegerTerm
ruleIntegerTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegerTermAccess().getGroup()); }
(rule__IntegerTerm__Group__0)
{ after(grammarAccess.getIntegerTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnsignedInt
entryRuleUnsignedInt 
:
{ before(grammarAccess.getUnsignedIntRule()); }
	 ruleUnsignedInt
{ after(grammarAccess.getUnsignedIntRule()); } 
	 EOF 
;

// Rule UnsignedInt
ruleUnsignedInt 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnsignedIntAccess().getINTEGER_LITTerminalRuleCall()); }
	RULE_INTEGER_LIT
{ after(grammarAccess.getUnsignedIntAccess().getINTEGER_LITTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRange
entryRuleRange 
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRangeAccess().getGroup()); }
(rule__Range__Group__0)
{ after(grammarAccess.getRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRefTerm
entryRuleRefTerm 
:
{ before(grammarAccess.getRefTermRule()); }
	 ruleRefTerm
{ after(grammarAccess.getRefTermRule()); } 
	 EOF 
;

// Rule RefTerm
ruleRefTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRefTermAccess().getGroup()); }
(rule__RefTerm__Group__0)
{ after(grammarAccess.getRefTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNestedDotID
entryRuleNestedDotID 
:
{ before(grammarAccess.getNestedDotIDRule()); }
	 ruleNestedDotID
{ after(grammarAccess.getNestedDotIDRule()); } 
	 EOF 
;

// Rule NestedDotID
ruleNestedDotID 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNestedDotIDAccess().getGroup()); }
(rule__NestedDotID__Group__0)
{ after(grammarAccess.getNestedDotIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMcs_name_ref
entryRuleMcs_name_ref 
:
{ before(grammarAccess.getMcs_name_refRule()); }
	 ruleMcs_name_ref
{ after(grammarAccess.getMcs_name_refRule()); } 
	 EOF 
;

// Rule Mcs_name_ref
ruleMcs_name_ref 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMcs_name_refAccess().getGroup()); }
(rule__Mcs_name_ref__Group__0)
{ after(grammarAccess.getMcs_name_refAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodChain
entryRuleMethodChain 
:
{ before(grammarAccess.getMethodChainRule()); }
	 ruleMethodChain
{ after(grammarAccess.getMethodChainRule()); } 
	 EOF 
;

// Rule MethodChain
ruleMethodChain 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMethodChainAccess().getGroup()); }
(rule__MethodChain__Group__0)
{ after(grammarAccess.getMethodChainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInFnCall
entryRuleBuiltInFnCall 
:
{ before(grammarAccess.getBuiltInFnCallRule()); }
	 ruleBuiltInFnCall
{ after(grammarAccess.getBuiltInFnCallRule()); } 
	 EOF 
;

// Rule BuiltInFnCall
ruleBuiltInFnCall 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBuiltInFnCallAccess().getGroup()); }
(rule__BuiltInFnCall__Group__0)
{ after(grammarAccess.getBuiltInFnCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFnCall
entryRuleFnCall 
:
{ before(grammarAccess.getFnCallRule()); }
	 ruleFnCall
{ after(grammarAccess.getFnCallRule()); } 
	 EOF 
;

// Rule FnCall
ruleFnCall 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFnCallAccess().getGroup()); }
(rule__FnCall__Group__0)
{ after(grammarAccess.getFnCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getExprAccess().getFailExprParserRuleCall()); }
	ruleFailExpr
{ after(grammarAccess.getExprAccess().getFailExprParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFailExpr
entryRuleFailExpr 
:
{ before(grammarAccess.getFailExprRule()); }
	 ruleFailExpr
{ after(grammarAccess.getFailExprRule()); } 
	 EOF 
;

// Rule FailExpr
ruleFailExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFailExprAccess().getGroup()); }
(rule__FailExpr__Group__0)
{ after(grammarAccess.getFailExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImpliesExpr
entryRuleImpliesExpr 
:
{ before(grammarAccess.getImpliesExprRule()); }
	 ruleImpliesExpr
{ after(grammarAccess.getImpliesExprRule()); } 
	 EOF 
;

// Rule ImpliesExpr
ruleImpliesExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getImpliesExprAccess().getGroup()); }
(rule__ImpliesExpr__Group__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpr
entryRuleOrExpr 
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOrExprAccess().getGroup()); }
(rule__OrExpr__Group__0)
{ after(grammarAccess.getOrExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpr
entryRuleAndExpr 
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleAndExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAndExprAccess().getGroup()); }
(rule__AndExpr__Group__0)
{ after(grammarAccess.getAndExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceOfExpr
entryRuleInstanceOfExpr 
:
{ before(grammarAccess.getInstanceOfExprRule()); }
	 ruleInstanceOfExpr
{ after(grammarAccess.getInstanceOfExprRule()); } 
	 EOF 
;

// Rule InstanceOfExpr
ruleInstanceOfExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getInstanceOfExprAccess().getGroup()); }
(rule__InstanceOfExpr__Group__0)
{ after(grammarAccess.getInstanceOfExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalOp
entryRuleRelationalOp 
:
{ before(grammarAccess.getRelationalOpRule()); }
	 ruleRelationalOp
{ after(grammarAccess.getRelationalOpRule()); } 
	 EOF 
;

// Rule RelationalOp
ruleRelationalOp 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRelationalOpAccess().getAlternatives()); }
(rule__RelationalOp__Alternatives)
{ after(grammarAccess.getRelationalOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpr
entryRuleRelationalExpr 
:
{ before(grammarAccess.getRelationalExprRule()); }
	 ruleRelationalExpr
{ after(grammarAccess.getRelationalExprRule()); } 
	 EOF 
;

// Rule RelationalExpr
ruleRelationalExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRelationalExprAccess().getGroup()); }
(rule__RelationalExpr__Group__0)
{ after(grammarAccess.getRelationalExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlusExpr
entryRulePlusExpr 
:
{ before(grammarAccess.getPlusExprRule()); }
	 rulePlusExpr
{ after(grammarAccess.getPlusExprRule()); } 
	 EOF 
;

// Rule PlusExpr
rulePlusExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPlusExprAccess().getGroup()); }
(rule__PlusExpr__Group__0)
{ after(grammarAccess.getPlusExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimesExpr
entryRuleTimesExpr 
:
{ before(grammarAccess.getTimesExprRule()); }
	 ruleTimesExpr
{ after(grammarAccess.getTimesExprRule()); } 
	 EOF 
;

// Rule TimesExpr
ruleTimesExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTimesExprAccess().getGroup()); }
(rule__TimesExpr__Group__0)
{ after(grammarAccess.getTimesExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixExpr
entryRulePrefixExpr 
:
{ before(grammarAccess.getPrefixExprRule()); }
	 rulePrefixExpr
{ after(grammarAccess.getPrefixExprRule()); } 
	 EOF 
;

// Rule PrefixExpr
rulePrefixExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPrefixExprAccess().getAlternatives()); }
(rule__PrefixExpr__Alternatives)
{ after(grammarAccess.getPrefixExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostCastExpr
entryRulePostCastExpr 
:
{ before(grammarAccess.getPostCastExprRule()); }
	 rulePostCastExpr
{ after(grammarAccess.getPostCastExprRule()); } 
	 EOF 
;

// Rule PostCastExpr
rulePostCastExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPostCastExprAccess().getGroup()); }
(rule__PostCastExpr__Group__0)
{ after(grammarAccess.getPostCastExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMCSNameExpr
entryRuleMCSNameExpr 
:
{ before(grammarAccess.getMCSNameExprRule()); }
	 ruleMCSNameExpr
{ after(grammarAccess.getMCSNameExprRule()); } 
	 EOF 
;

// Rule MCSNameExpr
ruleMCSNameExpr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMCSNameExprAccess().getGroup()); }
(rule__MCSNameExpr__Group__0)
{ after(grammarAccess.getMCSNameExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_term
entryRuleExpression_term 
:
{ before(grammarAccess.getExpression_termRule()); }
	 ruleExpression_term
{ after(grammarAccess.getExpression_termRule()); } 
	 EOF 
;

// Rule Expression_term
ruleExpression_term 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getExpression_termAccess().getAlternatives()); }
(rule__Expression_term__Alternatives)
{ after(grammarAccess.getExpression_termAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInFn
entryRuleBuiltInFn 
:
{ before(grammarAccess.getBuiltInFnRule()); }
	 ruleBuiltInFn
{ after(grammarAccess.getBuiltInFnRule()); } 
	 EOF 
;

// Rule BuiltInFn
ruleBuiltInFn 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBuiltInFnAccess().getAlternatives()); }
(rule__BuiltInFn__Alternatives)
{ after(grammarAccess.getBuiltInFnAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType_expression
entryRuleType_expression 
:
{ before(grammarAccess.getType_expressionRule()); }
	 ruleType_expression
{ after(grammarAccess.getType_expressionRule()); } 
	 EOF 
;

// Rule Type_expression
ruleType_expression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getType_expressionAccess().getAlternatives()); }
(rule__Type_expression__Alternatives)
{ after(grammarAccess.getType_expressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasic_type
entryRuleBasic_type 
:
{ before(grammarAccess.getBasic_typeRule()); }
	 ruleBasic_type
{ after(grammarAccess.getBasic_typeRule()); } 
	 EOF 
;

// Rule Basic_type
ruleBasic_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBasic_typeAccess().getGroup()); }
(rule__Basic_type__Group__0)
{ after(grammarAccess.getBasic_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComposite_type
entryRuleComposite_type 
:
{ before(grammarAccess.getComposite_typeRule()); }
	 ruleComposite_type
{ after(grammarAccess.getComposite_typeRule()); } 
	 EOF 
;

// Rule Composite_type
ruleComposite_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComposite_typeAccess().getAlternatives()); }
(rule__Composite_type__Alternatives)
{ after(grammarAccess.getComposite_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapping_type
entryRuleMapping_type 
:
{ before(grammarAccess.getMapping_typeRule()); }
	 ruleMapping_type
{ after(grammarAccess.getMapping_typeRule()); } 
	 EOF 
;

// Rule Mapping_type
ruleMapping_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMapping_typeAccess().getGroup()); }
(rule__Mapping_type__Group__0)
{ after(grammarAccess.getMapping_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSet_type
entryRuleSet_type 
:
{ before(grammarAccess.getSet_typeRule()); }
	 ruleSet_type
{ after(grammarAccess.getSet_typeRule()); } 
	 EOF 
;

// Rule Set_type
ruleSet_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSet_typeAccess().getAlternatives()); }
(rule__Set_type__Alternatives)
{ after(grammarAccess.getSet_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleList_type
entryRuleList_type 
:
{ before(grammarAccess.getList_typeRule()); }
	 ruleList_type
{ after(grammarAccess.getList_typeRule()); } 
	 EOF 
;

// Rule List_type
ruleList_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getList_typeAccess().getAlternatives()); }
(rule__List_type__Alternatives)
{ after(grammarAccess.getList_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecord_type
entryRuleRecord_type 
:
{ before(grammarAccess.getRecord_typeRule()); }
	 ruleRecord_type
{ after(grammarAccess.getRecord_typeRule()); } 
	 EOF 
;

// Rule Record_type
ruleRecord_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRecord_typeAccess().getGroup()); }
(rule__Record_type__Group__0)
{ after(grammarAccess.getRecord_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnion_type
entryRuleUnion_type 
:
{ before(grammarAccess.getUnion_typeRule()); }
	 ruleUnion_type
{ after(grammarAccess.getUnion_typeRule()); } 
	 EOF 
;

// Rule Union_type
ruleUnion_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnion_typeAccess().getGroup()); }
(rule__Union_type__Group__0)
{ after(grammarAccess.getUnion_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleId_type_pair
entryRuleId_type_pair 
:
{ before(grammarAccess.getId_type_pairRule()); }
	 ruleId_type_pair
{ after(grammarAccess.getId_type_pairRule()); } 
	 EOF 
;

// Rule Id_type_pair
ruleId_type_pair 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getId_type_pairAccess().getGroup()); }
(rule__Id_type_pair__Group__0)
{ after(grammarAccess.getId_type_pairAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral 
:
{ before(grammarAccess.getEnumerationLiteralRule()); }
	 ruleEnumerationLiteral
{ after(grammarAccess.getEnumerationLiteralRule()); } 
	 EOF 
;

// Rule EnumerationLiteral
ruleEnumerationLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getEnumerationLiteralAccess().getNameAssignment()); }
(rule__EnumerationLiteral__NameAssignment)
{ after(grammarAccess.getEnumerationLiteralAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement_type
entryRuleElement_type 
:
{ before(grammarAccess.getElement_typeRule()); }
	 ruleElement_type
{ after(grammarAccess.getElement_typeRule()); } 
	 EOF 
;

// Rule Element_type
ruleElement_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getElement_typeAccess().getAlternatives()); }
(rule__Element_type__Alternatives)
{ after(grammarAccess.getElement_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifiers
entryRuleClassifiers 
:
{ before(grammarAccess.getClassifiersRule()); }
	 ruleClassifiers
{ after(grammarAccess.getClassifiersRule()); } 
	 EOF 
;

// Rule Classifiers
ruleClassifiers 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getClassifiersAccess().getAlternatives()); }
(rule__Classifiers__Alternatives)
{ after(grammarAccess.getClassifiersAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleT_classifier_subtypes
entryRuleT_classifier_subtypes 
:
{ before(grammarAccess.getT_classifier_subtypesRule()); }
	 ruleT_classifier_subtypes
{ after(grammarAccess.getT_classifier_subtypesRule()); } 
	 EOF 
;

// Rule T_classifier_subtypes
ruleT_classifier_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getAlternatives()); }
(rule__T_classifier_subtypes__Alternatives)
{ after(grammarAccess.getT_classifier_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstances
entryRuleInstances 
:
{ before(grammarAccess.getInstancesRule()); }
	 ruleInstances
{ after(grammarAccess.getInstancesRule()); } 
	 EOF 
;

// Rule Instances
ruleInstances 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getInstancesAccess().getAlternatives()); }
(rule__Instances__Alternatives)
{ after(grammarAccess.getInstancesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_instance_subtypes
entryRulet_instance_subtypes 
:
{ before(grammarAccess.getT_instance_subtypesRule()); }
	 rulet_instance_subtypes
{ after(grammarAccess.getT_instance_subtypesRule()); } 
	 EOF 
;

// Rule t_instance_subtypes
rulet_instance_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_instance_subtypesAccess().getAlternatives()); }
(rule__T_instance_subtypes__Alternatives)
{ after(grammarAccess.getT_instance_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_subcomponent_subtypes
entryRulet_subcomponent_subtypes 
:
{ before(grammarAccess.getT_subcomponent_subtypesRule()); }
	 rulet_subcomponent_subtypes
{ after(grammarAccess.getT_subcomponent_subtypesRule()); } 
	 EOF 
;

// Rule t_subcomponent_subtypes
rulet_subcomponent_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_subcomponent_subtypesAccess().getAlternatives()); }
(rule__T_subcomponent_subtypes__Alternatives)
{ after(grammarAccess.getT_subcomponent_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_component_subtypes
entryRulet_component_subtypes 
:
{ before(grammarAccess.getT_component_subtypesRule()); }
	 rulet_component_subtypes
{ after(grammarAccess.getT_component_subtypesRule()); } 
	 EOF 
;

// Rule t_component_subtypes
rulet_component_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_component_subtypesAccess().getAlternatives()); }
(rule__T_component_subtypes__Alternatives)
{ after(grammarAccess.getT_component_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_connection_subtypes
entryRulet_connection_subtypes 
:
{ before(grammarAccess.getT_connection_subtypesRule()); }
	 rulet_connection_subtypes
{ after(grammarAccess.getT_connection_subtypesRule()); } 
	 EOF 
;

// Rule t_connection_subtypes
rulet_connection_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_connection_subtypesAccess().getAlternatives()); }
(rule__T_connection_subtypes__Alternatives)
{ after(grammarAccess.getT_connection_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_feature_subtypes
entryRulet_feature_subtypes 
:
{ before(grammarAccess.getT_feature_subtypesRule()); }
	 rulet_feature_subtypes
{ after(grammarAccess.getT_feature_subtypesRule()); } 
	 EOF 
;

// Rule t_feature_subtypes
rulet_feature_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_feature_subtypesAccess().getAlternatives()); }
(rule__T_feature_subtypes__Alternatives)
{ after(grammarAccess.getT_feature_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_access_subtypes
entryRulet_access_subtypes 
:
{ before(grammarAccess.getT_access_subtypesRule()); }
	 rulet_access_subtypes
{ after(grammarAccess.getT_access_subtypesRule()); } 
	 EOF 
;

// Rule t_access_subtypes
rulet_access_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_access_subtypesAccess().getAlternatives()); }
(rule__T_access_subtypes__Alternatives)
{ after(grammarAccess.getT_access_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_port_subtypes
entryRulet_port_subtypes 
:
{ before(grammarAccess.getT_port_subtypesRule()); }
	 rulet_port_subtypes
{ after(grammarAccess.getT_port_subtypesRule()); } 
	 EOF 
;

// Rule t_port_subtypes
rulet_port_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_port_subtypesAccess().getAlternatives()); }
(rule__T_port_subtypes__Alternatives)
{ after(grammarAccess.getT_port_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_flow_spec_subtypes
entryRulet_flow_spec_subtypes 
:
{ before(grammarAccess.getT_flow_spec_subtypesRule()); }
	 rulet_flow_spec_subtypes
{ after(grammarAccess.getT_flow_spec_subtypesRule()); } 
	 EOF 
;

// Rule t_flow_spec_subtypes
rulet_flow_spec_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getAlternatives()); }
(rule__T_flow_spec_subtypes__Alternatives)
{ after(grammarAccess.getT_flow_spec_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_flow_impl_subtypes
entryRulet_flow_impl_subtypes 
:
{ before(grammarAccess.getT_flow_impl_subtypesRule()); }
	 rulet_flow_impl_subtypes
{ after(grammarAccess.getT_flow_impl_subtypesRule()); } 
	 EOF 
;

// Rule t_flow_impl_subtypes
rulet_flow_impl_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getAlternatives()); }
(rule__T_flow_impl_subtypes__Alternatives)
{ after(grammarAccess.getT_flow_impl_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerRange
entryRuleIntegerRange 
:
{ before(grammarAccess.getIntegerRangeRule()); }
	 ruleIntegerRange
{ after(grammarAccess.getIntegerRangeRule()); } 
	 EOF 
;

// Rule IntegerRange
ruleIntegerRange 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegerRangeAccess().getGroup()); }
(rule__IntegerRange__Group__0)
{ after(grammarAccess.getIntegerRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealRange
entryRuleRealRange 
:
{ before(grammarAccess.getRealRangeRule()); }
	 ruleRealRange
{ after(grammarAccess.getRealRangeRule()); } 
	 EOF 
;

// Rule RealRange
ruleRealRange 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRealRangeAccess().getGroup()); }
(rule__RealRange__Group__0)
{ after(grammarAccess.getRealRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedIntegerType
entryRuleUnnamedIntegerType 
:
{ before(grammarAccess.getUnnamedIntegerTypeRule()); }
	 ruleUnnamedIntegerType
{ after(grammarAccess.getUnnamedIntegerTypeRule()); } 
	 EOF 
;

// Rule UnnamedIntegerType
ruleUnnamedIntegerType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getGroup()); }
(rule__UnnamedIntegerType__Group__0)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedRealType
entryRuleUnnamedRealType 
:
{ before(grammarAccess.getUnnamedRealTypeRule()); }
	 ruleUnnamedRealType
{ after(grammarAccess.getUnnamedRealTypeRule()); } 
	 EOF 
;

// Rule UnnamedRealType
ruleUnnamedRealType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getGroup()); }
(rule__UnnamedRealType__Group__0)
{ after(grammarAccess.getUnnamedRealTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedUnitsType
entryRuleUnnamedUnitsType 
:
{ before(grammarAccess.getUnnamedUnitsTypeRule()); }
	 ruleUnnamedUnitsType
{ after(grammarAccess.getUnnamedUnitsTypeRule()); } 
	 EOF 
;

// Rule UnnamedUnitsType
ruleUnnamedUnitsType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getGroup()); }
(rule__UnnamedUnitsType__Group__0)
{ after(grammarAccess.getUnnamedUnitsTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitLiteral
entryRuleUnitLiteral 
:
{ before(grammarAccess.getUnitLiteralRule()); }
	 ruleUnitLiteral
{ after(grammarAccess.getUnitLiteralRule()); } 
	 EOF 
;

// Rule UnitLiteral
ruleUnitLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnitLiteralAccess().getNameAssignment()); }
(rule__UnitLiteral__NameAssignment)
{ after(grammarAccess.getUnitLiteralAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitLiteralConversion
entryRuleUnitLiteralConversion 
:
{ before(grammarAccess.getUnitLiteralConversionRule()); }
	 ruleUnitLiteralConversion
{ after(grammarAccess.getUnitLiteralConversionRule()); } 
	 EOF 
;

// Rule UnitLiteralConversion
ruleUnitLiteralConversion 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getGroup()); }
(rule__UnitLiteralConversion__Group__0)
{ after(grammarAccess.getUnitLiteralConversionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedBooleanType
entryRuleUnnamedBooleanType 
:
{ before(grammarAccess.getUnnamedBooleanTypeRule()); }
	 ruleUnnamedBooleanType
{ after(grammarAccess.getUnnamedBooleanTypeRule()); } 
	 EOF 
;

// Rule UnnamedBooleanType
ruleUnnamedBooleanType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedBooleanTypeAccess().getGroup()); }
(rule__UnnamedBooleanType__Group__0)
{ after(grammarAccess.getUnnamedBooleanTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberValue
entryRuleNumberValue 
:
{ before(grammarAccess.getNumberValueRule()); }
	 ruleNumberValue
{ after(grammarAccess.getNumberValueRule()); } 
	 EOF 
;

// Rule NumberValue
ruleNumberValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumberValueAccess().getAlternatives()); }
(rule__NumberValue__Alternatives)
{ after(grammarAccess.getNumberValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLit
entryRuleRealLit 
:
{ before(grammarAccess.getRealLitRule()); }
	 ruleRealLit
{ after(grammarAccess.getRealLitRule()); } 
	 EOF 
;

// Rule RealLit
ruleRealLit 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRealLitAccess().getValueAssignment()); }
(rule__RealLit__ValueAssignment)
{ after(grammarAccess.getRealLitAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLit
entryRuleIntegerLit 
:
{ before(grammarAccess.getIntegerLitRule()); }
	 ruleIntegerLit
{ after(grammarAccess.getIntegerLitRule()); } 
	 EOF 
;

// Rule IntegerLit
ruleIntegerLit 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegerLitAccess().getValueAssignment()); }
(rule__IntegerLit__ValueAssignment)
{ after(grammarAccess.getIntegerLitAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedStringType
entryRuleUnnamedStringType 
:
{ before(grammarAccess.getUnnamedStringTypeRule()); }
	 ruleUnnamedStringType
{ after(grammarAccess.getUnnamedStringTypeRule()); } 
	 EOF 
;

// Rule UnnamedStringType
ruleUnnamedStringType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedStringTypeAccess().getGroup()); }
(rule__UnnamedStringType__Group__0)
{ after(grammarAccess.getUnnamedStringTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedEnumerationType
entryRuleUnnamedEnumerationType 
:
{ before(grammarAccess.getUnnamedEnumerationTypeRule()); }
	 ruleUnnamedEnumerationType
{ after(grammarAccess.getUnnamedEnumerationTypeRule()); } 
	 EOF 
;

// Rule UnnamedEnumerationType
ruleUnnamedEnumerationType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getGroup()); }
(rule__UnnamedEnumerationType__Group__0)
{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedRangeType
entryRuleUnnamedRangeType 
:
{ before(grammarAccess.getUnnamedRangeTypeRule()); }
	 ruleUnnamedRangeType
{ after(grammarAccess.getUnnamedRangeTypeRule()); } 
	 EOF 
;

// Rule UnnamedRangeType
ruleUnnamedRangeType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getGroup()); }
(rule__UnnamedRangeType__Group__0)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQCREF
entryRuleFQCREF 
:
{ before(grammarAccess.getFQCREFRule()); }
	 ruleFQCREF
{ after(grammarAccess.getFQCREFRule()); } 
	 EOF 
;

// Rule FQCREF
ruleFQCREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFQCREFAccess().getGroup()); }
(rule__FQCREF__Group__0)
{ after(grammarAccess.getFQCREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleContainedPropertyAssociation
entryRuleContainedPropertyAssociation 
:
{ before(grammarAccess.getContainedPropertyAssociationRule()); }
	 ruleContainedPropertyAssociation
{ after(grammarAccess.getContainedPropertyAssociationRule()); } 
	 EOF 
;

// Rule ContainedPropertyAssociation
ruleContainedPropertyAssociation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup()); }
(rule__ContainedPropertyAssociation__Group__0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleContainmentPath
entryRuleContainmentPath 
:
{ before(grammarAccess.getContainmentPathRule()); }
	 ruleContainmentPath
{ after(grammarAccess.getContainmentPathRule()); } 
	 EOF 
;

// Rule ContainmentPath
ruleContainmentPath 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainmentPathAccess().getPathAssignment()); }
(rule__ContainmentPath__PathAssignment)
{ after(grammarAccess.getContainmentPathAccess().getPathAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleOptionalModalPropertyValue
entryRuleOptionalModalPropertyValue 
:
{ before(grammarAccess.getOptionalModalPropertyValueRule()); }
	 ruleOptionalModalPropertyValue
{ after(grammarAccess.getOptionalModalPropertyValueRule()); } 
	 EOF 
;

// Rule OptionalModalPropertyValue
ruleOptionalModalPropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup()); }
(rule__OptionalModalPropertyValue__Group__0)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyValue
entryRulePropertyValue 
:
{ before(grammarAccess.getPropertyValueRule()); }
	 rulePropertyValue
{ after(grammarAccess.getPropertyValueRule()); } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyValueAccess().getOwnedValueAssignment()); }
(rule__PropertyValue__OwnedValueAssignment)
{ after(grammarAccess.getPropertyValueAccess().getOwnedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyExpression
entryRulePropertyExpression 
:
{ before(grammarAccess.getPropertyExpressionRule()); }
	 rulePropertyExpression
{ after(grammarAccess.getPropertyExpressionRule()); } 
	 EOF 
;

// Rule PropertyExpression
rulePropertyExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyExpressionAccess().getAlternatives()); }
(rule__PropertyExpression__Alternatives)
{ after(grammarAccess.getPropertyExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralorReferenceTerm
entryRuleLiteralorReferenceTerm 
:
{ before(grammarAccess.getLiteralorReferenceTermRule()); }
	 ruleLiteralorReferenceTerm
{ after(grammarAccess.getLiteralorReferenceTermRule()); } 
	 EOF 
;

// Rule LiteralorReferenceTerm
ruleLiteralorReferenceTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAssignment()); }
(rule__LiteralorReferenceTerm__NamedValueAssignment)
{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantValue
entryRuleConstantValue 
:
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstantValueAccess().getNamedValueAssignment()); }
(rule__ConstantValue__NamedValueAssignment)
{ after(grammarAccess.getConstantValueAccess().getNamedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceTerm
entryRuleReferenceTerm 
:
{ before(grammarAccess.getReferenceTermRule()); }
	 ruleReferenceTerm
{ after(grammarAccess.getReferenceTermRule()); } 
	 EOF 
;

// Rule ReferenceTerm
ruleReferenceTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getReferenceTermAccess().getGroup()); }
(rule__ReferenceTerm__Group__0)
{ after(grammarAccess.getReferenceTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordTerm
entryRuleRecordTerm 
:
{ before(grammarAccess.getRecordTermRule()); }
	 ruleRecordTerm
{ after(grammarAccess.getRecordTermRule()); } 
	 EOF 
;

// Rule RecordTerm
ruleRecordTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRecordTermAccess().getGroup()); }
(rule__RecordTerm__Group__0)
{ after(grammarAccess.getRecordTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleComputedTerm
entryRuleComputedTerm 
:
{ before(grammarAccess.getComputedTermRule()); }
	 ruleComputedTerm
{ after(grammarAccess.getComputedTermRule()); } 
	 EOF 
;

// Rule ComputedTerm
ruleComputedTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComputedTermAccess().getGroup()); }
(rule__ComputedTerm__Group__0)
{ after(grammarAccess.getComputedTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentClassifierTerm
entryRuleComponentClassifierTerm 
:
{ before(grammarAccess.getComponentClassifierTermRule()); }
	 ruleComponentClassifierTerm
{ after(grammarAccess.getComponentClassifierTermRule()); } 
	 EOF 
;

// Rule ComponentClassifierTerm
ruleComponentClassifierTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComponentClassifierTermAccess().getGroup()); }
(rule__ComponentClassifierTerm__Group__0)
{ after(grammarAccess.getComponentClassifierTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListTerm
entryRuleListTerm 
:
{ before(grammarAccess.getListTermRule()); }
	 ruleListTerm
{ after(grammarAccess.getListTermRule()); } 
	 EOF 
;

// Rule ListTerm
ruleListTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getListTermAccess().getGroup()); }
(rule__ListTerm__Group__0)
{ after(grammarAccess.getListTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldPropertyAssociation
entryRuleFieldPropertyAssociation 
:
{ before(grammarAccess.getFieldPropertyAssociationRule()); }
	 ruleFieldPropertyAssociation
{ after(grammarAccess.getFieldPropertyAssociationRule()); } 
	 EOF 
;

// Rule FieldPropertyAssociation
ruleFieldPropertyAssociation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getGroup()); }
(rule__FieldPropertyAssociation__Group__0)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainmentPathElement
entryRuleContainmentPathElement 
:
{ before(grammarAccess.getContainmentPathElementRule()); }
	 ruleContainmentPathElement
{ after(grammarAccess.getContainmentPathElementRule()); } 
	 EOF 
;

// Rule ContainmentPathElement
ruleContainmentPathElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup()); }
(rule__ContainmentPathElement__Group__0)
{ after(grammarAccess.getContainmentPathElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulePlusMinus
entryRulePlusMinus 
:
{ before(grammarAccess.getPlusMinusRule()); }
	 rulePlusMinus
{ after(grammarAccess.getPlusMinusRule()); } 
	 EOF 
;

// Rule PlusMinus
rulePlusMinus 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPlusMinusAccess().getAlternatives()); }
(rule__PlusMinus__Alternatives)
{ after(grammarAccess.getPlusMinusAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringTerm
entryRuleStringTerm 
:
{ before(grammarAccess.getStringTermRule()); }
	 ruleStringTerm
{ after(grammarAccess.getStringTermRule()); } 
	 EOF 
;

// Rule StringTerm
ruleStringTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStringTermAccess().getValueAssignment()); }
(rule__StringTerm__ValueAssignment)
{ after(grammarAccess.getStringTermAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoQuoteString
entryRuleNoQuoteString 
:
{ before(grammarAccess.getNoQuoteStringRule()); }
	 ruleNoQuoteString
{ after(grammarAccess.getNoQuoteStringRule()); } 
	 EOF 
;

// Rule NoQuoteString
ruleNoQuoteString 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayRange
entryRuleArrayRange 
:
{ before(grammarAccess.getArrayRangeRule()); }
	 ruleArrayRange
{ after(grammarAccess.getArrayRangeRule()); } 
	 EOF 
;

// Rule ArrayRange
ruleArrayRange 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArrayRangeAccess().getGroup()); }
(rule__ArrayRange__Group__0)
{ after(grammarAccess.getArrayRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedConstant
entryRuleSignedConstant 
:
{ before(grammarAccess.getSignedConstantRule()); }
	 ruleSignedConstant
{ after(grammarAccess.getSignedConstantRule()); } 
	 EOF 
;

// Rule SignedConstant
ruleSignedConstant 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedConstantAccess().getGroup()); }
(rule__SignedConstant__Group__0)
{ after(grammarAccess.getSignedConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedInt
entryRuleSignedInt 
:
{ before(grammarAccess.getSignedIntRule()); }
	 ruleSignedInt
{ after(grammarAccess.getSignedIntRule()); } 
	 EOF 
;

// Rule SignedInt
ruleSignedInt 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedIntAccess().getGroup()); }
(rule__SignedInt__Group__0)
{ after(grammarAccess.getSignedIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedReal
entryRuleSignedReal 
:
{ before(grammarAccess.getSignedRealRule()); }
	 ruleSignedReal
{ after(grammarAccess.getSignedRealRule()); } 
	 EOF 
;

// Rule SignedReal
ruleSignedReal 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedRealAccess().getGroup()); }
(rule__SignedReal__Group__0)
{ after(grammarAccess.getSignedRealAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericRangeTerm
entryRuleNumericRangeTerm 
:
{ before(grammarAccess.getNumericRangeTermRule()); }
	 ruleNumericRangeTerm
{ after(grammarAccess.getNumericRangeTermRule()); } 
	 EOF 
;

// Rule NumericRangeTerm
ruleNumericRangeTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumericRangeTermAccess().getGroup()); }
(rule__NumericRangeTerm__Group__0)
{ after(grammarAccess.getNumericRangeTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumAlt
entryRuleNumAlt 
:
{ before(grammarAccess.getNumAltRule()); }
	 ruleNumAlt
{ after(grammarAccess.getNumAltRule()); } 
	 EOF 
;

// Rule NumAlt
ruleNumAlt 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumAltAccess().getAlternatives()); }
(rule__NumAlt__Alternatives)
{ after(grammarAccess.getNumAltAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTVALUE
entryRuleINTVALUE 
:
{ before(grammarAccess.getINTVALUERule()); }
	 ruleINTVALUE
{ after(grammarAccess.getINTVALUERule()); } 
	 EOF 
;

// Rule INTVALUE
ruleINTVALUE 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getINTVALUEAccess().getINTEGER_LITTerminalRuleCall()); }
	RULE_INTEGER_LIT
{ after(grammarAccess.getINTVALUEAccess().getINTEGER_LITTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQPREF
entryRuleQPREF 
:
{ before(grammarAccess.getQPREFRule()); }
	 ruleQPREF
{ after(grammarAccess.getQPREFRule()); } 
	 EOF 
;

// Rule QPREF
ruleQPREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQPREFAccess().getGroup()); }
(rule__QPREF__Group__0)
{ after(grammarAccess.getQPREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQCREF
entryRuleQCREF 
:
{ before(grammarAccess.getQCREFRule()); }
	 ruleQCREF
{ after(grammarAccess.getQCREFRule()); } 
	 EOF 
;

// Rule QCREF
ruleQCREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQCREFAccess().getGroup()); }
(rule__QCREF__Group__0)
{ after(grammarAccess.getQCREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTAR
entryRuleSTAR 
:
{ before(grammarAccess.getSTARRule()); }
	 ruleSTAR
{ after(grammarAccess.getSTARRule()); } 
	 EOF 
;

// Rule STAR
ruleSTAR 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSTARAccess().getAsteriskKeyword()); }

	Asterisk 

{ after(grammarAccess.getSTARAccess().getAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MCSGrammarRoot__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getGroup_0()); }
(rule__MCSGrammarRoot__Group_0__0)
{ after(grammarAccess.getMCSGrammarRootAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMCSGrammarRootAccess().getGroup_1()); }
(rule__MCSGrammarRoot__Group_1__0)
{ after(grammarAccess.getMCSGrammarRootAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getMCSGrammarRootAccess().getGroup_2()); }
(rule__MCSGrammarRoot__Group_2__0)
{ after(grammarAccess.getMCSGrammarRootAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_root__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_rootAccess().getNilrootAssignment_3_0()); }
(rule__Theorem_root__NilrootAssignment_3_0)
{ after(grammarAccess.getTheorem_rootAccess().getNilrootAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getTheorem_rootAccess().getClassifierAssignment_3_1()); }
(rule__Theorem_root__ClassifierAssignment_3_1)
{ after(grammarAccess.getTheorem_rootAccess().getClassifierAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getGroup_0()); }
(rule__TextParm__Group_0__0)
{ after(grammarAccess.getTextParmAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTextParmAccess().getGroup_1()); }
(rule__TextParm__Group_1__0)
{ after(grammarAccess.getTextParmAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__McsTypedName__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcsTypedNameAccess().getGroup_1_0()); }
(rule__McsTypedName__Group_1_0__0)
{ after(grammarAccess.getMcsTypedNameAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getMcsTypedNameAccess().getGroup_1_1()); }
(rule__McsTypedName__Group_1_1__0)
{ after(grammarAccess.getMcsTypedNameAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getCheckKeyword_0_0()); }

	Check 

{ after(grammarAccess.getTheorem_callAccess().getCheckKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getTheorem_callAccess().getProveKeyword_0_1()); }

	Prove 

{ after(grammarAccess.getTheorem_callAccess().getProveKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getNilKeyword_2_1_0()); }

	Nil 

{ after(grammarAccess.getTheorem_callAccess().getNilKeyword_2_1_0()); }
)

    |(
{ before(grammarAccess.getTheorem_callAccess().getCrootAssignment_2_1_1()); }
(rule__Theorem_call__CrootAssignment_2_1_1)
{ after(grammarAccess.getTheorem_callAccess().getCrootAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier_literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifier_literalAccess().getClasslitAssignment_0()); }
(rule__Classifier_literal__ClasslitAssignment_0)
{ after(grammarAccess.getClassifier_literalAccess().getClasslitAssignment_0()); }
)

    |(
{ before(grammarAccess.getClassifier_literalAccess().getNamerefAssignment_1()); }
(rule__Classifier_literal__NamerefAssignment_1)
{ after(grammarAccess.getClassifier_literalAccess().getNamerefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__LowerBoundAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getLowerBoundIntegerTermParserRuleCall_0_0_0()); }
	ruleIntegerTerm
{ after(grammarAccess.getRangeAccess().getLowerBoundIntegerTermParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getRangeAccess().getLowerBoundRealTermParserRuleCall_0_0_1()); }
	ruleRealTerm
{ after(grammarAccess.getRangeAccess().getLowerBoundRealTermParserRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__UpperBoundAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getUpperBoundIntegerTermParserRuleCall_2_0_0()); }
	ruleIntegerTerm
{ after(grammarAccess.getRangeAccess().getUpperBoundIntegerTermParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getRangeAccess().getUpperBoundRealTermParserRuleCall_2_0_1()); }
	ruleRealTerm
{ after(grammarAccess.getRangeAccess().getUpperBoundRealTermParserRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChain__Alternatives_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainAccess().getBuiltinAssignment_1_0_1_0()); }
(rule__MethodChain__BuiltinAssignment_1_0_1_0)
{ after(grammarAccess.getMethodChainAccess().getBuiltinAssignment_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getMethodChainAccess().getMethodAssignment_1_0_1_1()); }
(rule__MethodChain__MethodAssignment_1_0_1_1)
{ after(grammarAccess.getMethodChainAccess().getMethodAssignment_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Alternatives_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1_0()); }
(rule__AndExpr__OpAssignment_1_0_0_1_0)
{ after(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1_0()); }
)

    |(
{ before(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1_1()); }
(rule__AndExpr__OpAssignment_1_0_0_1_1)
{ after(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_0()); }

	LessThanSign 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_1()); }

	LessThanSignEqualsSign 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_2()); }

	GreaterThanSign 

{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_3()); }

	GreaterThanSignEqualsSign 

{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getEqualsSignKeyword_4()); }

	EqualsSign 

{ after(grammarAccess.getRelationalOpAccess().getEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getRelationalOpAccess().getLessThanSignGreaterThanSignKeyword_5()); }

	LessThanSignGreaterThanSign 

{ after(grammarAccess.getRelationalOpAccess().getLessThanSignGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__OpAlternatives_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getOpPlusSignKeyword_1_0_0_1_0_0()); }

	PlusSign 

{ after(grammarAccess.getPlusExprAccess().getOpPlusSignKeyword_1_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getPlusExprAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1()); }

	HyphenMinus 

{ after(grammarAccess.getPlusExprAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__OpAlternatives_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getOpAsteriskKeyword_1_0_0_1_0_0()); }

	Asterisk 

{ after(grammarAccess.getTimesExprAccess().getOpAsteriskKeyword_1_0_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getTimesExprAccess().getOpSolidusKeyword_1_0_0_1_0_1()); }

	Solidus 

{ after(grammarAccess.getTimesExprAccess().getOpSolidusKeyword_1_0_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getTimesExprAccess().getOpPercentSignKeyword_1_0_0_1_0_2()); }

	PercentSign 

{ after(grammarAccess.getTimesExprAccess().getOpPercentSignKeyword_1_0_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getGroup_0()); }
(rule__PrefixExpr__Group_0__0)
{ after(grammarAccess.getPrefixExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrefixExprAccess().getPostCastExprParserRuleCall_1()); }
	rulePostCastExpr
{ after(grammarAccess.getPrefixExprAccess().getPostCastExprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__OpAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getOpHyphenMinusKeyword_0_1_0_0()); }

	HyphenMinus 

{ after(grammarAccess.getPrefixExprAccess().getOpHyphenMinusKeyword_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getPrefixExprAccess().getOpNotKeyword_0_1_0_1()); }

	Not 

{ after(grammarAccess.getPrefixExprAccess().getOpNotKeyword_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSNameExpr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSNameExprAccess().getRootAssignment_1_0()); }
(rule__MCSNameExpr__RootAssignment_1_0)
{ after(grammarAccess.getMCSNameExprAccess().getRootAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getMCSNameExprAccess().getIrootAssignment_1_1()); }
(rule__MCSNameExpr__IrootAssignment_1_1)
{ after(grammarAccess.getMCSNameExprAccess().getIrootAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getMCSNameExprAccess().getNilAssignment_1_2()); }
(rule__MCSNameExpr__NilAssignment_1_2)
{ after(grammarAccess.getMCSNameExprAccess().getNilAssignment_1_2()); }
)

    |(
{ before(grammarAccess.getMCSNameExprAccess().getEmptyAssignment_1_3()); }
(rule__MCSNameExpr__EmptyAssignment_1_3)
{ after(grammarAccess.getMCSNameExprAccess().getEmptyAssignment_1_3()); }
)

    |(
{ before(grammarAccess.getMCSNameExprAccess().getAllmodesAssignment_1_4()); }
(rule__MCSNameExpr__AllmodesAssignment_1_4)
{ after(grammarAccess.getMCSNameExprAccess().getAllmodesAssignment_1_4()); }
)

    |(
{ before(grammarAccess.getMCSNameExprAccess().getTypednamerefAssignment_1_5()); }
(rule__MCSNameExpr__TypednamerefAssignment_1_5)
{ after(grammarAccess.getMCSNameExprAccess().getTypednamerefAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getMCSNameExprParserRuleCall_0()); }
	ruleMCSNameExpr
{ after(grammarAccess.getExpression_termAccess().getMCSNameExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_1()); }
(rule__Expression_term__Group_1__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_2()); }
(rule__Expression_term__Group_2__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_3()); }
(rule__Expression_term__Group_3__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_4()); }
(rule__Expression_term__Group_4__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_5()); }
(rule__Expression_term__Group_5__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_6()); }
(rule__Expression_term__Group_6__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_7()); }
(rule__Expression_term__Group_7__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_8()); }
(rule__Expression_term__Group_8__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_9()); }
(rule__Expression_term__Group_9__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_10()); }
(rule__Expression_term__Group_10__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_11()); }
(rule__Expression_term__Group_11__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_12()); }
(rule__Expression_term__Group_12__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_13()); }
(rule__Expression_term__Group_13__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_14()); }
(rule__Expression_term__Group_14__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_14()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_15()); }
(rule__Expression_term__Group_15__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_15()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_16()); }
(rule__Expression_term__Group_16__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_16()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_17()); }
(rule__Expression_term__Group_17__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_17()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_18()); }
(rule__Expression_term__Group_18__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_18()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_19()); }
(rule__Expression_term__Group_19__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__QuantAlternatives_11_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getQuantForallKeyword_11_1_0_0()); }

	Forall 

{ after(grammarAccess.getExpression_termAccess().getQuantForallKeyword_11_1_0_0()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getQuantForeachKeyword_11_1_0_1()); }

	Foreach 

{ after(grammarAccess.getExpression_termAccess().getQuantForeachKeyword_11_1_0_1()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getQuantExistsKeyword_11_1_0_2()); }

	Exists 

{ after(grammarAccess.getExpression_termAccess().getQuantExistsKeyword_11_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Alternatives_15_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getGroup_15_4_0()); }
(rule__Expression_term__Group_15_4_0__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_15_4_0()); }
)

    |(
{ before(grammarAccess.getExpression_termAccess().getGroup_15_4_1()); }
(rule__Expression_term__Group_15_4_1__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_15_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFn__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnAccess().getHas_rangeKeyword_0()); }

	Has_range 

{ after(grammarAccess.getBuiltInFnAccess().getHas_rangeKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getRangeKeyword_1()); }

	Range 

{ after(grammarAccess.getBuiltInFnAccess().getRangeKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getFloorKeyword_2()); }

	Floor 

{ after(grammarAccess.getBuiltInFnAccess().getFloorKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getCeilingKeyword_3()); }

	Ceiling 

{ after(grammarAccess.getBuiltInFnAccess().getCeilingKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_unitsKeyword_4()); }

	Has_units 

{ after(grammarAccess.getBuiltInFnAccess().getHas_unitsKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getUnit_literalKeyword_5()); }

	Unit_literal 

{ after(grammarAccess.getBuiltInFnAccess().getUnit_literalKeyword_5()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getUpperKeyword_6()); }

	Upper 

{ after(grammarAccess.getBuiltInFnAccess().getUpperKeyword_6()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getLowerKeyword_7()); }

	Lower 

{ after(grammarAccess.getBuiltInFnAccess().getLowerKeyword_7()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_deltaKeyword_8()); }

	Has_delta 

{ after(grammarAccess.getBuiltInFnAccess().getHas_deltaKeyword_8()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getDeltaKeyword_9()); }

	Delta 

{ after(grammarAccess.getBuiltInFnAccess().getDeltaKeyword_9()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getConcatKeyword_10()); }

	Concat 

{ after(grammarAccess.getBuiltInFnAccess().getConcatKeyword_10()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getEqKeyword_11()); }

	Eq 

{ after(grammarAccess.getBuiltInFnAccess().getEqKeyword_11()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getLessKeyword_12()); }

	Less 

{ after(grammarAccess.getBuiltInFnAccess().getLessKeyword_12()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getCase_eqKeyword_13()); }

	Case_eq 

{ after(grammarAccess.getBuiltInFnAccess().getCase_eqKeyword_13()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getCase_lessKeyword_14()); }

	Case_less 

{ after(grammarAccess.getBuiltInFnAccess().getCase_lessKeyword_14()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getInKeyword_15()); }

	In 

{ after(grammarAccess.getBuiltInFnAccess().getInKeyword_15()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getUnionKeyword_16()); }

	Union 

{ after(grammarAccess.getBuiltInFnAccess().getUnionKeyword_16()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIntersectKeyword_17()); }

	Intersect 

{ after(grammarAccess.getBuiltInFnAccess().getIntersectKeyword_17()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_memberKeyword_18()); }

	Has_member 

{ after(grammarAccess.getBuiltInFnAccess().getHas_memberKeyword_18()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getSizeKeyword_19()); }

	Size 

{ after(grammarAccess.getBuiltInFnAccess().getSizeKeyword_19()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getSumKeyword_20()); }

	Sum 

{ after(grammarAccess.getBuiltInFnAccess().getSumKeyword_20()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getMaxKeyword_21()); }

	Max 

{ after(grammarAccess.getBuiltInFnAccess().getMaxKeyword_21()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getMinKeyword_22()); }

	Min 

{ after(grammarAccess.getBuiltInFnAccess().getMinKeyword_22()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getGetKeyword_23()); }

	Get 

{ after(grammarAccess.getBuiltInFnAccess().getGetKeyword_23()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getSublistKeyword_24()); }

	Sublist 

{ after(grammarAccess.getBuiltInFnAccess().getSublistKeyword_24()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getJoinKeyword_25()); }

	Join 

{ after(grammarAccess.getBuiltInFnAccess().getJoinKeyword_25()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getAs_setKeyword_26()); }

	As_set 

{ after(grammarAccess.getBuiltInFnAccess().getAs_setKeyword_26()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getKeyKeyword_27()); }

	Key 

{ after(grammarAccess.getBuiltInFnAccess().getKeyKeyword_27()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getValKeyword_28()); }

	Val 

{ after(grammarAccess.getBuiltInFnAccess().getValKeyword_28()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getQualified_nameKeyword_29()); }

	Qualified_name 

{ after(grammarAccess.getBuiltInFnAccess().getQualified_nameKeyword_29()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getLocal_nameKeyword_30()); }

	Local_name 

{ after(grammarAccess.getBuiltInFnAccess().getLocal_nameKeyword_30()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getPath_name_ofKeyword_31()); }

	Path_name_of 

{ after(grammarAccess.getBuiltInFnAccess().getPath_name_ofKeyword_31()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getPackage_nameKeyword_32()); }

	Package_name 

{ after(grammarAccess.getBuiltInFnAccess().getPackage_nameKeyword_32()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_owned_byKeyword_33()); }

	Is_owned_by 

{ after(grammarAccess.getBuiltInFnAccess().getIs_owned_byKeyword_33()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_parentKeyword_34()); }

	Has_parent 

{ after(grammarAccess.getBuiltInFnAccess().getHas_parentKeyword_34()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getParentKeyword_35()); }

	Parent 

{ after(grammarAccess.getBuiltInFnAccess().getParentKeyword_35()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getOwnerKeyword_36()); }

	Owner 

{ after(grammarAccess.getBuiltInFnAccess().getOwnerKeyword_36()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getEqualKeyword_37()); }

	Equal 

{ after(grammarAccess.getBuiltInFnAccess().getEqualKeyword_37()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getElement_typeKeyword_38()); }

	Element_type 

{ after(grammarAccess.getBuiltInFnAccess().getElement_typeKeyword_38()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_propertyKeyword_39()); }

	Has_property 

{ after(grammarAccess.getBuiltInFnAccess().getHas_propertyKeyword_39()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getNumberSignQuestionMarkKeyword_40()); }

	NumberSignQuestionMark 

{ after(grammarAccess.getBuiltInFnAccess().getNumberSignQuestionMarkKeyword_40()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getPropertyKeyword_41()); }

	Property 

{ after(grammarAccess.getBuiltInFnAccess().getPropertyKeyword_41()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getNumberSignKeyword_42()); }

	NumberSign 

{ after(grammarAccess.getBuiltInFnAccess().getNumberSignKeyword_42()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getImportsKeyword_43()); }

	Imports 

{ after(grammarAccess.getBuiltInFnAccess().getImportsKeyword_43()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getClassifiersKeyword_44()); }

	Classifiers 

{ after(grammarAccess.getBuiltInFnAccess().getClassifiersKeyword_44()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_extendsKeyword_45()); }

	Has_extends 

{ after(grammarAccess.getBuiltInFnAccess().getHas_extendsKeyword_45()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getExtendsKeyword_46()); }

	Extends 

{ after(grammarAccess.getBuiltInFnAccess().getExtendsKeyword_46()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getCategoryKeyword_47()); }

	Category 

{ after(grammarAccess.getBuiltInFnAccess().getCategoryKeyword_47()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_bindingsKeyword_48()); }

	Has_bindings 

{ after(grammarAccess.getBuiltInFnAccess().getHas_bindingsKeyword_48()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getBindings_mapKeyword_49()); }

	Bindings_map 

{ after(grammarAccess.getBuiltInFnAccess().getBindings_mapKeyword_49()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getComponent_typeKeyword_50()); }

	Component_type 

{ after(grammarAccess.getBuiltInFnAccess().getComponent_typeKeyword_50()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_of_typeKeyword_51()); }

	Is_of_type 

{ after(grammarAccess.getBuiltInFnAccess().getIs_of_typeKeyword_51()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_inverseKeyword_52()); }

	Has_inverse 

{ after(grammarAccess.getBuiltInFnAccess().getHas_inverseKeyword_52()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getInverseKeyword_53()); }

	Inverse 

{ after(grammarAccess.getBuiltInFnAccess().getInverseKeyword_53()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getContanedKeyword_54()); }

	Contaned 

{ after(grammarAccess.getBuiltInFnAccess().getContanedKeyword_54()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIn_modesKeyword_55()); }

	In_modes 

{ after(grammarAccess.getBuiltInFnAccess().getIn_modesKeyword_55()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_prototype_refKeyword_56()); }

	Is_prototype_ref 

{ after(grammarAccess.getBuiltInFnAccess().getIs_prototype_refKeyword_56()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getPrototypeKeyword_57()); }

	Prototype 

{ after(grammarAccess.getBuiltInFnAccess().getPrototypeKeyword_57()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_c_type_instanceKeyword_58()); }

	Is_c_type_instance 

{ after(grammarAccess.getBuiltInFnAccess().getIs_c_type_instanceKeyword_58()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getC_typeKeyword_59()); }

	C_type 

{ after(grammarAccess.getBuiltInFnAccess().getC_typeKeyword_59()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getClassKeyword_60()); }

	Class 

{ after(grammarAccess.getBuiltInFnAccess().getClassKeyword_60()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getArray_cardinalKeyword_61()); }

	Array_cardinal 

{ after(grammarAccess.getBuiltInFnAccess().getArray_cardinalKeyword_61()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getModesKeyword_62()); }

	Modes 

{ after(grammarAccess.getBuiltInFnAccess().getModesKeyword_62()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getModes_mapKeyword_63()); }

	Modes_map 

{ after(grammarAccess.getBuiltInFnAccess().getModes_mapKeyword_63()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getMode_state_machineKeyword_64()); }

	Mode_state_machine 

{ after(grammarAccess.getBuiltInFnAccess().getMode_state_machineKeyword_64()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getMode_transitionsKeyword_65()); }

	Mode_transitions 

{ after(grammarAccess.getBuiltInFnAccess().getMode_transitionsKeyword_65()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getSubcomponentsKeyword_66()); }

	Subcomponents 

{ after(grammarAccess.getBuiltInFnAccess().getSubcomponentsKeyword_66()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getInstancesKeyword_67()); }

	Instances 

{ after(grammarAccess.getBuiltInFnAccess().getInstancesKeyword_67()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getFeaturesKeyword_68()); }

	Features 

{ after(grammarAccess.getBuiltInFnAccess().getFeaturesKeyword_68()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getFlat_featuresKeyword_69()); }

	Flat_features 

{ after(grammarAccess.getBuiltInFnAccess().getFlat_featuresKeyword_69()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getConnectionsKeyword_70()); }

	Connections 

{ after(grammarAccess.getBuiltInFnAccess().getConnectionsKeyword_70()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getCall_targetKeyword_71()); }

	Call_target 

{ after(grammarAccess.getBuiltInFnAccess().getCall_targetKeyword_71()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_bidirectionalKeyword_72()); }

	Is_bidirectional 

{ after(grammarAccess.getBuiltInFnAccess().getIs_bidirectionalKeyword_72()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getSourceKeyword_73()); }

	Source 

{ after(grammarAccess.getBuiltInFnAccess().getSourceKeyword_73()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getDestinationKeyword_74()); }

	Destination 

{ after(grammarAccess.getBuiltInFnAccess().getDestinationKeyword_74()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_refinedKeyword_75()); }

	Is_refined 

{ after(grammarAccess.getBuiltInFnAccess().getIs_refinedKeyword_75()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_partialKeyword_76()); }

	Is_partial 

{ after(grammarAccess.getBuiltInFnAccess().getIs_partialKeyword_76()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_prototype_refKeyword_77()); }

	Has_prototype_ref 

{ after(grammarAccess.getBuiltInFnAccess().getHas_prototype_refKeyword_77()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_classifier_typeKeyword_78()); }

	Has_classifier_type 

{ after(grammarAccess.getBuiltInFnAccess().getHas_classifier_typeKeyword_78()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getClassifier_typeKeyword_79()); }

	Classifier_type 

{ after(grammarAccess.getBuiltInFnAccess().getClassifier_typeKeyword_79()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getDirectionKeyword_80()); }

	Direction 

{ after(grammarAccess.getBuiltInFnAccess().getDirectionKeyword_80()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_inverseKeyword_81()); }

	Is_inverse 

{ after(grammarAccess.getBuiltInFnAccess().getIs_inverseKeyword_81()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getFeatureKeyword_82()); }

	Feature 

{ after(grammarAccess.getBuiltInFnAccess().getFeatureKeyword_82()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getPathKeyword_83()); }

	Path 

{ after(grammarAccess.getBuiltInFnAccess().getPathKeyword_83()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getTransitive_pathKeyword_84()); }

	Transitive_path 

{ after(grammarAccess.getBuiltInFnAccess().getTransitive_pathKeyword_84()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_component_prototypeKeyword_85()); }

	Is_component_prototype 

{ after(grammarAccess.getBuiltInFnAccess().getIs_component_prototypeKeyword_85()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getType_literalKeyword_86()); }

	Type_literal 

{ after(grammarAccess.getBuiltInFnAccess().getType_literalKeyword_86()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_listKeyword_87()); }

	Has_list 

{ after(grammarAccess.getBuiltInFnAccess().getHas_listKeyword_87()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_feature_prototypeKeyword_88()); }

	Is_feature_prototype 

{ after(grammarAccess.getBuiltInFnAccess().getIs_feature_prototypeKeyword_88()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_fg_prototypeKeyword_89()); }

	Is_fg_prototype 

{ after(grammarAccess.getBuiltInFnAccess().getIs_fg_prototypeKeyword_89()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getHas_classifier_referenceKeyword_90()); }

	Has_classifier_reference 

{ after(grammarAccess.getBuiltInFnAccess().getHas_classifier_referenceKeyword_90()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getClassifier_referenceKeyword_91()); }

	Classifier_reference 

{ after(grammarAccess.getBuiltInFnAccess().getClassifier_referenceKeyword_91()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_initial_modeKeyword_92()); }

	Is_initial_mode 

{ after(grammarAccess.getBuiltInFnAccess().getIs_initial_modeKeyword_92()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_required_modeKeyword_93()); }

	Is_required_mode 

{ after(grammarAccess.getBuiltInFnAccess().getIs_required_modeKeyword_93()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getMapped_setKeyword_94()); }

	Mapped_set 

{ after(grammarAccess.getBuiltInFnAccess().getMapped_setKeyword_94()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getIs_namedKeyword_95()); }

	Is_named 

{ after(grammarAccess.getBuiltInFnAccess().getIs_namedKeyword_95()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getTransition_nameKeyword_96()); }

	Transition_name 

{ after(grammarAccess.getBuiltInFnAccess().getTransition_nameKeyword_96()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getTransition_triggersKeyword_97()); }

	Transition_triggers 

{ after(grammarAccess.getBuiltInFnAccess().getTransition_triggersKeyword_97()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getStart_mode_stateKeyword_98()); }

	Start_mode_state 

{ after(grammarAccess.getBuiltInFnAccess().getStart_mode_stateKeyword_98()); }
)

    |(
{ before(grammarAccess.getBuiltInFnAccess().getEnd_mode_stateKeyword_99()); }

	End_mode_state 

{ after(grammarAccess.getBuiltInFnAccess().getEnd_mode_stateKeyword_99()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_expressionAccess().getBasicAssignment_0()); }
(rule__Type_expression__BasicAssignment_0)
{ after(grammarAccess.getType_expressionAccess().getBasicAssignment_0()); }
)

    |(
{ before(grammarAccess.getType_expressionAccess().getCompositeAssignment_1()); }
(rule__Type_expression__CompositeAssignment_1)
{ after(grammarAccess.getType_expressionAccess().getCompositeAssignment_1()); }
)

    |(
{ before(grammarAccess.getType_expressionAccess().getElementAssignment_2()); }
(rule__Type_expression__ElementAssignment_2)
{ after(grammarAccess.getType_expressionAccess().getElementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getPtypeAssignment_1_0()); }
(rule__Basic_type__PtypeAssignment_1_0)
{ after(grammarAccess.getBasic_typeAccess().getPtypeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getPrefAssignment_1_1()); }
(rule__Basic_type__PrefAssignment_1_1)
{ after(grammarAccess.getBasic_typeAccess().getPrefAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getBoolAssignment_1_2()); }
(rule__Basic_type__BoolAssignment_1_2)
{ after(grammarAccess.getBasic_typeAccess().getBoolAssignment_1_2()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getStringAssignment_1_3()); }
(rule__Basic_type__StringAssignment_1_3)
{ after(grammarAccess.getBasic_typeAccess().getStringAssignment_1_3()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getEnumerAssignment_1_4()); }
(rule__Basic_type__EnumerAssignment_1_4)
{ after(grammarAccess.getBasic_typeAccess().getEnumerAssignment_1_4()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getUnitsAssignment_1_5()); }
(rule__Basic_type__UnitsAssignment_1_5)
{ after(grammarAccess.getBasic_typeAccess().getUnitsAssignment_1_5()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getIntegerAssignment_1_6()); }
(rule__Basic_type__IntegerAssignment_1_6)
{ after(grammarAccess.getBasic_typeAccess().getIntegerAssignment_1_6()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getRealAssignment_1_7()); }
(rule__Basic_type__RealAssignment_1_7)
{ after(grammarAccess.getBasic_typeAccess().getRealAssignment_1_7()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getRangeAssignment_1_8()); }
(rule__Basic_type__RangeAssignment_1_8)
{ after(grammarAccess.getBasic_typeAccess().getRangeAssignment_1_8()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getTypenameAssignment_1_9()); }
(rule__Basic_type__TypenameAssignment_1_9)
{ after(grammarAccess.getBasic_typeAccess().getTypenameAssignment_1_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composite_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComposite_typeAccess().getMapping_typeParserRuleCall_0()); }
	ruleMapping_type
{ after(grammarAccess.getComposite_typeAccess().getMapping_typeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getComposite_typeAccess().getSet_typeParserRuleCall_1()); }
	ruleSet_type
{ after(grammarAccess.getComposite_typeAccess().getSet_typeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getComposite_typeAccess().getList_typeParserRuleCall_2()); }
	ruleList_type
{ after(grammarAccess.getComposite_typeAccess().getList_typeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getComposite_typeAccess().getRecord_typeParserRuleCall_3()); }
	ruleRecord_type
{ after(grammarAccess.getComposite_typeAccess().getRecord_typeParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getComposite_typeAccess().getUnion_typeParserRuleCall_4()); }
	ruleUnion_type
{ after(grammarAccess.getComposite_typeAccess().getUnion_typeParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getGroup_0()); }
(rule__Set_type__Group_0__0)
{ after(grammarAccess.getSet_typeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSet_typeAccess().getGroup_1()); }
(rule__Set_type__Group_1__0)
{ after(grammarAccess.getSet_typeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getGroup_0()); }
(rule__List_type__Group_0__0)
{ after(grammarAccess.getList_typeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getList_typeAccess().getGroup_1()); }
(rule__List_type__Group_1__0)
{ after(grammarAccess.getList_typeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_typeAccess().getTelemAssignment_0()); }
(rule__Element_type__TelemAssignment_0)
{ after(grammarAccess.getElement_typeAccess().getTelemAssignment_0()); }
)

    |(
{ before(grammarAccess.getElement_typeAccess().getTpackAssignment_1()); }
(rule__Element_type__TpackAssignment_1)
{ after(grammarAccess.getElement_typeAccess().getTpackAssignment_1()); }
)

    |(
{ before(grammarAccess.getElement_typeAccess().getT_classAssignment_2()); }
(rule__Element_type__T_classAssignment_2)
{ after(grammarAccess.getElement_typeAccess().getT_classAssignment_2()); }
)

    |(
{ before(grammarAccess.getElement_typeAccess().getT_instAssignment_3()); }
(rule__Element_type__T_instAssignment_3)
{ after(grammarAccess.getElement_typeAccess().getT_instAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Classifiers__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifiersAccess().getT_classAssignment_0()); }
(rule__Classifiers__T_classAssignment_0)
{ after(grammarAccess.getClassifiersAccess().getT_classAssignment_0()); }
)

    |(
{ before(grammarAccess.getClassifiersAccess().getT_class_subtypeAssignment_1()); }
(rule__Classifiers__T_class_subtypeAssignment_1)
{ after(grammarAccess.getClassifiersAccess().getT_class_subtypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifier_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeAssignment_0()); }
(rule__T_classifier_subtypes__T_ctypeAssignment_0)
{ after(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_cimplAssignment_1()); }
(rule__T_classifier_subtypes__T_cimplAssignment_1)
{ after(grammarAccess.getT_classifier_subtypesAccess().getT_cimplAssignment_1()); }
)

    |(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassAssignment_2()); }
(rule__T_classifier_subtypes__T_fgclassAssignment_2)
{ after(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassAssignment_2()); }
)

    |(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassAssignment_3()); }
(rule__T_classifier_subtypes__T_annexclassAssignment_3)
{ after(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instances__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstancesAccess().getInstAssignment_0()); }
(rule__Instances__InstAssignment_0)
{ after(grammarAccess.getInstancesAccess().getInstAssignment_0()); }
)

    |(
{ before(grammarAccess.getInstancesAccess().getT_inst_stAssignment_1()); }
(rule__Instances__T_inst_stAssignment_1)
{ after(grammarAccess.getInstancesAccess().getT_inst_stAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_instance_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_subc_stAssignment_0()); }
(rule__T_instance_subtypes__T_subc_stAssignment_0)
{ after(grammarAccess.getT_instance_subtypesAccess().getT_subc_stAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_connection_subtypesParserRuleCall_1()); }
	rulet_connection_subtypes
{ after(grammarAccess.getT_instance_subtypesAccess().getT_connection_subtypesParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_feature_subtypesParserRuleCall_2()); }
	rulet_feature_subtypes
{ after(grammarAccess.getT_instance_subtypesAccess().getT_feature_subtypesParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_flow_spec_subtypesParserRuleCall_3()); }
	rulet_flow_spec_subtypes
{ after(grammarAccess.getT_instance_subtypesAccess().getT_flow_spec_subtypesParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_flow_impl_subtypesParserRuleCall_4()); }
	rulet_flow_impl_subtypes
{ after(grammarAccess.getT_instance_subtypesAccess().getT_flow_impl_subtypesParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_sbcallAssignment_5()); }
(rule__T_instance_subtypes__T_sbcallAssignment_5)
{ after(grammarAccess.getT_instance_subtypesAccess().getT_sbcallAssignment_5()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_callseqAssignment_6()); }
(rule__T_instance_subtypes__T_callseqAssignment_6)
{ after(grammarAccess.getT_instance_subtypesAccess().getT_callseqAssignment_6()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_eeflowAssignment_7()); }
(rule__T_instance_subtypes__T_eeflowAssignment_7)
{ after(grammarAccess.getT_instance_subtypesAccess().getT_eeflowAssignment_7()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_protoAssignment_8()); }
(rule__T_instance_subtypes__T_protoAssignment_8)
{ after(grammarAccess.getT_instance_subtypesAccess().getT_protoAssignment_8()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_modeAssignment_9()); }
(rule__T_instance_subtypes__T_modeAssignment_9)
{ after(grammarAccess.getT_instance_subtypesAccess().getT_modeAssignment_9()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_mod_transAssignment_10()); }
(rule__T_instance_subtypes__T_mod_transAssignment_10)
{ after(grammarAccess.getT_instance_subtypesAccess().getT_mod_transAssignment_10()); }
)

    |(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_mode_trigAssignment_11()); }
(rule__T_instance_subtypes__T_mode_trigAssignment_11)
{ after(grammarAccess.getT_instance_subtypesAccess().getT_mode_trigAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_subcomponent_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_subcomponent_subtypesAccess().getT_subAssignment_0()); }
(rule__T_subcomponent_subtypes__T_subAssignment_0)
{ after(grammarAccess.getT_subcomponent_subtypesAccess().getT_subAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_subcomponent_subtypesAccess().getT_cimpl_stAssignment_1()); }
(rule__T_subcomponent_subtypes__T_cimpl_stAssignment_1)
{ after(grammarAccess.getT_subcomponent_subtypesAccess().getT_cimpl_stAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_annex_subAssignment_0()); }
(rule__T_component_subtypes__T_annex_subAssignment_0)
{ after(grammarAccess.getT_component_subtypesAccess().getT_annex_subAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_abstractAssignment_1()); }
(rule__T_component_subtypes__T_abstractAssignment_1)
{ after(grammarAccess.getT_component_subtypesAccess().getT_abstractAssignment_1()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_sysAssignment_2()); }
(rule__T_component_subtypes__T_sysAssignment_2)
{ after(grammarAccess.getT_component_subtypesAccess().getT_sysAssignment_2()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_devAssignment_3()); }
(rule__T_component_subtypes__T_devAssignment_3)
{ after(grammarAccess.getT_component_subtypesAccess().getT_devAssignment_3()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_procAssignment_4()); }
(rule__T_component_subtypes__T_procAssignment_4)
{ after(grammarAccess.getT_component_subtypesAccess().getT_procAssignment_4()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_virt_procAssignment_5()); }
(rule__T_component_subtypes__T_virt_procAssignment_5)
{ after(grammarAccess.getT_component_subtypesAccess().getT_virt_procAssignment_5()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_busAssignment_6()); }
(rule__T_component_subtypes__T_busAssignment_6)
{ after(grammarAccess.getT_component_subtypesAccess().getT_busAssignment_6()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_vbusAssignment_7()); }
(rule__T_component_subtypes__T_vbusAssignment_7)
{ after(grammarAccess.getT_component_subtypesAccess().getT_vbusAssignment_7()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_memAssignment_8()); }
(rule__T_component_subtypes__T_memAssignment_8)
{ after(grammarAccess.getT_component_subtypesAccess().getT_memAssignment_8()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_procAssignment_9()); }
(rule__T_component_subtypes__T_procAssignment_9)
{ after(grammarAccess.getT_component_subtypesAccess().getT_procAssignment_9()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_tgAssignment_10()); }
(rule__T_component_subtypes__T_tgAssignment_10)
{ after(grammarAccess.getT_component_subtypesAccess().getT_tgAssignment_10()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_tAssignment_11()); }
(rule__T_component_subtypes__T_tAssignment_11)
{ after(grammarAccess.getT_component_subtypesAccess().getT_tAssignment_11()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_dAssignment_12()); }
(rule__T_component_subtypes__T_dAssignment_12)
{ after(grammarAccess.getT_component_subtypesAccess().getT_dAssignment_12()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_subprogAssignment_13()); }
(rule__T_component_subtypes__T_subprogAssignment_13)
{ after(grammarAccess.getT_component_subtypesAccess().getT_subprogAssignment_13()); }
)

    |(
{ before(grammarAccess.getT_component_subtypesAccess().getT_subprog_gAssignment_14()); }
(rule__T_component_subtypes__T_subprog_gAssignment_14)
{ after(grammarAccess.getT_component_subtypesAccess().getT_subprog_gAssignment_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_connection_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_connAssignment_0()); }
(rule__T_connection_subtypes__T_connAssignment_0)
{ after(grammarAccess.getT_connection_subtypesAccess().getT_connAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_feat_connAssignment_1()); }
(rule__T_connection_subtypes__T_feat_connAssignment_1)
{ after(grammarAccess.getT_connection_subtypesAccess().getT_feat_connAssignment_1()); }
)

    |(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_port_connAssignment_2()); }
(rule__T_connection_subtypes__T_port_connAssignment_2)
{ after(grammarAccess.getT_connection_subtypesAccess().getT_port_connAssignment_2()); }
)

    |(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_parm_connAssignment_3()); }
(rule__T_connection_subtypes__T_parm_connAssignment_3)
{ after(grammarAccess.getT_connection_subtypesAccess().getT_parm_connAssignment_3()); }
)

    |(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_acc_conAssignment_4()); }
(rule__T_connection_subtypes__T_acc_conAssignment_4)
{ after(grammarAccess.getT_connection_subtypesAccess().getT_acc_conAssignment_4()); }
)

    |(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_fg_connAssignment_5()); }
(rule__T_connection_subtypes__T_fg_connAssignment_5)
{ after(grammarAccess.getT_connection_subtypesAccess().getT_fg_connAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_feature_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_featAssignment_0()); }
(rule__T_feature_subtypes__T_featAssignment_0)
{ after(grammarAccess.getT_feature_subtypesAccess().getT_featAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_abs_featAssignment_1()); }
(rule__T_feature_subtypes__T_abs_featAssignment_1)
{ after(grammarAccess.getT_feature_subtypesAccess().getT_abs_featAssignment_1()); }
)

    |(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_parmAssignment_2()); }
(rule__T_feature_subtypes__T_parmAssignment_2)
{ after(grammarAccess.getT_feature_subtypesAccess().getT_parmAssignment_2()); }
)

    |(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_fgAssignment_3()); }
(rule__T_feature_subtypes__T_fgAssignment_3)
{ after(grammarAccess.getT_feature_subtypesAccess().getT_fgAssignment_3()); }
)

    |(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_port_subtypesParserRuleCall_4()); }
	rulet_port_subtypes
{ after(grammarAccess.getT_feature_subtypesAccess().getT_port_subtypesParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_access_subtypesParserRuleCall_5()); }
	rulet_access_subtypes
{ after(grammarAccess.getT_feature_subtypesAccess().getT_access_subtypesParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_access_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_accessAssignment_0()); }
(rule__T_access_subtypes__T_accessAssignment_0)
{ after(grammarAccess.getT_access_subtypesAccess().getT_accessAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_access_subtypesAccess().getT_data_accAssignment_1()); }
(rule__T_access_subtypes__T_data_accAssignment_1)
{ after(grammarAccess.getT_access_subtypesAccess().getT_data_accAssignment_1()); }
)

    |(
{ before(grammarAccess.getT_access_subtypesAccess().getT_sub_accAssignment_2()); }
(rule__T_access_subtypes__T_sub_accAssignment_2)
{ after(grammarAccess.getT_access_subtypesAccess().getT_sub_accAssignment_2()); }
)

    |(
{ before(grammarAccess.getT_access_subtypesAccess().getT_sub_gr_accAssignment_3()); }
(rule__T_access_subtypes__T_sub_gr_accAssignment_3)
{ after(grammarAccess.getT_access_subtypesAccess().getT_sub_gr_accAssignment_3()); }
)

    |(
{ before(grammarAccess.getT_access_subtypesAccess().getT_bus_accAssignment_4()); }
(rule__T_access_subtypes__T_bus_accAssignment_4)
{ after(grammarAccess.getT_access_subtypesAccess().getT_bus_accAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_port_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_port_subtypesAccess().getT_portAssignment_0()); }
(rule__T_port_subtypes__T_portAssignment_0)
{ after(grammarAccess.getT_port_subtypesAccess().getT_portAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_port_subtypesAccess().getT_d_portAssignment_1()); }
(rule__T_port_subtypes__T_d_portAssignment_1)
{ after(grammarAccess.getT_port_subtypesAccess().getT_d_portAssignment_1()); }
)

    |(
{ before(grammarAccess.getT_port_subtypesAccess().getT_ev_portAssignment_2()); }
(rule__T_port_subtypes__T_ev_portAssignment_2)
{ after(grammarAccess.getT_port_subtypesAccess().getT_ev_portAssignment_2()); }
)

    |(
{ before(grammarAccess.getT_port_subtypesAccess().getT_evd_portAssignment_3()); }
(rule__T_port_subtypes__T_evd_portAssignment_3)
{ after(grammarAccess.getT_port_subtypesAccess().getT_evd_portAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_flow_spec_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_specAssignment_0()); }
(rule__T_flow_spec_subtypes__T_f_specAssignment_0)
{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_specAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sourceAssignment_1()); }
(rule__T_flow_spec_subtypes__T_f_spec_sourceAssignment_1)
{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sourceAssignment_1()); }
)

    |(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sinkAssignment_2()); }
(rule__T_flow_spec_subtypes__T_f_spec_sinkAssignment_2)
{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sinkAssignment_2()); }
)

    |(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_pathAssignment_3()); }
(rule__T_flow_spec_subtypes__T_f_spec_pathAssignment_3)
{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_pathAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_flow_impl_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_iAssignment_0()); }
(rule__T_flow_impl_subtypes__T_f_iAssignment_0)
{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_iAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sourceAssignment_1()); }
(rule__T_flow_impl_subtypes__T_f_i_sourceAssignment_1)
{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sourceAssignment_1()); }
)

    |(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sinkAssignment_2()); }
(rule__T_flow_impl_subtypes__T_f_i_sinkAssignment_2)
{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sinkAssignment_2()); }
)

    |(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_pathAssignment_3()); }
(rule__T_flow_impl_subtypes__T_f_i_pathAssignment_3)
{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_pathAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__LowerBoundAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getLowerBoundIntegerTermParserRuleCall_0_0_0()); }
	ruleIntegerTerm
{ after(grammarAccess.getIntegerRangeAccess().getLowerBoundIntegerTermParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getIntegerRangeAccess().getLowerBoundSignedConstantParserRuleCall_0_0_1()); }
	ruleSignedConstant
{ after(grammarAccess.getIntegerRangeAccess().getLowerBoundSignedConstantParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getIntegerRangeAccess().getLowerBoundConstantValueParserRuleCall_0_0_2()); }
	ruleConstantValue
{ after(grammarAccess.getIntegerRangeAccess().getLowerBoundConstantValueParserRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__UpperBoundAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getUpperBoundIntegerTermParserRuleCall_2_0_0()); }
	ruleIntegerTerm
{ after(grammarAccess.getIntegerRangeAccess().getUpperBoundIntegerTermParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getIntegerRangeAccess().getUpperBoundSignedConstantParserRuleCall_2_0_1()); }
	ruleSignedConstant
{ after(grammarAccess.getIntegerRangeAccess().getUpperBoundSignedConstantParserRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getIntegerRangeAccess().getUpperBoundConstantValueParserRuleCall_2_0_2()); }
	ruleConstantValue
{ after(grammarAccess.getIntegerRangeAccess().getUpperBoundConstantValueParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__LowerBoundAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getLowerBoundRealTermParserRuleCall_0_0_0()); }
	ruleRealTerm
{ after(grammarAccess.getRealRangeAccess().getLowerBoundRealTermParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getRealRangeAccess().getLowerBoundSignedConstantParserRuleCall_0_0_1()); }
	ruleSignedConstant
{ after(grammarAccess.getRealRangeAccess().getLowerBoundSignedConstantParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getRealRangeAccess().getLowerBoundConstantValueParserRuleCall_0_0_2()); }
	ruleConstantValue
{ after(grammarAccess.getRealRangeAccess().getLowerBoundConstantValueParserRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__UpperBoundAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getUpperBoundRealTermParserRuleCall_2_0_0()); }
	ruleRealTerm
{ after(grammarAccess.getRealRangeAccess().getUpperBoundRealTermParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getRealRangeAccess().getUpperBoundSignedConstantParserRuleCall_2_0_1()); }
	ruleSignedConstant
{ after(grammarAccess.getRealRangeAccess().getUpperBoundSignedConstantParserRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getRealRangeAccess().getUpperBoundConstantValueParserRuleCall_2_0_2()); }
	ruleConstantValue
{ after(grammarAccess.getRealRangeAccess().getUpperBoundConstantValueParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getAadlintegerKeyword_1_0()); }

	Aadlinteger 

{ after(grammarAccess.getUnnamedIntegerTypeAccess().getAadlintegerKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getIntKeyword_1_1()); }

	Int 

{ after(grammarAccess.getUnnamedIntegerTypeAccess().getIntKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getOwnedUnitsTypeAssignment_3_0()); }
(rule__UnnamedIntegerType__OwnedUnitsTypeAssignment_3_0)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getOwnedUnitsTypeAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getGroup_3_1()); }
(rule__UnnamedIntegerType__Group_3_1__0)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getAadlrealKeyword_1_0()); }

	Aadlreal 

{ after(grammarAccess.getUnnamedRealTypeAccess().getAadlrealKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getUnnamedRealTypeAccess().getRealKeyword_1_1()); }

	Real 

{ after(grammarAccess.getUnnamedRealTypeAccess().getRealKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getOwnedUnitsTypeAssignment_3_0()); }
(rule__UnnamedRealType__OwnedUnitsTypeAssignment_3_0)
{ after(grammarAccess.getUnnamedRealTypeAccess().getOwnedUnitsTypeAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getUnnamedRealTypeAccess().getGroup_3_1()); }
(rule__UnnamedRealType__Group_3_1__0)
{ after(grammarAccess.getUnnamedRealTypeAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedBooleanType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedBooleanTypeAccess().getAadlbooleanKeyword_1_0()); }

	Aadlboolean 

{ after(grammarAccess.getUnnamedBooleanTypeAccess().getAadlbooleanKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getUnnamedBooleanTypeAccess().getBoolKeyword_1_1()); }

	Bool 

{ after(grammarAccess.getUnnamedBooleanTypeAccess().getBoolKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberValueAccess().getRealLitParserRuleCall_0()); }
	ruleRealLit
{ after(grammarAccess.getNumberValueAccess().getRealLitParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberValueAccess().getIntegerLitParserRuleCall_1()); }
	ruleIntegerLit
{ after(grammarAccess.getNumberValueAccess().getIntegerLitParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedStringType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedStringTypeAccess().getAadlstringKeyword_1_0()); }

	Aadlstring 

{ after(grammarAccess.getUnnamedStringTypeAccess().getAadlstringKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getUnnamedStringTypeAccess().getStringKeyword_1_1()); }

	String 

{ after(grammarAccess.getUnnamedStringTypeAccess().getStringKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getEnumerationKeyword_0_0()); }

	Enumeration 

{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getEnumerationKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getEnumKeyword_0_1()); }

	Enum 

{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getEnumKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeAssignment_2_0()); }
(rule__UnnamedRangeType__OwnedNumberTypeAssignment_2_0)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getReferencedNumberTypeAssignment_2_1()); }
(rule__UnnamedRangeType__ReferencedNumberTypeAssignment_2_1)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getReferencedNumberTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__OwnedNumberTypeAlternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeUnnamedIntegerTypeParserRuleCall_2_0_0_0()); }
	ruleUnnamedIntegerType
{ after(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeUnnamedIntegerTypeParserRuleCall_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeUnnamedRealTypeParserRuleCall_2_0_0_1()); }
	ruleUnnamedRealType
{ after(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeUnnamedRealTypeParserRuleCall_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendAssignment_1_1()); }
(rule__ContainedPropertyAssociation__AppendAssignment_1_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyExpressionAccess().getRecordTermParserRuleCall_0()); }
	ruleRecordTerm
{ after(grammarAccess.getPropertyExpressionAccess().getRecordTermParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getReferenceTermParserRuleCall_1()); }
	ruleReferenceTerm
{ after(grammarAccess.getPropertyExpressionAccess().getReferenceTermParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getComponentClassifierTermParserRuleCall_2()); }
	ruleComponentClassifierTerm
{ after(grammarAccess.getPropertyExpressionAccess().getComponentClassifierTermParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getComputedTermParserRuleCall_3()); }
	ruleComputedTerm
{ after(grammarAccess.getPropertyExpressionAccess().getComputedTermParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getStringTermParserRuleCall_4()); }
	ruleStringTerm
{ after(grammarAccess.getPropertyExpressionAccess().getStringTermParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getNumericRangeTermParserRuleCall_5()); }
	ruleNumericRangeTerm
{ after(grammarAccess.getPropertyExpressionAccess().getNumericRangeTermParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getRealTermParserRuleCall_6()); }
	ruleRealTerm
{ after(grammarAccess.getPropertyExpressionAccess().getRealTermParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getIntegerTermParserRuleCall_7()); }
	ruleIntegerTerm
{ after(grammarAccess.getPropertyExpressionAccess().getIntegerTermParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getListTermParserRuleCall_8()); }
	ruleListTerm
{ after(grammarAccess.getPropertyExpressionAccess().getListTermParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getBooleanLiteralParserRuleCall_9()); }
	ruleBooleanLiteral
{ after(grammarAccess.getPropertyExpressionAccess().getBooleanLiteralParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getLiteralorReferenceTermParserRuleCall_10()); }
	ruleLiteralorReferenceTerm
{ after(grammarAccess.getPropertyExpressionAccess().getLiteralorReferenceTermParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1_0()); }
(rule__BooleanLiteral__ValueAssignment_1_0)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }

	False 

{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); }

	PlusSign 

{ after(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); }

	HyphenMinus 

{ after(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getPlusSignKeyword_0_0()); }

	PlusSign 

{ after(grammarAccess.getSignedIntAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0_1()); }

	HyphenMinus 

{ after(grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getPlusSignKeyword_0_0()); }

	PlusSign 

{ after(grammarAccess.getSignedRealAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0_1()); }

	HyphenMinus 

{ after(grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumAlt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAltAccess().getRealTermParserRuleCall_0()); }
	ruleRealTerm
{ after(grammarAccess.getNumAltAccess().getRealTermParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumAltAccess().getIntegerTermParserRuleCall_1()); }
	ruleIntegerTerm
{ after(grammarAccess.getNumAltAccess().getIntegerTermParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNumAltAccess().getSignedConstantParserRuleCall_2()); }
	ruleSignedConstant
{ after(grammarAccess.getNumAltAccess().getSignedConstantParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNumAltAccess().getConstantValueParserRuleCall_3()); }
	ruleConstantValue
{ after(grammarAccess.getNumAltAccess().getConstantValueParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MCSGrammarRoot__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSGrammarRoot__Group_0__0__Impl
	rule__MCSGrammarRoot__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSGrammarRoot__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getAnnexKeyword_0_0()); }

	Annex 

{ after(grammarAccess.getMCSGrammarRootAccess().getAnnexKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSGrammarRoot__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSGrammarRoot__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSGrammarRoot__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getLibAssignment_0_1()); }
(rule__MCSGrammarRoot__LibAssignment_0_1)
{ after(grammarAccess.getMCSGrammarRootAccess().getLibAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSGrammarRoot__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSGrammarRoot__Group_1__0__Impl
	rule__MCSGrammarRoot__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSGrammarRoot__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getMcsKeyword_1_0()); }

	Mcs 

{ after(grammarAccess.getMCSGrammarRootAccess().getMcsKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSGrammarRoot__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSGrammarRoot__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSGrammarRoot__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getFileAssignment_1_1()); }
(rule__MCSGrammarRoot__FileAssignment_1_1)
{ after(grammarAccess.getMCSGrammarRootAccess().getFileAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSGrammarRoot__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSGrammarRoot__Group_2__0__Impl
	rule__MCSGrammarRoot__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSGrammarRoot__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getSubclauseKeyword_2_0()); }

	Subclause 

{ after(grammarAccess.getMCSGrammarRootAccess().getSubclauseKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSGrammarRoot__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSGrammarRoot__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSGrammarRoot__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getSubclauseAssignment_2_1()); }
(rule__MCSGrammarRoot__SubclauseAssignment_2_1)
{ after(grammarAccess.getMCSGrammarRootAccess().getSubclauseAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexLibrary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__0__Impl
	rule__MCSAnnexLibrary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getMCSAnnexLibraryAction_0()); }
(

)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getMCSAnnexLibraryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__1__Impl
	rule__MCSAnnexLibrary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup_1()); }
(rule__MCSAnnexLibrary__Group_1__0)?
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__2__Impl
	rule__MCSAnnexLibrary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup_2()); }
(rule__MCSAnnexLibrary__Group_2__0)?
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__3__Impl
	rule__MCSAnnexLibrary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup_3()); }
(rule__MCSAnnexLibrary__Group_3__0)?
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup_4()); }
(rule__MCSAnnexLibrary__Group_4__0)?
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MCSAnnexLibrary__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_1__0__Impl
	rule__MCSAnnexLibrary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTypesKeyword_1_0()); }

	Types 

{ after(grammarAccess.getMCSAnnexLibraryAccess().getTypesKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTypesAssignment_1_1()); }
(rule__MCSAnnexLibrary__TypesAssignment_1_1)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getTypesAssignment_1_1()); }
)
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTypesAssignment_1_1()); }
(rule__MCSAnnexLibrary__TypesAssignment_1_1)*
{ after(grammarAccess.getMCSAnnexLibraryAccess().getTypesAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexLibrary__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_2__0__Impl
	rule__MCSAnnexLibrary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getConstantsKeyword_2_0()); }

	Constants 

{ after(grammarAccess.getMCSAnnexLibraryAccess().getConstantsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getConstantsAssignment_2_1()); }
(rule__MCSAnnexLibrary__ConstantsAssignment_2_1)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getConstantsAssignment_2_1()); }
)
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getConstantsAssignment_2_1()); }
(rule__MCSAnnexLibrary__ConstantsAssignment_2_1)*
{ after(grammarAccess.getMCSAnnexLibraryAccess().getConstantsAssignment_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexLibrary__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_3__0__Impl
	rule__MCSAnnexLibrary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsKeyword_3_0()); }

	Functions 

{ after(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsAssignment_3_1()); }
(rule__MCSAnnexLibrary__FunctionsAssignment_3_1)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsAssignment_3_1()); }
)
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsAssignment_3_1()); }
(rule__MCSAnnexLibrary__FunctionsAssignment_3_1)*
{ after(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsAssignment_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexLibrary__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_4__0__Impl
	rule__MCSAnnexLibrary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsKeyword_4_0()); }

	Theorems 

{ after(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsAssignment_4_1()); }
(rule__MCSAnnexLibrary__TheoremsAssignment_4_1)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsAssignment_4_1()); }
)
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsAssignment_4_1()); }
(rule__MCSAnnexLibrary__TheoremsAssignment_4_1)*
{ after(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsAssignment_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSFileLibrary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group__0__Impl
	rule__MCSFileLibrary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getMCSFileLibraryAction_0()); }
(

)
{ after(grammarAccess.getMCSFileLibraryAccess().getMCSFileLibraryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group__1__Impl
	rule__MCSFileLibrary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup_1()); }
(rule__MCSFileLibrary__Group_1__0)
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup_1()); }
(rule__MCSFileLibrary__Group_1__0)*
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group__2__Impl
	rule__MCSFileLibrary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup_2()); }
(rule__MCSFileLibrary__Group_2__0)*
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group__3__Impl
	rule__MCSFileLibrary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup_3()); }
(rule__MCSFileLibrary__Group_3__0)?
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group__4__Impl
	rule__MCSFileLibrary__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup_4()); }
(rule__MCSFileLibrary__Group_4__0)?
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group__5__Impl
	rule__MCSFileLibrary__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup_5()); }
(rule__MCSFileLibrary__Group_5__0)?
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group__6__Impl
	rule__MCSFileLibrary__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup_6()); }
(rule__MCSFileLibrary__Group_6__0)?
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup_7()); }
(rule__MCSFileLibrary__Group_7__0)?
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__MCSFileLibrary__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_1__0__Impl
	rule__MCSFileLibrary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getWithKeyword_1_0()); }

	With 

{ after(grammarAccess.getMCSFileLibraryAccess().getWithKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_1__1__Impl
	rule__MCSFileLibrary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getImportedUnitAssignment_1_1()); }
(rule__MCSFileLibrary__ImportedUnitAssignment_1_1)
{ after(grammarAccess.getMCSFileLibraryAccess().getImportedUnitAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup_1_2()); }
(rule__MCSFileLibrary__Group_1_2__0)*
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MCSFileLibrary__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_1_2__0__Impl
	rule__MCSFileLibrary__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getCommaKeyword_1_2_0()); }

	Comma 

{ after(grammarAccess.getMCSFileLibraryAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getImportedUnitAssignment_1_2_1()); }
(rule__MCSFileLibrary__ImportedUnitAssignment_1_2_1)
{ after(grammarAccess.getMCSFileLibraryAccess().getImportedUnitAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSFileLibrary__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_2__0__Impl
	rule__MCSFileLibrary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getImportKeyword_2_0()); }

	Import 

{ after(grammarAccess.getMCSFileLibraryAccess().getImportKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_2__1__Impl
	rule__MCSFileLibrary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getFilesAssignment_2_1()); }
(rule__MCSFileLibrary__FilesAssignment_2_1)
{ after(grammarAccess.getMCSFileLibraryAccess().getFilesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getGroup_2_2()); }
(rule__MCSFileLibrary__Group_2_2__0)*
{ after(grammarAccess.getMCSFileLibraryAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MCSFileLibrary__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_2_2__0__Impl
	rule__MCSFileLibrary__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getCommaKeyword_2_2_0()); }

	Comma 

{ after(grammarAccess.getMCSFileLibraryAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getFilesAssignment_2_2_1()); }
(rule__MCSFileLibrary__FilesAssignment_2_2_1)
{ after(grammarAccess.getMCSFileLibraryAccess().getFilesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSFileLibrary__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_3__0__Impl
	rule__MCSFileLibrary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getTypesKeyword_3_0()); }

	Types 

{ after(grammarAccess.getMCSFileLibraryAccess().getTypesKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSFileLibraryAccess().getTypesAssignment_3_1()); }
(rule__MCSFileLibrary__TypesAssignment_3_1)
{ after(grammarAccess.getMCSFileLibraryAccess().getTypesAssignment_3_1()); }
)
(
{ before(grammarAccess.getMCSFileLibraryAccess().getTypesAssignment_3_1()); }
(rule__MCSFileLibrary__TypesAssignment_3_1)*
{ after(grammarAccess.getMCSFileLibraryAccess().getTypesAssignment_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSFileLibrary__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_4__0__Impl
	rule__MCSFileLibrary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getConstantsKeyword_4_0()); }

	Constants 

{ after(grammarAccess.getMCSFileLibraryAccess().getConstantsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSFileLibraryAccess().getConstantsAssignment_4_1()); }
(rule__MCSFileLibrary__ConstantsAssignment_4_1)
{ after(grammarAccess.getMCSFileLibraryAccess().getConstantsAssignment_4_1()); }
)
(
{ before(grammarAccess.getMCSFileLibraryAccess().getConstantsAssignment_4_1()); }
(rule__MCSFileLibrary__ConstantsAssignment_4_1)*
{ after(grammarAccess.getMCSFileLibraryAccess().getConstantsAssignment_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSFileLibrary__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_5__0__Impl
	rule__MCSFileLibrary__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getFunctionsKeyword_5_0()); }

	Functions 

{ after(grammarAccess.getMCSFileLibraryAccess().getFunctionsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSFileLibraryAccess().getFunctionsAssignment_5_1()); }
(rule__MCSFileLibrary__FunctionsAssignment_5_1)
{ after(grammarAccess.getMCSFileLibraryAccess().getFunctionsAssignment_5_1()); }
)
(
{ before(grammarAccess.getMCSFileLibraryAccess().getFunctionsAssignment_5_1()); }
(rule__MCSFileLibrary__FunctionsAssignment_5_1)*
{ after(grammarAccess.getMCSFileLibraryAccess().getFunctionsAssignment_5_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSFileLibrary__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_6__0__Impl
	rule__MCSFileLibrary__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getTheoremsKeyword_6_0()); }

	Theorems 

{ after(grammarAccess.getMCSFileLibraryAccess().getTheoremsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSFileLibraryAccess().getTheoremsAssignment_6_1()); }
(rule__MCSFileLibrary__TheoremsAssignment_6_1)
{ after(grammarAccess.getMCSFileLibraryAccess().getTheoremsAssignment_6_1()); }
)
(
{ before(grammarAccess.getMCSFileLibraryAccess().getTheoremsAssignment_6_1()); }
(rule__MCSFileLibrary__TheoremsAssignment_6_1)*
{ after(grammarAccess.getMCSFileLibraryAccess().getTheoremsAssignment_6_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSFileLibrary__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_7__0__Impl
	rule__MCSFileLibrary__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getConstraintsKeyword_7_0()); }

	Constraints 

{ after(grammarAccess.getMCSFileLibraryAccess().getConstraintsKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSFileLibrary__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSFileLibrary__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSFileLibraryAccess().getCallsAssignment_7_1()); }
(rule__MCSFileLibrary__CallsAssignment_7_1)
{ after(grammarAccess.getMCSFileLibraryAccess().getCallsAssignment_7_1()); }
)
(
{ before(grammarAccess.getMCSFileLibraryAccess().getCallsAssignment_7_1()); }
(rule__MCSFileLibrary__CallsAssignment_7_1)*
{ after(grammarAccess.getMCSFileLibraryAccess().getCallsAssignment_7_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexSubclause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group__0__Impl
	rule__MCSAnnexSubclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getMCSAnnexSubclauseAction_0()); }
(

)
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getMCSAnnexSubclauseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getCallsAssignment_1()); }
(rule__MCSAnnexSubclause__CallsAssignment_1)?
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getCallsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__0__Impl
	rule__Type_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getTypeKeyword_0()); }

	Type 

{ after(grammarAccess.getType_declarationAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__1__Impl
	rule__Type_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getNameAssignment_1()); }
(rule__Type_declaration__NameAssignment_1)
{ after(grammarAccess.getType_declarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__2__Impl
	rule__Type_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getEqualsSignKeyword_2()); }

	EqualsSign 

{ after(grammarAccess.getType_declarationAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__3__Impl
	rule__Type_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getTypeAssignment_3()); }
(rule__Type_declaration__TypeAssignment_3)
{ after(grammarAccess.getType_declarationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getSemicolonKeyword_4()); }

	Semicolon 

{ after(grammarAccess.getType_declarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Constant_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__0__Impl
	rule__Constant_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getConstKeyword_0()); }
(
	Const 
)?
{ after(grammarAccess.getConstant_declarationAccess().getConstKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__1__Impl
	rule__Constant_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getConstAssignment_1()); }
(rule__Constant_declaration__ConstAssignment_1)
{ after(grammarAccess.getConstant_declarationAccess().getConstAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__2__Impl
	rule__Constant_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getEqualsSignKeyword_2()); }

	EqualsSign 

{ after(grammarAccess.getConstant_declarationAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__3__Impl
	rule__Constant_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getLeft_exprAssignment_3()); }
(rule__Constant_declaration__Left_exprAssignment_3)
{ after(grammarAccess.getConstant_declarationAccess().getLeft_exprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getSemicolonKeyword_4()); }

	Semicolon 

{ after(grammarAccess.getConstant_declarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__0__Impl
	rule__Function_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getNameAssignment_0()); }
(rule__Function_declaration__NameAssignment_0)
{ after(grammarAccess.getFunction_declarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__1__Impl
	rule__Function_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getLeftParenthesisKeyword_1()); }
(
	LeftParenthesis 
)
{ after(grammarAccess.getFunction_declarationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__2__Impl
	rule__Function_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getGroup_2()); }
(rule__Function_declaration__Group_2__0)?
{ after(grammarAccess.getFunction_declarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__3__Impl
	rule__Function_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getFunction_declarationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getBodyAssignment_4()); }
(rule__Function_declaration__BodyAssignment_4)
{ after(grammarAccess.getFunction_declarationAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function_declaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_2__0__Impl
	rule__Function_declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getArgsAssignment_2_0()); }
(rule__Function_declaration__ArgsAssignment_2_0)
{ after(grammarAccess.getFunction_declarationAccess().getArgsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getGroup_2_1()); }
(rule__Function_declaration__Group_2_1__0)*
{ after(grammarAccess.getFunction_declarationAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function_declaration__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_2_1__0__Impl
	rule__Function_declaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getCommaKeyword_2_1_0()); }

	Comma 

{ after(grammarAccess.getFunction_declarationAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getArgsAssignment_2_1_1()); }
(rule__Function_declaration__ArgsAssignment_2_1_1)
{ after(grammarAccess.getFunction_declarationAccess().getArgsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Theorem_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__0__Impl
	rule__Theorem_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getNameAssignment_0()); }
(rule__Theorem_declaration__NameAssignment_0)
{ after(grammarAccess.getTheorem_declarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__1__Impl
	rule__Theorem_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getT_rootAssignment_1()); }
(rule__Theorem_declaration__T_rootAssignment_1)?
{ after(grammarAccess.getTheorem_declarationAccess().getT_rootAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__2__Impl
	rule__Theorem_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getLeftParenthesisKeyword_2()); }
(
	LeftParenthesis 
)
{ after(grammarAccess.getTheorem_declarationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__3__Impl
	rule__Theorem_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getGroup_3()); }
(rule__Theorem_declaration__Group_3__0)?
{ after(grammarAccess.getTheorem_declarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__4__Impl
	rule__Theorem_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getTheorem_declarationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getBodyAssignment_5()); }
(rule__Theorem_declaration__BodyAssignment_5)
{ after(grammarAccess.getTheorem_declarationAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Theorem_declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group_3__0__Impl
	rule__Theorem_declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getArgsAssignment_3_0()); }
(rule__Theorem_declaration__ArgsAssignment_3_0)
{ after(grammarAccess.getTheorem_declarationAccess().getArgsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getGroup_3_1()); }
(rule__Theorem_declaration__Group_3_1__0)*
{ after(grammarAccess.getTheorem_declarationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Theorem_declaration__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group_3_1__0__Impl
	rule__Theorem_declaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getCommaKeyword_3_1_0()); }

	Comma 

{ after(grammarAccess.getTheorem_declarationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getArgsAssignment_3_1_1()); }
(rule__Theorem_declaration__ArgsAssignment_3_1_1)
{ after(grammarAccess.getTheorem_declarationAccess().getArgsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Theorem_root__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_root__Group__0__Impl
	rule__Theorem_root__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_root__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_rootAccess().getLessThanSignKeyword_0()); }

	LessThanSign 

{ after(grammarAccess.getTheorem_rootAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_root__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_root__Group__1__Impl
	rule__Theorem_root__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_root__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_rootAccess().getRootKeyword_1()); }

	Root 

{ after(grammarAccess.getTheorem_rootAccess().getRootKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_root__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_root__Group__2__Impl
	rule__Theorem_root__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_root__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_rootAccess().getColonKeyword_2()); }

	Colon 

{ after(grammarAccess.getTheorem_rootAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_root__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_root__Group__3__Impl
	rule__Theorem_root__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_root__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_rootAccess().getAlternatives_3()); }
(rule__Theorem_root__Alternatives_3)
{ after(grammarAccess.getTheorem_rootAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_root__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_root__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_root__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_rootAccess().getGreaterThanSignKeyword_4()); }

	GreaterThanSign 

{ after(grammarAccess.getTheorem_rootAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBody__Group__0__Impl
	rule__FunctionBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getFunctionBodyAction_0()); }
(

)
{ after(grammarAccess.getFunctionBodyAccess().getFunctionBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBody__Group__1__Impl
	rule__FunctionBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getFunctionBodyAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBody__Group__2__Impl
	rule__FunctionBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getTypeAssignment_2()); }
(rule__FunctionBody__TypeAssignment_2)
{ after(grammarAccess.getFunctionBodyAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBody__Group__3__Impl
	rule__FunctionBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getEqualsSignKeyword_3()); }

	EqualsSign 

{ after(grammarAccess.getFunctionBodyAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBody__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBody__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getExprAssignment_4()); }
(rule__FunctionBody__ExprAssignment_4)
{ after(grammarAccess.getFunctionBodyAccess().getExprAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TheoremBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheoremBody__Group__0__Impl
	rule__TheoremBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TheoremBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheoremBodyAccess().getTheoremBodyAction_0()); }
(

)
{ after(grammarAccess.getTheoremBodyAccess().getTheoremBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TheoremBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheoremBody__Group__1__Impl
	rule__TheoremBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TheoremBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheoremBodyAccess().getLessThanSignEqualsSignKeyword_1()); }

	LessThanSignEqualsSign 

{ after(grammarAccess.getTheoremBodyAccess().getLessThanSignEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TheoremBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheoremBody__Group__2__Impl
	rule__TheoremBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TheoremBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTheoremBodyAccess().getStringAssignment_2()); }
(rule__TheoremBody__StringAssignment_2)
{ after(grammarAccess.getTheoremBodyAccess().getStringAssignment_2()); }
)
(
{ before(grammarAccess.getTheoremBodyAccess().getStringAssignment_2()); }
(rule__TheoremBody__StringAssignment_2)*
{ after(grammarAccess.getTheoremBodyAccess().getStringAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TheoremBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheoremBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TheoremBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheoremBodyAccess().getExprAssignment_3()); }
(rule__TheoremBody__ExprAssignment_3)
{ after(grammarAccess.getTheoremBodyAccess().getExprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterizedString__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedString__Group__0__Impl
	rule__ParameterizedString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedString__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedStringAccess().getAsteriskAsteriskKeyword_0()); }

	AsteriskAsterisk 

{ after(grammarAccess.getParameterizedStringAccess().getAsteriskAsteriskKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedString__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedString__Group__1__Impl
	rule__ParameterizedString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedString__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getParameterizedStringAccess().getClaimAssignment_1()); }
(rule__ParameterizedString__ClaimAssignment_1)
{ after(grammarAccess.getParameterizedStringAccess().getClaimAssignment_1()); }
)
(
{ before(grammarAccess.getParameterizedStringAccess().getClaimAssignment_1()); }
(rule__ParameterizedString__ClaimAssignment_1)*
{ after(grammarAccess.getParameterizedStringAccess().getClaimAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedString__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedString__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedString__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedStringAccess().getAsteriskAsteriskKeyword_2()); }

	AsteriskAsterisk 

{ after(grammarAccess.getParameterizedStringAccess().getAsteriskAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TextParm__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextParm__Group_0__0__Impl
	rule__TextParm__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getClaimStringAction_0_0()); }
(

)
{ after(grammarAccess.getTextParmAccess().getClaimStringAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextParm__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextParm__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getStrAssignment_0_1()); }
(rule__TextParm__StrAssignment_0_1)
{ after(grammarAccess.getTextParmAccess().getStrAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextParm__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextParm__Group_1__0__Impl
	rule__TextParm__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getClaimArgAction_1_0()); }
(

)
{ after(grammarAccess.getTextParmAccess().getClaimArgAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextParm__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextParm__Group_1__1__Impl
	rule__TextParm__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getTextargAssignment_1_1()); }
(rule__TextParm__TextargAssignment_1_1)
{ after(grammarAccess.getTextParmAccess().getTextargAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextParm__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextParm__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getGroup_1_2()); }
(rule__TextParm__Group_1_2__0)?
{ after(grammarAccess.getTextParmAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TextParm__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextParm__Group_1_2__0__Impl
	rule__TextParm__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getPercentSignKeyword_1_2_0()); }

	PercentSign 

{ after(grammarAccess.getTextParmAccess().getPercentSignKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextParm__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextParm__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getUnitAssignment_1_2_1()); }
(rule__TextParm__UnitAssignment_1_2_1)
{ after(grammarAccess.getTextParmAccess().getUnitAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__McsTypedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__McsTypedName__Group__0__Impl
	rule__McsTypedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__McsTypedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcsTypedNameAccess().getNameAssignment_0()); }
(rule__McsTypedName__NameAssignment_0)
{ after(grammarAccess.getMcsTypedNameAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__McsTypedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__McsTypedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__McsTypedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcsTypedNameAccess().getAlternatives_1()); }
(rule__McsTypedName__Alternatives_1)
{ after(grammarAccess.getMcsTypedNameAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__McsTypedName__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__McsTypedName__Group_1_0__0__Impl
	rule__McsTypedName__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__McsTypedName__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcsTypedNameAccess().getColonKeyword_1_0_0()); }

	Colon 

{ after(grammarAccess.getMcsTypedNameAccess().getColonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__McsTypedName__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__McsTypedName__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__McsTypedName__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcsTypedNameAccess().getTypeAssignment_1_0_1()); }
(rule__McsTypedName__TypeAssignment_1_0_1)
{ after(grammarAccess.getMcsTypedNameAccess().getTypeAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__McsTypedName__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__McsTypedName__Group_1_1__0__Impl
	rule__McsTypedName__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__McsTypedName__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcsTypedNameAccess().getInKeyword_1_1_0()); }

	In 

{ after(grammarAccess.getMcsTypedNameAccess().getInKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__McsTypedName__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__McsTypedName__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__McsTypedName__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcsTypedNameAccess().getExprAssignment_1_1_1()); }
(rule__McsTypedName__ExprAssignment_1_1_1)
{ after(grammarAccess.getMcsTypedNameAccess().getExprAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Theorem_call__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group__0__Impl
	rule__Theorem_call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getAlternatives_0()); }
(rule__Theorem_call__Alternatives_0)
{ after(grammarAccess.getTheorem_callAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_call__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group__1__Impl
	rule__Theorem_call__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getTnameAssignment_1()); }
(rule__Theorem_call__TnameAssignment_1)
{ after(grammarAccess.getTheorem_callAccess().getTnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_call__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group__2__Impl
	rule__Theorem_call__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getGroup_2()); }
(rule__Theorem_call__Group_2__0)?
{ after(grammarAccess.getTheorem_callAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_call__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group__3__Impl
	rule__Theorem_call__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getLeftParenthesisKeyword_3()); }

	LeftParenthesis 

{ after(grammarAccess.getTheorem_callAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_call__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group__4__Impl
	rule__Theorem_call__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getGroup_4()); }
(rule__Theorem_call__Group_4__0)?
{ after(grammarAccess.getTheorem_callAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_call__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getRightParenthesisKeyword_5()); }

	RightParenthesis 

{ after(grammarAccess.getTheorem_callAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Theorem_call__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group_2__0__Impl
	rule__Theorem_call__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getLessThanSignKeyword_2_0()); }

	LessThanSign 

{ after(grammarAccess.getTheorem_callAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_call__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group_2__1__Impl
	rule__Theorem_call__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getAlternatives_2_1()); }
(rule__Theorem_call__Alternatives_2_1)
{ after(grammarAccess.getTheorem_callAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_call__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getGreaterThanSignKeyword_2_2()); }

	GreaterThanSign 

{ after(grammarAccess.getTheorem_callAccess().getGreaterThanSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Theorem_call__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group_4__0__Impl
	rule__Theorem_call__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getActargAssignment_4_0()); }
(rule__Theorem_call__ActargAssignment_4_0)
{ after(grammarAccess.getTheorem_callAccess().getActargAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_call__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getGroup_4_1()); }
(rule__Theorem_call__Group_4_1__0)*
{ after(grammarAccess.getTheorem_callAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Theorem_call__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group_4_1__0__Impl
	rule__Theorem_call__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getCommaKeyword_4_1_0()); }

	Comma 

{ after(grammarAccess.getTheorem_callAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_call__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_call__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getActargAssignment_4_1_1()); }
(rule__Theorem_call__ActargAssignment_4_1_1)
{ after(grammarAccess.getTheorem_callAccess().getActargAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTerm__Group__0__Impl
	rule__RealTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getValueAssignment_0()); }
(rule__RealTerm__ValueAssignment_0)
{ after(grammarAccess.getRealTermAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getUnitAssignment_1()); }
(rule__RealTerm__UnitAssignment_1)?
{ after(grammarAccess.getRealTermAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTerm__Group__0__Impl
	rule__IntegerTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getValueAssignment_0()); }
(rule__IntegerTerm__ValueAssignment_0)
{ after(grammarAccess.getIntegerTermAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getUnitAssignment_1()); }
(rule__IntegerTerm__UnitAssignment_1)?
{ after(grammarAccess.getIntegerTermAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Range__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getLowerBoundAssignment_0()); }
(rule__Range__LowerBoundAssignment_0)
{ after(grammarAccess.getRangeAccess().getLowerBoundAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getFullStopFullStopKeyword_1()); }

	FullStopFullStop 

{ after(grammarAccess.getRangeAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Range__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getUpperBoundAssignment_2()); }
(rule__Range__UpperBoundAssignment_2)
{ after(grammarAccess.getRangeAccess().getUpperBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RefTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTerm__Group__0__Impl
	rule__RefTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTermAccess().getReferenceKeyword_0()); }

	Reference 

{ after(grammarAccess.getRefTermAccess().getReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTerm__Group__1__Impl
	rule__RefTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTermAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getRefTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTerm__Group__2__Impl
	rule__RefTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTermAccess().getGroup_2()); }
(rule__RefTerm__Group_2__0)?
{ after(grammarAccess.getRefTermAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTerm__Group__3__Impl
	rule__RefTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTermAccess().getSubAssignment_3()); }
(rule__RefTerm__SubAssignment_3)
{ after(grammarAccess.getRefTermAccess().getSubAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefTerm__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTerm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTerm__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTermAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getRefTermAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RefTerm__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTerm__Group_2__0__Impl
	rule__RefTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTerm__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTermAccess().getRootAssignment_2_0()); }
(rule__RefTerm__RootAssignment_2_0)
{ after(grammarAccess.getRefTermAccess().getRootAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RefTerm__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RefTerm__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefTerm__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTermAccess().getFullStopKeyword_2_1()); }

	FullStop 

{ after(grammarAccess.getRefTermAccess().getFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NestedDotID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedDotID__Group__0__Impl
	rule__NestedDotID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getBaseAssignment_0()); }
(rule__NestedDotID__BaseAssignment_0)
{ after(grammarAccess.getNestedDotIDAccess().getBaseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedDotID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedDotID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getGroup_1()); }
(rule__NestedDotID__Group_1__0)?
{ after(grammarAccess.getNestedDotIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NestedDotID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedDotID__Group_1__0__Impl
	rule__NestedDotID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getFullStopKeyword_1_0()); }

	FullStop 

{ after(grammarAccess.getNestedDotIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedDotID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedDotID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getSubAssignment_1_1()); }
(rule__NestedDotID__SubAssignment_1_1)
{ after(grammarAccess.getNestedDotIDAccess().getSubAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mcs_name_ref__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mcs_name_ref__Group__0__Impl
	rule__Mcs_name_ref__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mcs_name_ref__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcs_name_refAccess().getRefAssignment_0()); }
(rule__Mcs_name_ref__RefAssignment_0)
{ after(grammarAccess.getMcs_name_refAccess().getRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mcs_name_ref__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mcs_name_ref__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mcs_name_ref__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcs_name_refAccess().getGroup_1()); }
(rule__Mcs_name_ref__Group_1__0)?
{ after(grammarAccess.getMcs_name_refAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mcs_name_ref__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mcs_name_ref__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mcs_name_ref__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcs_name_refAccess().getChainAssignment_1_0()); }
(rule__Mcs_name_ref__ChainAssignment_1_0)
{ after(grammarAccess.getMcs_name_refAccess().getChainAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MethodChain__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChain__Group__0__Impl
	rule__MethodChain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChain__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainAccess().getMethodChainAction_0()); }
(

)
{ after(grammarAccess.getMethodChainAccess().getMethodChainAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChain__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChain__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChain__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainAccess().getGroup_1()); }
(rule__MethodChain__Group_1__0)*
{ after(grammarAccess.getMethodChainAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodChain__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChain__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChain__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainAccess().getGroup_1_0()); }
(rule__MethodChain__Group_1_0__0)
{ after(grammarAccess.getMethodChainAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MethodChain__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChain__Group_1_0__0__Impl
	rule__MethodChain__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChain__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainAccess().getFullStopKeyword_1_0_0()); }

	FullStop 

{ after(grammarAccess.getMethodChainAccess().getFullStopKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodChain__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodChain__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChain__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainAccess().getAlternatives_1_0_1()); }
(rule__MethodChain__Alternatives_1_0_1)
{ after(grammarAccess.getMethodChainAccess().getAlternatives_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BuiltInFnCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuiltInFnCall__Group__0__Impl
	rule__BuiltInFnCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getFnAssignment_0()); }
(rule__BuiltInFnCall__FnAssignment_0)
{ after(grammarAccess.getBuiltInFnCallAccess().getFnAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInFnCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuiltInFnCall__Group__1__Impl
	rule__BuiltInFnCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getBuiltInFnCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInFnCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuiltInFnCall__Group__2__Impl
	rule__BuiltInFnCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getGroup_2()); }
(rule__BuiltInFnCall__Group_2__0)?
{ after(grammarAccess.getBuiltInFnCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInFnCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuiltInFnCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getBuiltInFnCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BuiltInFnCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuiltInFnCall__Group_2__0__Impl
	rule__BuiltInFnCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getArgsAssignment_2_0()); }
(rule__BuiltInFnCall__ArgsAssignment_2_0)
{ after(grammarAccess.getBuiltInFnCallAccess().getArgsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInFnCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuiltInFnCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getGroup_2_1()); }
(rule__BuiltInFnCall__Group_2_1__0)*
{ after(grammarAccess.getBuiltInFnCallAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BuiltInFnCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuiltInFnCall__Group_2_1__0__Impl
	rule__BuiltInFnCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getCommaKeyword_2_1_0()); }

	Comma 

{ after(grammarAccess.getBuiltInFnCallAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltInFnCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BuiltInFnCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getArgsAssignment_2_1_1()); }
(rule__BuiltInFnCall__ArgsAssignment_2_1_1)
{ after(grammarAccess.getBuiltInFnCallAccess().getArgsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FnCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnCall__Group__0__Impl
	rule__FnCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getFnAssignment_0()); }
(rule__FnCall__FnAssignment_0)
{ after(grammarAccess.getFnCallAccess().getFnAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnCall__Group__1__Impl
	rule__FnCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getFnCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnCall__Group__2__Impl
	rule__FnCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getGroup_2()); }
(rule__FnCall__Group_2__0)?
{ after(grammarAccess.getFnCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getFnCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FnCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnCall__Group_2__0__Impl
	rule__FnCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getArgsAssignment_2_0()); }
(rule__FnCall__ArgsAssignment_2_0)
{ after(grammarAccess.getFnCallAccess().getArgsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getGroup_2_1()); }
(rule__FnCall__Group_2_1__0)*
{ after(grammarAccess.getFnCallAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FnCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnCall__Group_2_1__0__Impl
	rule__FnCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getCommaKeyword_2_1_0()); }

	Comma 

{ after(grammarAccess.getFnCallAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getArgsAssignment_2_1_1()); }
(rule__FnCall__ArgsAssignment_2_1_1)
{ after(grammarAccess.getFnCallAccess().getArgsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FailExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailExpr__Group__0__Impl
	rule__FailExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailExprAccess().getImpliesExprParserRuleCall_0()); }
	ruleImpliesExpr
{ after(grammarAccess.getFailExprAccess().getImpliesExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FailExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailExprAccess().getGroup_1()); }
(rule__FailExpr__Group_1__0)?
{ after(grammarAccess.getFailExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FailExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailExpr__Group_1__0__Impl
	rule__FailExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailExprAccess().getGroup_1_0()); }
(rule__FailExpr__Group_1_0__0)
{ after(grammarAccess.getFailExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FailExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailExprAccess().getRightAssignment_1_1()); }
(rule__FailExpr__RightAssignment_1_1)
{ after(grammarAccess.getFailExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FailExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailExprAccess().getGroup_1_0_0()); }
(rule__FailExpr__Group_1_0_0__0)
{ after(grammarAccess.getFailExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__FailExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailExpr__Group_1_0_0__0__Impl
	rule__FailExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getFailExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FailExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FailExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailExprAccess().getOpAssignment_1_0_0_1()); }
(rule__FailExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getFailExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group__0__Impl
	rule__ImpliesExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOrExprParserRuleCall_0()); }
	ruleOrExpr
{ after(grammarAccess.getImpliesExprAccess().getOrExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1()); }
(rule__ImpliesExpr__Group_1__0)?
{ after(grammarAccess.getImpliesExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1__0__Impl
	rule__ImpliesExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1_0()); }
(rule__ImpliesExpr__Group_1_0__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getRightAssignment_1_1()); }
(rule__ImpliesExpr__RightAssignment_1_1)
{ after(grammarAccess.getImpliesExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1_0_0()); }
(rule__ImpliesExpr__Group_1_0_0__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ImpliesExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0_0__0__Impl
	rule__ImpliesExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getImpliesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOpAssignment_1_0_0_1()); }
(rule__ImpliesExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getImpliesExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
	ruleAndExpr
{ after(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
(rule__OrExpr__Group_1__0)*
{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1_0()); }
(rule__OrExpr__Group_1_0__0)
{ after(grammarAccess.getOrExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAssignment_1_1()); }
(rule__OrExpr__RightAssignment_1_1)
{ after(grammarAccess.getOrExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1_0_0()); }
(rule__OrExpr__Group_1_0_0__0)
{ after(grammarAccess.getOrExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OrExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0_0__0__Impl
	rule__OrExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1()); }
(rule__OrExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getInstanceOfExprParserRuleCall_0()); }
	ruleInstanceOfExpr
{ after(grammarAccess.getAndExprAccess().getInstanceOfExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1()); }
(rule__AndExpr__Group_1__0)*
{ after(grammarAccess.getAndExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__0__Impl
	rule__AndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1_0()); }
(rule__AndExpr__Group_1_0__0)
{ after(grammarAccess.getAndExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightAssignment_1_1()); }
(rule__AndExpr__RightAssignment_1_1)
{ after(grammarAccess.getAndExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1_0_0()); }
(rule__AndExpr__Group_1_0_0__0)
{ after(grammarAccess.getAndExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AndExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0_0__0__Impl
	rule__AndExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAndExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getAlternatives_1_0_0_1()); }
(rule__AndExpr__Alternatives_1_0_0_1)
{ after(grammarAccess.getAndExprAccess().getAlternatives_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceOfExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group__0__Impl
	rule__InstanceOfExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getRelationalExprParserRuleCall_0()); }
	ruleRelationalExpr
{ after(grammarAccess.getInstanceOfExprAccess().getRelationalExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getGroup_1()); }
(rule__InstanceOfExpr__Group_1__0)?
{ after(grammarAccess.getInstanceOfExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceOfExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group_1__0__Impl
	rule__InstanceOfExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getGroup_1_0()); }
(rule__InstanceOfExpr__Group_1_0__0)
{ after(grammarAccess.getInstanceOfExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getTypeAssignment_1_1()); }
(rule__InstanceOfExpr__TypeAssignment_1_1)
{ after(grammarAccess.getInstanceOfExprAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceOfExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getGroup_1_0_0()); }
(rule__InstanceOfExpr__Group_1_0_0__0)
{ after(grammarAccess.getInstanceOfExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__InstanceOfExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group_1_0_0__0__Impl
	rule__InstanceOfExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getInstanceOfExprExprAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getInstanceOfExprAccess().getInstanceOfExprExprAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceOfExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceOfExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getInstanceofKeyword_1_0_0_1()); }

	Instanceof 

{ after(grammarAccess.getInstanceOfExprAccess().getInstanceofKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group__0__Impl
	rule__RelationalExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getPlusExprParserRuleCall_0()); }
	rulePlusExpr
{ after(grammarAccess.getRelationalExprAccess().getPlusExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup_1()); }
(rule__RelationalExpr__Group_1__0)?
{ after(grammarAccess.getRelationalExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1__0__Impl
	rule__RelationalExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup_1_0()); }
(rule__RelationalExpr__Group_1_0__0)
{ after(grammarAccess.getRelationalExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getRightAssignment_1_1()); }
(rule__RelationalExpr__RightAssignment_1_1)
{ after(grammarAccess.getRelationalExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup_1_0_0()); }
(rule__RelationalExpr__Group_1_0_0__0)
{ after(grammarAccess.getRelationalExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RelationalExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1_0_0__0__Impl
	rule__RelationalExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getRelationalExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getOpAssignment_1_0_0_1()); }
(rule__RelationalExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getRelationalExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group__0__Impl
	rule__PlusExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getTimesExprParserRuleCall_0()); }
	ruleTimesExpr
{ after(grammarAccess.getPlusExprAccess().getTimesExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getGroup_1()); }
(rule__PlusExpr__Group_1__0)*
{ after(grammarAccess.getPlusExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1__0__Impl
	rule__PlusExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getGroup_1_0()); }
(rule__PlusExpr__Group_1_0__0)
{ after(grammarAccess.getPlusExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getRightAssignment_1_1()); }
(rule__PlusExpr__RightAssignment_1_1)
{ after(grammarAccess.getPlusExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getGroup_1_0_0()); }
(rule__PlusExpr__Group_1_0_0__0)
{ after(grammarAccess.getPlusExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PlusExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1_0_0__0__Impl
	rule__PlusExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getPlusExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getOpAssignment_1_0_0_1()); }
(rule__PlusExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getPlusExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimesExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group__0__Impl
	rule__TimesExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getPrefixExprParserRuleCall_0()); }
	rulePrefixExpr
{ after(grammarAccess.getTimesExprAccess().getPrefixExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimesExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getGroup_1()); }
(rule__TimesExpr__Group_1__0)*
{ after(grammarAccess.getTimesExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimesExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group_1__0__Impl
	rule__TimesExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getGroup_1_0()); }
(rule__TimesExpr__Group_1_0__0)
{ after(grammarAccess.getTimesExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimesExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getRightAssignment_1_1()); }
(rule__TimesExpr__RightAssignment_1_1)
{ after(grammarAccess.getTimesExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimesExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getGroup_1_0_0()); }
(rule__TimesExpr__Group_1_0_0__0)
{ after(grammarAccess.getTimesExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TimesExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group_1_0_0__0__Impl
	rule__TimesExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getTimesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimesExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimesExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getOpAssignment_1_0_0_1()); }
(rule__TimesExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getTimesExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrefixExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_0__0__Impl
	rule__PrefixExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getUnaryExprAction_0_0()); }
(

)
{ after(grammarAccess.getPrefixExprAccess().getUnaryExprAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_0__1__Impl
	rule__PrefixExpr__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getOpAssignment_0_1()); }
(rule__PrefixExpr__OpAssignment_0_1)
{ after(grammarAccess.getPrefixExprAccess().getOpAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixExpr__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpr__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getExprAssignment_0_2()); }
(rule__PrefixExpr__ExprAssignment_0_2)
{ after(grammarAccess.getPrefixExprAccess().getExprAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostCastExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostCastExpr__Group__0__Impl
	rule__PostCastExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getPostCastExprAction_0()); }
(

)
{ after(grammarAccess.getPostCastExprAccess().getPostCastExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostCastExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostCastExpr__Group__1__Impl
	rule__PostCastExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getExprAssignment_1()); }
(rule__PostCastExpr__ExprAssignment_1)
{ after(grammarAccess.getPostCastExprAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostCastExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostCastExpr__Group__2__Impl
	rule__PostCastExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getGroup_2()); }
(rule__PostCastExpr__Group_2__0)?
{ after(grammarAccess.getPostCastExprAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostCastExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostCastExpr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getGroup_3()); }
(rule__PostCastExpr__Group_3__0)?
{ after(grammarAccess.getPostCastExprAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PostCastExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostCastExpr__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getChainAssignment_2_0()); }
(rule__PostCastExpr__ChainAssignment_2_0)
{ after(grammarAccess.getPostCastExprAccess().getChainAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PostCastExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostCastExpr__Group_3__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getGroup_3_0()); }
(rule__PostCastExpr__Group_3_0__0)
{ after(grammarAccess.getPostCastExprAccess().getGroup_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PostCastExpr__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostCastExpr__Group_3_0__0__Impl
	rule__PostCastExpr__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getLessThanSignKeyword_3_0_0()); }

	LessThanSign 

{ after(grammarAccess.getPostCastExprAccess().getLessThanSignKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostCastExpr__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostCastExpr__Group_3_0__1__Impl
	rule__PostCastExpr__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getNewtypeAssignment_3_0_1()); }
(rule__PostCastExpr__NewtypeAssignment_3_0_1)
{ after(grammarAccess.getPostCastExprAccess().getNewtypeAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostCastExpr__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostCastExpr__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getGreaterThanSignKeyword_3_0_2()); }

	GreaterThanSign 

{ after(grammarAccess.getPostCastExprAccess().getGreaterThanSignKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MCSNameExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSNameExpr__Group__0__Impl
	rule__MCSNameExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSNameExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSNameExprAccess().getMCSNameExprAction_0()); }
(

)
{ after(grammarAccess.getMCSNameExprAccess().getMCSNameExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSNameExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSNameExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSNameExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSNameExprAccess().getAlternatives_1()); }
(rule__MCSNameExpr__Alternatives_1)
{ after(grammarAccess.getMCSNameExprAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_1__0__Impl
	rule__Expression_term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getPkgExprAction_1_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getPkgExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_1__1__Impl
	rule__Expression_term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getPackageKeyword_1_1()); }

	Package 

{ after(grammarAccess.getExpression_termAccess().getPackageKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_1__2__Impl
	rule__Expression_term__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLeftParenthesisKeyword_1_2()); }

	LeftParenthesis 

{ after(grammarAccess.getExpression_termAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_1__3__Impl
	rule__Expression_term__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getPackageAssignment_1_3()); }
(rule__Expression_term__PackageAssignment_1_3)
{ after(grammarAccess.getExpression_termAccess().getPackageAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getRightParenthesisKeyword_1_4()); }

	RightParenthesis 

{ after(grammarAccess.getExpression_termAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression_term__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_2__0__Impl
	rule__Expression_term__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getCompExprAction_2_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getCompExprAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getClassifierAssignment_2_1()); }
(rule__Expression_term__ClassifierAssignment_2_1)
{ after(grammarAccess.getExpression_termAccess().getClassifierAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_3__0__Impl
	rule__Expression_term__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getRefExprAction_3_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getRefExprAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getReferenceAssignment_3_1()); }
(rule__Expression_term__ReferenceAssignment_3_1)
{ after(grammarAccess.getExpression_termAccess().getReferenceAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_4__0__Impl
	rule__Expression_term__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getThisExprAction_4_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getThisExprAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_4__1__Impl
	rule__Expression_term__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getThisKeyword_4_1()); }

	This 

{ after(grammarAccess.getExpression_termAccess().getThisKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getGroup_4_2()); }
(rule__Expression_term__Group_4_2__0)?
{ after(grammarAccess.getExpression_termAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_term__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_4_2__0__Impl
	rule__Expression_term__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFullStopKeyword_4_2_0()); }

	FullStop 

{ after(grammarAccess.getExpression_termAccess().getFullStopKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getSubAssignment_4_2_1()); }
(rule__Expression_term__SubAssignment_4_2_1)
{ after(grammarAccess.getExpression_termAccess().getSubAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_5__0__Impl
	rule__Expression_term__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getIntExprAction_5_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getIntExprAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getValAssignment_5_1()); }
(rule__Expression_term__ValAssignment_5_1)
{ after(grammarAccess.getExpression_termAccess().getValAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_6__0__Impl
	rule__Expression_term__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getRealExprAction_6_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getRealExprAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getValAssignment_6_1()); }
(rule__Expression_term__ValAssignment_6_1)
{ after(grammarAccess.getExpression_termAccess().getValAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_7__0__Impl
	rule__Expression_term__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getBoolExprAction_7_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getBoolExprAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getValAssignment_7_1()); }
(rule__Expression_term__ValAssignment_7_1)
{ after(grammarAccess.getExpression_termAccess().getValAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_8__0__Impl
	rule__Expression_term__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getStringExprAction_8_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getStringExprAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getValAssignment_8_1()); }
(rule__Expression_term__ValAssignment_8_1)
{ after(grammarAccess.getExpression_termAccess().getValAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_9__0__Impl
	rule__Expression_term__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getRangeAction_9_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getRangeAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getValAssignment_9_1()); }
(rule__Expression_term__ValAssignment_9_1)
{ after(grammarAccess.getExpression_termAccess().getValAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_10__0__Impl
	rule__Expression_term__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getIfThenElseExprAction_10_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getIfThenElseExprAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_10__1__Impl
	rule__Expression_term__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getIfKeyword_10_1()); }

	If 

{ after(grammarAccess.getExpression_termAccess().getIfKeyword_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_10__2__Impl
	rule__Expression_term__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getCondAssignment_10_2()); }
(rule__Expression_term__CondAssignment_10_2)
{ after(grammarAccess.getExpression_termAccess().getCondAssignment_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_10__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_10__3__Impl
	rule__Expression_term__Group_10__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_10__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getThenKeyword_10_3()); }

	Then 

{ after(grammarAccess.getExpression_termAccess().getThenKeyword_10_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_10__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_10__4__Impl
	rule__Expression_term__Group_10__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_10__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getThenAssignment_10_4()); }
(rule__Expression_term__ThenAssignment_10_4)
{ after(grammarAccess.getExpression_termAccess().getThenAssignment_10_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_10__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_10__5__Impl
	rule__Expression_term__Group_10__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_10__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getElseKeyword_10_5()); }

	Else 

{ after(grammarAccess.getExpression_termAccess().getElseKeyword_10_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_10__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_10__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_10__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getElseAssignment_10_6()); }
(rule__Expression_term__ElseAssignment_10_6)
{ after(grammarAccess.getExpression_termAccess().getElseAssignment_10_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Expression_term__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_11__0__Impl
	rule__Expression_term__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getQuantifiedExprAction_11_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getQuantifiedExprAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_11__1__Impl
	rule__Expression_term__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getQuantAssignment_11_1()); }
(rule__Expression_term__QuantAssignment_11_1)
{ after(grammarAccess.getExpression_termAccess().getQuantAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_11__2__Impl
	rule__Expression_term__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExpression_termAccess().getGroup_11_2()); }
(rule__Expression_term__Group_11_2__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_11_2()); }
)
(
{ before(grammarAccess.getExpression_termAccess().getGroup_11_2()); }
(rule__Expression_term__Group_11_2__0)*
{ after(grammarAccess.getExpression_termAccess().getGroup_11_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_11__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_11__3__Impl
	rule__Expression_term__Group_11__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_11__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFullStopKeyword_11_3()); }

	FullStop 

{ after(grammarAccess.getExpression_termAccess().getFullStopKeyword_11_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_11__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_11__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_11__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExprAssignment_11_4()); }
(rule__Expression_term__ExprAssignment_11_4)
{ after(grammarAccess.getExpression_termAccess().getExprAssignment_11_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression_term__Group_11_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_11_2__0__Impl
	rule__Expression_term__Group_11_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_11_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLeftParenthesisKeyword_11_2_0()); }

	LeftParenthesis 

{ after(grammarAccess.getExpression_termAccess().getLeftParenthesisKeyword_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_11_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_11_2__1__Impl
	rule__Expression_term__Group_11_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_11_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getArgsAssignment_11_2_1()); }
(rule__Expression_term__ArgsAssignment_11_2_1)
{ after(grammarAccess.getExpression_termAccess().getArgsAssignment_11_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_11_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_11_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_11_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getRightParenthesisKeyword_11_2_2()); }

	RightParenthesis 

{ after(grammarAccess.getExpression_termAccess().getRightParenthesisKeyword_11_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_term__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_12__0__Impl
	rule__Expression_term__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getBuiltInFnCallExprAction_12_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getBuiltInFnCallExprAction_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getBuiltinAssignment_12_1()); }
(rule__Expression_term__BuiltinAssignment_12_1)
{ after(grammarAccess.getExpression_termAccess().getBuiltinAssignment_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_13__0__Impl
	rule__Expression_term__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFnCallExprAction_13_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getFnCallExprAction_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFnAssignment_13_1()); }
(rule__Expression_term__FnAssignment_13_1)
{ after(grammarAccess.getExpression_termAccess().getFnAssignment_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_14__0__Impl
	rule__Expression_term__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getTheoremCallExprAction_14_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getTheoremCallExprAction_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFnAssignment_14_1()); }
(rule__Expression_term__FnAssignment_14_1)
{ after(grammarAccess.getExpression_termAccess().getFnAssignment_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15__0__Impl
	rule__Expression_term__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFilterSetAction_15_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getFilterSetAction_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15__1__Impl
	rule__Expression_term__Group_15__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getListAssignment_15_1()); }
(rule__Expression_term__ListAssignment_15_1)?
{ after(grammarAccess.getExpression_termAccess().getListAssignment_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15__2__Impl
	rule__Expression_term__Group_15__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLeftCurlyBracketKeyword_15_2()); }

	LeftCurlyBracket 

{ after(grammarAccess.getExpression_termAccess().getLeftCurlyBracketKeyword_15_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15__3__Impl
	rule__Expression_term__Group_15__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExpAssignment_15_3()); }
(rule__Expression_term__ExpAssignment_15_3)
{ after(grammarAccess.getExpression_termAccess().getExpAssignment_15_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15__4__Impl
	rule__Expression_term__Group_15__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getAlternatives_15_4()); }
(rule__Expression_term__Alternatives_15_4)
{ after(grammarAccess.getExpression_termAccess().getAlternatives_15_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getRightCurlyBracketKeyword_15_5()); }

	RightCurlyBracket 

{ after(grammarAccess.getExpression_termAccess().getRightCurlyBracketKeyword_15_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Expression_term__Group_15_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_0__0__Impl
	rule__Expression_term__Group_15_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFilterMapExprMapAction_15_4_0_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getFilterMapExprMapAction_15_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_0__1__Impl
	rule__Expression_term__Group_15_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getForKeyword_15_4_0_1()); }

	For 

{ after(grammarAccess.getExpression_termAccess().getForKeyword_15_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_0__2__Impl
	rule__Expression_term__Group_15_4_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExpression_termAccess().getGroup_15_4_0_2()); }
(rule__Expression_term__Group_15_4_0_2__0)
{ after(grammarAccess.getExpression_termAccess().getGroup_15_4_0_2()); }
)
(
{ before(grammarAccess.getExpression_termAccess().getGroup_15_4_0_2()); }
(rule__Expression_term__Group_15_4_0_2__0)*
{ after(grammarAccess.getExpression_termAccess().getGroup_15_4_0_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15_4_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getGroup_15_4_0_3()); }
(rule__Expression_term__Group_15_4_0_3__0)?
{ after(grammarAccess.getExpression_termAccess().getGroup_15_4_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression_term__Group_15_4_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_0_2__0__Impl
	rule__Expression_term__Group_15_4_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLeftParenthesisKeyword_15_4_0_2_0()); }

	LeftParenthesis 

{ after(grammarAccess.getExpression_termAccess().getLeftParenthesisKeyword_15_4_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15_4_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_0_2__1__Impl
	rule__Expression_term__Group_15_4_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getArgsAssignment_15_4_0_2_1()); }
(rule__Expression_term__ArgsAssignment_15_4_0_2_1)
{ after(grammarAccess.getExpression_termAccess().getArgsAssignment_15_4_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15_4_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getRightParenthesisKeyword_15_4_0_2_2()); }

	RightParenthesis 

{ after(grammarAccess.getExpression_termAccess().getRightParenthesisKeyword_15_4_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_term__Group_15_4_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_0_3__0__Impl
	rule__Expression_term__Group_15_4_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getVerticalLineKeyword_15_4_0_3_0()); }

	VerticalLine 

{ after(grammarAccess.getExpression_termAccess().getVerticalLineKeyword_15_4_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15_4_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFilterAssignment_15_4_0_3_1()); }
(rule__Expression_term__FilterAssignment_15_4_0_3_1)
{ after(grammarAccess.getExpression_termAccess().getFilterAssignment_15_4_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_15_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_1__0__Impl
	rule__Expression_term__Group_15_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getSetExprExprsAction_15_4_1_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getSetExprExprsAction_15_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getGroup_15_4_1_1()); }
(rule__Expression_term__Group_15_4_1_1__0)*
{ after(grammarAccess.getExpression_termAccess().getGroup_15_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_15_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_1_1__0__Impl
	rule__Expression_term__Group_15_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getCommaKeyword_15_4_1_1_0()); }

	Comma 

{ after(grammarAccess.getExpression_termAccess().getCommaKeyword_15_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_15_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_15_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_15_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExprsAssignment_15_4_1_1_1()); }
(rule__Expression_term__ExprsAssignment_15_4_1_1_1)
{ after(grammarAccess.getExpression_termAccess().getExprsAssignment_15_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_term__Group_16__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_16__0__Impl
	rule__Expression_term__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_16__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getMappingExprAction_16_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getMappingExprAction_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_16__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_16__1__Impl
	rule__Expression_term__Group_16__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_16__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLeftSquareBracketKeyword_16_1()); }

	LeftSquareBracket 

{ after(grammarAccess.getExpression_termAccess().getLeftSquareBracketKeyword_16_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_16__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_16__2__Impl
	rule__Expression_term__Group_16__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_16__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExpr1Assignment_16_2()); }
(rule__Expression_term__Expr1Assignment_16_2)
{ after(grammarAccess.getExpression_termAccess().getExpr1Assignment_16_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_16__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_16__3__Impl
	rule__Expression_term__Group_16__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_16__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getCommaKeyword_16_3()); }

	Comma 

{ after(grammarAccess.getExpression_termAccess().getCommaKeyword_16_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_16__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_16__4__Impl
	rule__Expression_term__Group_16__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_16__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExpr2Assignment_16_4()); }
(rule__Expression_term__Expr2Assignment_16_4)
{ after(grammarAccess.getExpression_termAccess().getExpr2Assignment_16_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_16__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_16__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_16__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getRightSquareBracketKeyword_16_5()); }

	RightSquareBracket 

{ after(grammarAccess.getExpression_termAccess().getRightSquareBracketKeyword_16_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Expression_term__Group_17__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_17__0__Impl
	rule__Expression_term__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_17__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getEmptySetExprAction_17_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getEmptySetExprAction_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_17__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_17__1__Impl
	rule__Expression_term__Group_17__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_17__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLeftCurlyBracketKeyword_17_1()); }

	LeftCurlyBracket 

{ after(grammarAccess.getExpression_termAccess().getLeftCurlyBracketKeyword_17_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_17__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_17__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_17__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getRightCurlyBracketKeyword_17_2()); }

	RightCurlyBracket 

{ after(grammarAccess.getExpression_termAccess().getRightCurlyBracketKeyword_17_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_term__Group_18__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_18__0__Impl
	rule__Expression_term__Group_18__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_18__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLetExprAction_18_0()); }
(

)
{ after(grammarAccess.getExpression_termAccess().getLetExprAction_18_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_18__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_18__1__Impl
	rule__Expression_term__Group_18__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_18__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLetKeyword_18_1()); }

	Let 

{ after(grammarAccess.getExpression_termAccess().getLetKeyword_18_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_18__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_18__2__Impl
	rule__Expression_term__Group_18__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_18__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLocalAssignment_18_2()); }
(rule__Expression_term__LocalAssignment_18_2)
{ after(grammarAccess.getExpression_termAccess().getLocalAssignment_18_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_18__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_18__3__Impl
	rule__Expression_term__Group_18__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_18__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getEqualsSignKeyword_18_3()); }

	EqualsSign 

{ after(grammarAccess.getExpression_termAccess().getEqualsSignKeyword_18_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_18__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_18__4__Impl
	rule__Expression_term__Group_18__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_18__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExpr1Assignment_18_4()); }
(rule__Expression_term__Expr1Assignment_18_4)
{ after(grammarAccess.getExpression_termAccess().getExpr1Assignment_18_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_18__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_18__5__Impl
	rule__Expression_term__Group_18__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_18__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getSemicolonKeyword_18_5()); }

	Semicolon 

{ after(grammarAccess.getExpression_termAccess().getSemicolonKeyword_18_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_18__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_18__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_18__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExpr2Assignment_18_6()); }
(rule__Expression_term__Expr2Assignment_18_6)
{ after(grammarAccess.getExpression_termAccess().getExpr2Assignment_18_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Expression_term__Group_19__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_19__0__Impl
	rule__Expression_term__Group_19__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_19__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLeftParenthesisKeyword_19_0()); }

	LeftParenthesis 

{ after(grammarAccess.getExpression_termAccess().getLeftParenthesisKeyword_19_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_19__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_19__1__Impl
	rule__Expression_term__Group_19__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_19__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExprParserRuleCall_19_1()); }
	ruleExpr
{ after(grammarAccess.getExpression_termAccess().getExprParserRuleCall_19_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_term__Group_19__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_term__Group_19__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Group_19__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getRightParenthesisKeyword_19_2()); }

	RightParenthesis 

{ after(grammarAccess.getExpression_termAccess().getRightParenthesisKeyword_19_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Basic_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Basic_type__Group__0__Impl
	rule__Basic_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getBasic_typeAction_0()); }
(

)
{ after(grammarAccess.getBasic_typeAccess().getBasic_typeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Basic_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Basic_type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getAlternatives_1()); }
(rule__Basic_type__Alternatives_1)
{ after(grammarAccess.getBasic_typeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mapping_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping_type__Group__0__Impl
	rule__Mapping_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapping_typeAccess().getLeftSquareBracketKeyword_0()); }

	LeftSquareBracket 

{ after(grammarAccess.getMapping_typeAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping_type__Group__1__Impl
	rule__Mapping_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapping_typeAccess().getKeyAssignment_1()); }
(rule__Mapping_type__KeyAssignment_1)
{ after(grammarAccess.getMapping_typeAccess().getKeyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping_type__Group__2__Impl
	rule__Mapping_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapping_typeAccess().getToKeyword_2()); }

	To 

{ after(grammarAccess.getMapping_typeAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping_type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping_type__Group__3__Impl
	rule__Mapping_type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping_type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapping_typeAccess().getValAssignment_3()); }
(rule__Mapping_type__ValAssignment_3)
{ after(grammarAccess.getMapping_typeAccess().getValAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping_type__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping_type__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping_type__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapping_typeAccess().getRightSquareBracketKeyword_4()); }

	RightSquareBracket 

{ after(grammarAccess.getMapping_typeAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Set_type__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group_0__0__Impl
	rule__Set_type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getLeftCurlyBracketKeyword_0_0()); }

	LeftCurlyBracket 

{ after(grammarAccess.getSet_typeAccess().getLeftCurlyBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set_type__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group_0__1__Impl
	rule__Set_type__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getRoot_typeAssignment_0_1()); }
(rule__Set_type__Root_typeAssignment_0_1)
{ after(grammarAccess.getSet_typeAccess().getRoot_typeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set_type__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getRightCurlyBracketKeyword_0_2()); }

	RightCurlyBracket 

{ after(grammarAccess.getSet_typeAccess().getRightCurlyBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Set_type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group_1__0__Impl
	rule__Set_type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getSetKeyword_1_0()); }

	Set 

{ after(grammarAccess.getSet_typeAccess().getSetKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set_type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group_1__1__Impl
	rule__Set_type__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getLessThanSignKeyword_1_1()); }

	LessThanSign 

{ after(grammarAccess.getSet_typeAccess().getLessThanSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set_type__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group_1__2__Impl
	rule__Set_type__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getRoot_typeAssignment_1_2()); }
(rule__Set_type__Root_typeAssignment_1_2)
{ after(grammarAccess.getSet_typeAccess().getRoot_typeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set_type__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getGreaterThanSignKeyword_1_3()); }

	GreaterThanSign 

{ after(grammarAccess.getSet_typeAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__List_type__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List_type__Group_0__0__Impl
	rule__List_type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getLeftParenthesisKeyword_0_0()); }

	LeftParenthesis 

{ after(grammarAccess.getList_typeAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List_type__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List_type__Group_0__1__Impl
	rule__List_type__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getRoot_typeAssignment_0_1()); }
(rule__List_type__Root_typeAssignment_0_1)
{ after(grammarAccess.getList_typeAccess().getRoot_typeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List_type__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List_type__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getRightParenthesisKeyword_0_2()); }

	RightParenthesis 

{ after(grammarAccess.getList_typeAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__List_type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List_type__Group_1__0__Impl
	rule__List_type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getListKeyword_1_0()); }

	List 

{ after(grammarAccess.getList_typeAccess().getListKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List_type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List_type__Group_1__1__Impl
	rule__List_type__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getLessThanSignKeyword_1_1()); }

	LessThanSign 

{ after(grammarAccess.getList_typeAccess().getLessThanSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List_type__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List_type__Group_1__2__Impl
	rule__List_type__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getRoot_typeAssignment_1_2()); }
(rule__List_type__Root_typeAssignment_1_2)
{ after(grammarAccess.getList_typeAccess().getRoot_typeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List_type__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List_type__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getGreaterThanSignKeyword_1_3()); }

	GreaterThanSign 

{ after(grammarAccess.getList_typeAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Record_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__0__Impl
	rule__Record_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getRecordKeyword_0()); }

	Record 

{ after(grammarAccess.getRecord_typeAccess().getRecordKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__1__Impl
	rule__Record_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getLeftParenthesisSpaceKeyword_1()); }

	LeftParenthesisSpace 

{ after(grammarAccess.getRecord_typeAccess().getLeftParenthesisSpaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__2__Impl
	rule__Record_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRecord_typeAccess().getFieldAssignment_2()); }
(rule__Record_type__FieldAssignment_2)
{ after(grammarAccess.getRecord_typeAccess().getFieldAssignment_2()); }
)
(
{ before(grammarAccess.getRecord_typeAccess().getFieldAssignment_2()); }
(rule__Record_type__FieldAssignment_2)*
{ after(grammarAccess.getRecord_typeAccess().getFieldAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record_type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getRecord_typeAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Union_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group__0__Impl
	rule__Union_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getUnionKeyword_0()); }

	Union 

{ after(grammarAccess.getUnion_typeAccess().getUnionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group__1__Impl
	rule__Union_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getUnion_typeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group__2__Impl
	rule__Union_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypesAssignment_2()); }
(rule__Union_type__TypesAssignment_2)
{ after(grammarAccess.getUnion_typeAccess().getTypesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group__3__Impl
	rule__Union_type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getGroup_3()); }
(rule__Union_type__Group_3__0)*
{ after(grammarAccess.getUnion_typeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getUnion_typeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Union_type__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group_3__0__Impl
	rule__Union_type__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getCommaKeyword_3_0()); }

	Comma 

{ after(grammarAccess.getUnion_typeAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypeAssignment_3_1()); }
(rule__Union_type__TypeAssignment_3_1)
{ after(grammarAccess.getUnion_typeAccess().getTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Id_type_pair__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Id_type_pair__Group__0__Impl
	rule__Id_type_pair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Id_type_pair__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_type_pairAccess().getNameAssignment_0()); }
(rule__Id_type_pair__NameAssignment_0)
{ after(grammarAccess.getId_type_pairAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Id_type_pair__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Id_type_pair__Group__1__Impl
	rule__Id_type_pair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Id_type_pair__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_type_pairAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getId_type_pairAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Id_type_pair__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Id_type_pair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Id_type_pair__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_type_pairAccess().getTypeAssignment_2()); }
(rule__Id_type_pair__TypeAssignment_2)
{ after(grammarAccess.getId_type_pairAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntegerRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerRange__Group__0__Impl
	rule__IntegerRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getLowerBoundAssignment_0()); }
(rule__IntegerRange__LowerBoundAssignment_0)
{ after(grammarAccess.getIntegerRangeAccess().getLowerBoundAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerRange__Group__1__Impl
	rule__IntegerRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getFullStopFullStopKeyword_1()); }

	FullStopFullStop 

{ after(grammarAccess.getIntegerRangeAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerRange__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getUpperBoundAssignment_2()); }
(rule__IntegerRange__UpperBoundAssignment_2)
{ after(grammarAccess.getIntegerRangeAccess().getUpperBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RealRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealRange__Group__0__Impl
	rule__RealRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getLowerBoundAssignment_0()); }
(rule__RealRange__LowerBoundAssignment_0)
{ after(grammarAccess.getRealRangeAccess().getLowerBoundAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealRange__Group__1__Impl
	rule__RealRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getFullStopFullStopKeyword_1()); }

	FullStopFullStop 

{ after(grammarAccess.getRealRangeAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealRange__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getUpperBoundAssignment_2()); }
(rule__RealRange__UpperBoundAssignment_2)
{ after(grammarAccess.getRealRangeAccess().getUpperBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnnamedIntegerType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group__0__Impl
	rule__UnnamedIntegerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getUnnamedIntegerTypeAction_0()); }
(

)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getUnnamedIntegerTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedIntegerType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group__1__Impl
	rule__UnnamedIntegerType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getAlternatives_1()); }
(rule__UnnamedIntegerType__Alternatives_1)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedIntegerType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group__2__Impl
	rule__UnnamedIntegerType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getRangeAssignment_2()); }
(rule__UnnamedIntegerType__RangeAssignment_2)?
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getRangeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedIntegerType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getAlternatives_3()); }
(rule__UnnamedIntegerType__Alternatives_3)?
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnnamedIntegerType__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group_3_1__0__Impl
	rule__UnnamedIntegerType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getUnitsKeyword_3_1_0()); }

	Units 

{ after(grammarAccess.getUnnamedIntegerTypeAccess().getUnitsKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedIntegerType__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeAssignment_3_1_1()); }
(rule__UnnamedIntegerType__ReferencedUnitsTypeAssignment_3_1_1)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedRealType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group__0__Impl
	rule__UnnamedRealType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getUnnamedRealTypeAction_0()); }
(

)
{ after(grammarAccess.getUnnamedRealTypeAccess().getUnnamedRealTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRealType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group__1__Impl
	rule__UnnamedRealType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getAlternatives_1()); }
(rule__UnnamedRealType__Alternatives_1)
{ after(grammarAccess.getUnnamedRealTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRealType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group__2__Impl
	rule__UnnamedRealType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getRangeAssignment_2()); }
(rule__UnnamedRealType__RangeAssignment_2)?
{ after(grammarAccess.getUnnamedRealTypeAccess().getRangeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRealType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getAlternatives_3()); }
(rule__UnnamedRealType__Alternatives_3)?
{ after(grammarAccess.getUnnamedRealTypeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnnamedRealType__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group_3_1__0__Impl
	rule__UnnamedRealType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getUnitsKeyword_3_1_0()); }

	Units 

{ after(grammarAccess.getUnnamedRealTypeAccess().getUnitsKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRealType__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeAssignment_3_1_1()); }
(rule__UnnamedRealType__ReferencedUnitsTypeAssignment_3_1_1)
{ after(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedUnitsType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group__0__Impl
	rule__UnnamedUnitsType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getUnitsKeyword_0()); }

	Units 

{ after(grammarAccess.getUnnamedUnitsTypeAccess().getUnitsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedUnitsType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group__1__Impl
	rule__UnnamedUnitsType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getUnnamedUnitsTypeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedUnitsType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group__2__Impl
	rule__UnnamedUnitsType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralAssignment_2()); }
(rule__UnnamedUnitsType__OwnedLiteralAssignment_2)
{ after(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedUnitsType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group__3__Impl
	rule__UnnamedUnitsType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getGroup_3()); }
(rule__UnnamedUnitsType__Group_3__0)*
{ after(grammarAccess.getUnnamedUnitsTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedUnitsType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getUnnamedUnitsTypeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnnamedUnitsType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group_3__0__Impl
	rule__UnnamedUnitsType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getCommaKeyword_3_0()); }

	Comma 

{ after(grammarAccess.getUnnamedUnitsTypeAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedUnitsType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralAssignment_3_1()); }
(rule__UnnamedUnitsType__OwnedLiteralAssignment_3_1)
{ after(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitLiteralConversion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitLiteralConversion__Group__0__Impl
	rule__UnitLiteralConversion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getNameAssignment_0()); }
(rule__UnitLiteralConversion__NameAssignment_0)
{ after(grammarAccess.getUnitLiteralConversionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitLiteralConversion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitLiteralConversion__Group__1__Impl
	rule__UnitLiteralConversion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getUnitLiteralConversionAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitLiteralConversion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitLiteralConversion__Group__2__Impl
	rule__UnitLiteralConversion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitAssignment_2()); }
(rule__UnitLiteralConversion__BaseUnitAssignment_2)
{ after(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitLiteralConversion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitLiteralConversion__Group__3__Impl
	rule__UnitLiteralConversion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getSTARParserRuleCall_3()); }
	ruleSTAR
{ after(grammarAccess.getUnitLiteralConversionAccess().getSTARParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitLiteralConversion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitLiteralConversion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getFactorAssignment_4()); }
(rule__UnitLiteralConversion__FactorAssignment_4)
{ after(grammarAccess.getUnitLiteralConversionAccess().getFactorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnnamedBooleanType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedBooleanType__Group__0__Impl
	rule__UnnamedBooleanType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedBooleanType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedBooleanTypeAccess().getAadlBooleanAction_0()); }
(

)
{ after(grammarAccess.getUnnamedBooleanTypeAccess().getAadlBooleanAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedBooleanType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedBooleanType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedBooleanType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedBooleanTypeAccess().getAlternatives_1()); }
(rule__UnnamedBooleanType__Alternatives_1)
{ after(grammarAccess.getUnnamedBooleanTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedStringType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedStringType__Group__0__Impl
	rule__UnnamedStringType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedStringType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedStringTypeAccess().getAadlStringAction_0()); }
(

)
{ after(grammarAccess.getUnnamedStringTypeAccess().getAadlStringAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedStringType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedStringType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedStringType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedStringTypeAccess().getAlternatives_1()); }
(rule__UnnamedStringType__Alternatives_1)
{ after(grammarAccess.getUnnamedStringTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedEnumerationType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group__0__Impl
	rule__UnnamedEnumerationType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getAlternatives_0()); }
(rule__UnnamedEnumerationType__Alternatives_0)
{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedEnumerationType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group__1__Impl
	rule__UnnamedEnumerationType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedEnumerationType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group__2__Impl
	rule__UnnamedEnumerationType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralAssignment_2()); }
(rule__UnnamedEnumerationType__OwnedLiteralAssignment_2)
{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedEnumerationType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group__3__Impl
	rule__UnnamedEnumerationType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getGroup_3()); }
(rule__UnnamedEnumerationType__Group_3__0)*
{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedEnumerationType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnnamedEnumerationType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group_3__0__Impl
	rule__UnnamedEnumerationType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getCommaKeyword_3_0()); }

	Comma 

{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedEnumerationType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralAssignment_3_1()); }
(rule__UnnamedEnumerationType__OwnedLiteralAssignment_3_1)
{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedRangeType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRangeType__Group__0__Impl
	rule__UnnamedRangeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getRangeKeyword_0()); }

	Range 

{ after(grammarAccess.getUnnamedRangeTypeAccess().getRangeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRangeType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRangeType__Group__1__Impl
	rule__UnnamedRangeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getOfKeyword_1()); }

	Of 

{ after(grammarAccess.getUnnamedRangeTypeAccess().getOfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRangeType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRangeType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getAlternatives_2()); }
(rule__UnnamedRangeType__Alternatives_2)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FQCREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group__0__Impl
	rule__FQCREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFQCREFAccess().getGroup_0()); }
(rule__FQCREF__Group_0__0)
{ after(grammarAccess.getFQCREFAccess().getGroup_0()); }
)
(
{ before(grammarAccess.getFQCREFAccess().getGroup_0()); }
(rule__FQCREF__Group_0__0)*
{ after(grammarAccess.getFQCREFAccess().getGroup_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQCREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group__1__Impl
	rule__FQCREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQCREF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getGroup_2()); }
(rule__FQCREF__Group_2__0)?
{ after(grammarAccess.getFQCREFAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FQCREF__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group_0__0__Impl
	rule__FQCREF__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQCREF__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getColonColonKeyword_0_1()); }

	ColonColon 

{ after(grammarAccess.getFQCREFAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQCREF__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getGroup_2_0()); }
(rule__FQCREF__Group_2_0__0)
{ after(grammarAccess.getFQCREFAccess().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__FQCREF__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group_2_0__0__Impl
	rule__FQCREF__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getFullStopKeyword_2_0_0()); }

	FullStop 

{ after(grammarAccess.getFQCREFAccess().getFullStopKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQCREF__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_2_0_1()); }
	RULE_ID
{ after(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__0__Impl
	rule__ContainedPropertyAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyAssignment_0()); }
(rule__ContainedPropertyAssociation__PropertyAssignment_0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__1__Impl
	rule__ContainedPropertyAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAlternatives_1()); }
(rule__ContainedPropertyAssociation__Alternatives_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__2__Impl
	rule__ContainedPropertyAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantAssignment_2()); }
(rule__ContainedPropertyAssociation__ConstantAssignment_2)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__3__Impl
	rule__ContainedPropertyAssociation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3()); }
(rule__ContainedPropertyAssociation__Group_3__0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__4__Impl
	rule__ContainedPropertyAssociation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4()); }
(rule__ContainedPropertyAssociation__Group_4__0)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__5__Impl
	rule__ContainedPropertyAssociation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_5()); }
(rule__ContainedPropertyAssociation__Group_5__0)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_6()); }

	Semicolon 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ContainedPropertyAssociation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3__0__Impl
	rule__ContainedPropertyAssociation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_0()); }
(rule__ContainedPropertyAssociation__OwnedValueAssignment_3_0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3_1()); }
(rule__ContainedPropertyAssociation__Group_3_1__0)*
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_1__0__Impl
	rule__ContainedPropertyAssociation__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_3_1_0()); }

	Comma 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_1_1()); }
(rule__ContainedPropertyAssociation__OwnedValueAssignment_3_1_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__0__Impl
	rule__ContainedPropertyAssociation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesKeyword_4_0()); }

	Applies 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__1__Impl
	rule__ContainedPropertyAssociation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getToKeyword_4_1()); }

	To 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getToKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__2__Impl
	rule__ContainedPropertyAssociation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_2()); }
(rule__ContainedPropertyAssociation__AppliesToAssignment_4_2)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4_3()); }
(rule__ContainedPropertyAssociation__Group_4_3__0)*
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContainedPropertyAssociation__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4_3__0__Impl
	rule__ContainedPropertyAssociation__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_4_3_0()); }

	Comma 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_3_1()); }
(rule__ContainedPropertyAssociation__AppliesToAssignment_4_3_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__0__Impl
	rule__ContainedPropertyAssociation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInKeyword_5_0()); }

	In 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getInKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__1__Impl
	rule__ContainedPropertyAssociation__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getBindingKeyword_5_1()); }

	Binding 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getBindingKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__2__Impl
	rule__ContainedPropertyAssociation__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getLeftParenthesisKeyword_5_2()); }

	LeftParenthesis 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getLeftParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__3__Impl
	rule__ContainedPropertyAssociation__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInBindingAssignment_5_3()); }
(rule__ContainedPropertyAssociation__InBindingAssignment_5_3)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getInBindingAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getRightParenthesisKeyword_5_4()); }

	RightParenthesis 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getRightParenthesisKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



















rule__OptionalModalPropertyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group__0__Impl
	rule__OptionalModalPropertyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValueAssignment_0()); }
(rule__OptionalModalPropertyValue__OwnedValueAssignment_0)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1()); }
(rule__OptionalModalPropertyValue__Group_1__0)?
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OptionalModalPropertyValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__0__Impl
	rule__OptionalModalPropertyValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInKeyword_1_0()); }

	In 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__1__Impl
	rule__OptionalModalPropertyValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getModesKeyword_1_1()); }

	Modes 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getModesKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__2__Impl
	rule__OptionalModalPropertyValue__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getLeftParenthesisKeyword_1_2()); }

	LeftParenthesis 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__3__Impl
	rule__OptionalModalPropertyValue__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_3()); }
(rule__OptionalModalPropertyValue__InModeAssignment_1_3)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__4__Impl
	rule__OptionalModalPropertyValue__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1_4()); }
(rule__OptionalModalPropertyValue__Group_1_4__0)*
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getRightParenthesisKeyword_1_5()); }

	RightParenthesis 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getRightParenthesisKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__OptionalModalPropertyValue__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1_4__0__Impl
	rule__OptionalModalPropertyValue__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getCommaKeyword_1_4_0()); }

	Comma 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getCommaKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_4_1()); }
(rule__OptionalModalPropertyValue__InModeAssignment_1_4_1)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
(rule__BooleanLiteral__Alternatives_1)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__0__Impl
	rule__ReferenceTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getReferenceKeyword_0()); }

	Reference 

{ after(grammarAccess.getReferenceTermAccess().getReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__1__Impl
	rule__ReferenceTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getReferenceTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__2__Impl
	rule__ReferenceTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getPathAssignment_2()); }
(rule__ReferenceTerm__PathAssignment_2)
{ after(grammarAccess.getReferenceTermAccess().getPathAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getReferenceTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RecordTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__0__Impl
	rule__RecordTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getLeftSquareBracketKeyword_0()); }

	LeftSquareBracket 

{ after(grammarAccess.getRecordTermAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__1__Impl
	rule__RecordTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
(rule__RecordTerm__OwnedFieldValueAssignment_1)
{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
)
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
(rule__RecordTerm__OwnedFieldValueAssignment_1)*
{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getRightSquareBracketKeyword_2()); }

	RightSquareBracket 

{ after(grammarAccess.getRecordTermAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ComputedTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__0__Impl
	rule__ComputedTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getComputeKeyword_0()); }

	Compute 

{ after(grammarAccess.getComputedTermAccess().getComputeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__1__Impl
	rule__ComputedTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getComputedTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__2__Impl
	rule__ComputedTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getFunctionAssignment_2()); }
(rule__ComputedTerm__FunctionAssignment_2)
{ after(grammarAccess.getComputedTermAccess().getFunctionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getComputedTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ComponentClassifierTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__0__Impl
	rule__ComponentClassifierTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierKeyword_0()); }

	Classifier 

{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__1__Impl
	rule__ComponentClassifierTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getComponentClassifierTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__2__Impl
	rule__ComponentClassifierTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierAssignment_2()); }
(rule__ComponentClassifierTerm__ClassifierAssignment_2)
{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getComponentClassifierTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__0__Impl
	rule__ListTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getListValueAction_0()); }
(

)
{ after(grammarAccess.getListTermAccess().getListValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__1__Impl
	rule__ListTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getListTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__2__Impl
	rule__ListTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getGroup_2()); }
(rule__ListTerm__Group_2__0)?
{ after(grammarAccess.getListTermAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getListTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListTerm__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2__0__Impl
	rule__ListTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_0()); }
(rule__ListTerm__OwnedListElementAssignment_2_0)
{ after(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getGroup_2_1()); }
(rule__ListTerm__Group_2_1__0)*
{ after(grammarAccess.getListTermAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListTerm__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2_1__0__Impl
	rule__ListTerm__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getCommaKeyword_2_1_0()); }

	Comma 

{ after(grammarAccess.getListTermAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_1_1()); }
(rule__ListTerm__OwnedListElementAssignment_2_1_1)
{ after(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldPropertyAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__0__Impl
	rule__FieldPropertyAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyAssignment_0()); }
(rule__FieldPropertyAssociation__PropertyAssignment_0)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__1__Impl
	rule__FieldPropertyAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getFieldPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__2__Impl
	rule__FieldPropertyAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValueAssignment_2()); }
(rule__FieldPropertyAssociation__OwnedValueAssignment_2)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getSemicolonKeyword_3()); }

	Semicolon 

{ after(grammarAccess.getFieldPropertyAssociationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContainmentPathElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group__0__Impl
	rule__ContainmentPathElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup_0()); }
(rule__ContainmentPathElement__Group_0__0)
{ after(grammarAccess.getContainmentPathElementAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup_1()); }
(rule__ContainmentPathElement__Group_1__0)?
{ after(grammarAccess.getContainmentPathElementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainmentPathElement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_0__0__Impl
	rule__ContainmentPathElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0_0()); }
(rule__ContainmentPathElement__NamedElementAssignment_0_0)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_0_1()); }
(rule__ContainmentPathElement__ArrayRangeAssignment_0_1)?
{ after(grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainmentPathElement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_1__0__Impl
	rule__ContainmentPathElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getFullStopKeyword_1_0()); }

	FullStop 

{ after(grammarAccess.getContainmentPathElementAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getPathAssignment_1_1()); }
(rule__ContainmentPathElement__PathAssignment_1_1)
{ after(grammarAccess.getContainmentPathElementAccess().getPathAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__ArrayRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__0__Impl
	rule__ArrayRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getArrayRangeAction_0()); }
(

)
{ after(grammarAccess.getArrayRangeAccess().getArrayRangeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__1__Impl
	rule__ArrayRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1()); }

	LeftSquareBracket 

{ after(grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__2__Impl
	rule__ArrayRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_2()); }
(rule__ArrayRange__LowerBoundAssignment_2)
{ after(grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__3__Impl
	rule__ArrayRange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getGroup_3()); }
(rule__ArrayRange__Group_3__0)?
{ after(grammarAccess.getArrayRangeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4()); }

	RightSquareBracket 

{ after(grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArrayRange__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group_3__0__Impl
	rule__ArrayRange__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_3_0()); }

	FullStopFullStop 

{ after(grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_3_1()); }
(rule__ArrayRange__UpperBoundAssignment_3_1)
{ after(grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedConstant__Group__0__Impl
	rule__SignedConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOpAssignment_0()); }
(rule__SignedConstant__OpAssignment_0)
{ after(grammarAccess.getSignedConstantAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionAssignment_1()); }
(rule__SignedConstant__OwnedPropertyExpressionAssignment_1)
{ after(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedInt__Group__0__Impl
	rule__SignedInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getAlternatives_0()); }
(rule__SignedInt__Alternatives_0)?
{ after(grammarAccess.getSignedIntAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getINTEGER_LITTerminalRuleCall_1()); }
	RULE_INTEGER_LIT
{ after(grammarAccess.getSignedIntAccess().getINTEGER_LITTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedReal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedReal__Group__0__Impl
	rule__SignedReal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getAlternatives_0()); }
(rule__SignedReal__Alternatives_0)?
{ after(grammarAccess.getSignedRealAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedReal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedReal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getREAL_LITTerminalRuleCall_1()); }
	RULE_REAL_LIT
{ after(grammarAccess.getSignedRealAccess().getREAL_LITTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumericRangeTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__0__Impl
	rule__NumericRangeTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumAssignment_0()); }
(rule__NumericRangeTerm__MinimumAssignment_0)
{ after(grammarAccess.getNumericRangeTermAccess().getMinimumAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__1__Impl
	rule__NumericRangeTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getFullStopFullStopKeyword_1()); }

	FullStopFullStop 

{ after(grammarAccess.getNumericRangeTermAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__2__Impl
	rule__NumericRangeTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumAssignment_2()); }
(rule__NumericRangeTerm__MaximumAssignment_2)
{ after(grammarAccess.getNumericRangeTermAccess().getMaximumAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getGroup_3()); }
(rule__NumericRangeTerm__Group_3__0)?
{ after(grammarAccess.getNumericRangeTermAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NumericRangeTerm__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group_3__0__Impl
	rule__NumericRangeTerm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaKeyword_3_0()); }

	Delta 

{ after(grammarAccess.getNumericRangeTermAccess().getDeltaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaAssignment_3_1()); }
(rule__NumericRangeTerm__DeltaAssignment_3_1)
{ after(grammarAccess.getNumericRangeTermAccess().getDeltaAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__QPREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group__0__Impl
	rule__QPREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QPREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getGroup_1()); }
(rule__QPREF__Group_1__0)?
{ after(grammarAccess.getQPREFAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QPREF__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group_1__0__Impl
	rule__QPREF__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); }

	ColonColon 

{ after(grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QPREF__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__0__Impl
	rule__QCREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getGroup_0()); }
(rule__QCREF__Group_0__0)*
{ after(grammarAccess.getQCREFAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__1__Impl
	rule__QCREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getGroup_2()); }
(rule__QCREF__Group_2__0)?
{ after(grammarAccess.getQCREFAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QCREF__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_0__0__Impl
	rule__QCREF__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }

	ColonColon 

{ after(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCREF__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_2__0__Impl
	rule__QCREF__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }

	FullStop 

{ after(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__MCSGrammarRoot__LibAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getLibMCSAnnexLibraryParserRuleCall_0_1_0()); }
	ruleMCSAnnexLibrary{ after(grammarAccess.getMCSGrammarRootAccess().getLibMCSAnnexLibraryParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSGrammarRoot__FileAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getFileMCSFileLibraryParserRuleCall_1_1_0()); }
	ruleMCSFileLibrary{ after(grammarAccess.getMCSGrammarRootAccess().getFileMCSFileLibraryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSGrammarRoot__SubclauseAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getSubclauseMCSAnnexSubclauseParserRuleCall_2_1_0()); }
	ruleMCSAnnexSubclause{ after(grammarAccess.getMCSGrammarRootAccess().getSubclauseMCSAnnexSubclauseParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__TypesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTypesType_declarationParserRuleCall_1_1_0()); }
	ruleType_declaration{ after(grammarAccess.getMCSAnnexLibraryAccess().getTypesType_declarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__ConstantsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getConstantsConstant_declarationParserRuleCall_2_1_0()); }
	ruleConstant_declaration{ after(grammarAccess.getMCSAnnexLibraryAccess().getConstantsConstant_declarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__FunctionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsFunction_declarationParserRuleCall_3_1_0()); }
	ruleFunction_declaration{ after(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsFunction_declarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__TheoremsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsTheorem_declarationParserRuleCall_4_1_0()); }
	ruleTheorem_declaration{ after(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsTheorem_declarationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__ImportedUnitAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getImportedUnitModelUnitCrossReference_1_1_0()); }
(
{ before(grammarAccess.getMCSFileLibraryAccess().getImportedUnitModelUnitIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMCSFileLibraryAccess().getImportedUnitModelUnitIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getMCSFileLibraryAccess().getImportedUnitModelUnitCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__ImportedUnitAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getImportedUnitModelUnitCrossReference_1_2_1_0()); }
(
{ before(grammarAccess.getMCSFileLibraryAccess().getImportedUnitModelUnitIDTerminalRuleCall_1_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMCSFileLibraryAccess().getImportedUnitModelUnitIDTerminalRuleCall_1_2_1_0_1()); }
)
{ after(grammarAccess.getMCSFileLibraryAccess().getImportedUnitModelUnitCrossReference_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__FilesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getFilesFile_nameParserRuleCall_2_1_0()); }
	ruleFile_name{ after(grammarAccess.getMCSFileLibraryAccess().getFilesFile_nameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__FilesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getFilesFile_nameParserRuleCall_2_2_1_0()); }
	ruleFile_name{ after(grammarAccess.getMCSFileLibraryAccess().getFilesFile_nameParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__TypesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getTypesType_declarationParserRuleCall_3_1_0()); }
	ruleType_declaration{ after(grammarAccess.getMCSFileLibraryAccess().getTypesType_declarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__ConstantsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getConstantsConstant_declarationParserRuleCall_4_1_0()); }
	ruleConstant_declaration{ after(grammarAccess.getMCSFileLibraryAccess().getConstantsConstant_declarationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__FunctionsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getFunctionsFunction_declarationParserRuleCall_5_1_0()); }
	ruleFunction_declaration{ after(grammarAccess.getMCSFileLibraryAccess().getFunctionsFunction_declarationParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__TheoremsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getTheoremsTheorem_declarationParserRuleCall_6_1_0()); }
	ruleTheorem_declaration{ after(grammarAccess.getMCSFileLibraryAccess().getTheoremsTheorem_declarationParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSFileLibrary__CallsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSFileLibraryAccess().getCallsTheorem_callParserRuleCall_7_1_0()); }
	ruleTheorem_call{ after(grammarAccess.getMCSFileLibraryAccess().getCallsTheorem_callParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__CallsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getCallsTheorem_callParserRuleCall_1_0()); }
	ruleTheorem_call{ after(grammarAccess.getMCSAnnexSubclauseAccess().getCallsTheorem_callParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getType_declarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getTypeType_expressionParserRuleCall_3_0()); }
	ruleType_expression{ after(grammarAccess.getType_declarationAccess().getTypeType_expressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__ConstAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getConstMcsTypedNameParserRuleCall_1_0()); }
	ruleMcsTypedName{ after(grammarAccess.getConstant_declarationAccess().getConstMcsTypedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Left_exprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getLeft_exprExprParserRuleCall_3_0()); }
	ruleExpr{ after(grammarAccess.getConstant_declarationAccess().getLeft_exprExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFunction_declarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__ArgsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getArgsParameterParserRuleCall_2_0_0()); }
	ruleParameter{ after(grammarAccess.getFunction_declarationAccess().getArgsParameterParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__ArgsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getArgsParameterParserRuleCall_2_1_1_0()); }
	ruleParameter{ after(grammarAccess.getFunction_declarationAccess().getArgsParameterParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getBodyFunctionBodyParserRuleCall_4_0()); }
	ruleFunctionBody{ after(grammarAccess.getFunction_declarationAccess().getBodyFunctionBodyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTheorem_declarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__T_rootAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getT_rootTheorem_rootParserRuleCall_1_0()); }
	ruleTheorem_root{ after(grammarAccess.getTheorem_declarationAccess().getT_rootTheorem_rootParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__ArgsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getArgsParameterParserRuleCall_3_0_0()); }
	ruleParameter{ after(grammarAccess.getTheorem_declarationAccess().getArgsParameterParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__ArgsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getArgsParameterParserRuleCall_3_1_1_0()); }
	ruleParameter{ after(grammarAccess.getTheorem_declarationAccess().getArgsParameterParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getBodyTheoremBodyParserRuleCall_5_0()); }
	ruleTheoremBody{ after(grammarAccess.getTheorem_declarationAccess().getBodyTheoremBodyParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_root__NilrootAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_rootAccess().getNilrootNilKeyword_3_0_0()); }
(
{ before(grammarAccess.getTheorem_rootAccess().getNilrootNilKeyword_3_0_0()); }

	Nil 

{ after(grammarAccess.getTheorem_rootAccess().getNilrootNilKeyword_3_0_0()); }
)

{ after(grammarAccess.getTheorem_rootAccess().getNilrootNilKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_root__ClassifierAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_rootAccess().getClassifierClassifiersParserRuleCall_3_1_0()); }
	ruleClassifiers{ after(grammarAccess.getTheorem_rootAccess().getClassifierClassifiersParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getTypeType_expressionParserRuleCall_2_0()); }
	ruleType_expression{ after(grammarAccess.getFunctionBodyAccess().getTypeType_expressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__ExprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getExprExprParserRuleCall_4_0()); }
	ruleExpr{ after(grammarAccess.getFunctionBodyAccess().getExprExprParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TheoremBody__StringAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheoremBodyAccess().getStringParameterizedStringParserRuleCall_2_0()); }
	ruleParameterizedString{ after(grammarAccess.getTheoremBodyAccess().getStringParameterizedStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TheoremBody__ExprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheoremBodyAccess().getExprExprParserRuleCall_3_0()); }
	ruleExpr{ after(grammarAccess.getTheoremBodyAccess().getExprExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedString__ClaimAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedStringAccess().getClaimTextParmParserRuleCall_1_0()); }
	ruleTextParm{ after(grammarAccess.getParameterizedStringAccess().getClaimTextParmParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__StrAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getStrStringTermParserRuleCall_0_1_0()); }
	ruleStringTerm{ after(grammarAccess.getTextParmAccess().getStrStringTermParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__TextargAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getTextargMCSNameExprParserRuleCall_1_1_0()); }
	ruleMCSNameExpr{ after(grammarAccess.getTextParmAccess().getTextargMCSNameExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextParm__UnitAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextParmAccess().getUnitUnitLiteralCrossReference_1_2_1_0()); }
(
{ before(grammarAccess.getTextParmAccess().getUnitUnitLiteralIDTerminalRuleCall_1_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTextParmAccess().getUnitUnitLiteralIDTerminalRuleCall_1_2_1_0_1()); }
)
{ after(grammarAccess.getTextParmAccess().getUnitUnitLiteralCrossReference_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__McsTypedName__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcsTypedNameAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMcsTypedNameAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__McsTypedName__TypeAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcsTypedNameAccess().getTypeType_expressionParserRuleCall_1_0_1_0()); }
	ruleType_expression{ after(grammarAccess.getMcsTypedNameAccess().getTypeType_expressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__McsTypedName__ExprAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcsTypedNameAccess().getExprExprParserRuleCall_1_1_1_0()); }
	ruleExpr{ after(grammarAccess.getMcsTypedNameAccess().getExprExprParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Theorem_call__TnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getTnameTheoremCrossReference_1_0()); }
(
{ before(grammarAccess.getTheorem_callAccess().getTnameTheoremIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTheorem_callAccess().getTnameTheoremIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTheorem_callAccess().getTnameTheoremCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__CrootAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getCrootClassifier_literalParserRuleCall_2_1_1_0()); }
	ruleClassifier_literal{ after(grammarAccess.getTheorem_callAccess().getCrootClassifier_literalParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__ActargAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getActargExprParserRuleCall_4_0_0()); }
	ruleExpr{ after(grammarAccess.getTheorem_callAccess().getActargExprParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_call__ActargAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_callAccess().getActargExprParserRuleCall_4_1_1_0()); }
	ruleExpr{ after(grammarAccess.getTheorem_callAccess().getActargExprParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier_literal__ClasslitAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifier_literalAccess().getClasslitComponentClassifierCrossReference_0_0()); }
(
{ before(grammarAccess.getClassifier_literalAccess().getClasslitComponentClassifierFQCREFParserRuleCall_0_0_1()); }
	ruleFQCREF{ after(grammarAccess.getClassifier_literalAccess().getClasslitComponentClassifierFQCREFParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getClassifier_literalAccess().getClasslitComponentClassifierCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier_literal__NamerefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifier_literalAccess().getNamerefMcs_name_refParserRuleCall_1_0()); }
	ruleMcs_name_ref{ after(grammarAccess.getClassifier_literalAccess().getNamerefMcs_name_refParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getValueUnsignedRealParserRuleCall_0_0()); }
	ruleUnsignedReal{ after(grammarAccess.getRealTermAccess().getValueUnsignedRealParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
(
{ before(grammarAccess.getRealTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRealTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getValueUnsignedIntParserRuleCall_0_0()); }
	ruleUnsignedInt{ after(grammarAccess.getIntegerTermAccess().getValueUnsignedIntParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
(
{ before(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__LowerBoundAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getLowerBoundAlternatives_0_0()); }
(rule__Range__LowerBoundAlternatives_0_0)
{ after(grammarAccess.getRangeAccess().getLowerBoundAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Range__UpperBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeAccess().getUpperBoundAlternatives_2_0()); }
(rule__Range__UpperBoundAlternatives_2_0)
{ after(grammarAccess.getRangeAccess().getUpperBoundAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefTerm__RootAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTermAccess().getRootRootKeyword_2_0_0()); }
(
{ before(grammarAccess.getRefTermAccess().getRootRootKeyword_2_0_0()); }

	Root 

{ after(grammarAccess.getRefTermAccess().getRootRootKeyword_2_0_0()); }
)

{ after(grammarAccess.getRefTermAccess().getRootRootKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RefTerm__SubAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefTermAccess().getSubNestedDotIDParserRuleCall_3_0()); }
	ruleNestedDotID{ after(grammarAccess.getRefTermAccess().getSubNestedDotIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__BaseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getBaseNamedElementCrossReference_0_0()); }
(
{ before(grammarAccess.getNestedDotIDAccess().getBaseNamedElementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getNestedDotIDAccess().getBaseNamedElementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getNestedDotIDAccess().getBaseNamedElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedDotID__SubAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedDotIDAccess().getSubNestedDotIDParserRuleCall_1_1_0()); }
	ruleNestedDotID{ after(grammarAccess.getNestedDotIDAccess().getSubNestedDotIDParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mcs_name_ref__RefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcs_name_refAccess().getRefMcsTypedNameCrossReference_0_0()); }
(
{ before(grammarAccess.getMcs_name_refAccess().getRefMcsTypedNameIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMcs_name_refAccess().getRefMcsTypedNameIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMcs_name_refAccess().getRefMcsTypedNameCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mcs_name_ref__ChainAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMcs_name_refAccess().getChainMethodChainParserRuleCall_1_0_0()); }
	ruleMethodChain{ after(grammarAccess.getMcs_name_refAccess().getChainMethodChainParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChain__BuiltinAssignment_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainAccess().getBuiltinBuiltInFnCallParserRuleCall_1_0_1_0_0()); }
	ruleBuiltInFnCall{ after(grammarAccess.getMethodChainAccess().getBuiltinBuiltInFnCallParserRuleCall_1_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodChain__MethodAssignment_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodChainAccess().getMethodFnCallParserRuleCall_1_0_1_1_0()); }
	ruleFnCall{ after(grammarAccess.getMethodChainAccess().getMethodFnCallParserRuleCall_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__FnAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getFnBuiltInFnParserRuleCall_0_0()); }
	ruleBuiltInFn{ after(grammarAccess.getBuiltInFnCallAccess().getFnBuiltInFnParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__ArgsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getArgsExprParserRuleCall_2_0_0()); }
	ruleExpr{ after(grammarAccess.getBuiltInFnCallAccess().getArgsExprParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFnCall__ArgsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFnCallAccess().getArgsExprParserRuleCall_2_1_1_0()); }
	ruleExpr{ after(grammarAccess.getBuiltInFnCallAccess().getArgsExprParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__FnAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getFnFunctionCrossReference_0_0()); }
(
{ before(grammarAccess.getFnCallAccess().getFnFunctionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFnCallAccess().getFnFunctionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFnCallAccess().getFnFunctionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__ArgsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getArgsExprParserRuleCall_2_0_0()); }
	ruleExpr{ after(grammarAccess.getFnCallAccess().getArgsExprParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnCall__ArgsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnCallAccess().getArgsExprParserRuleCall_2_1_1_0()); }
	ruleExpr{ after(grammarAccess.getFnCallAccess().getArgsExprParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FailExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailExprAccess().getOpFailKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getFailExprAccess().getOpFailKeyword_1_0_0_1_0()); }

	Fail 

{ after(grammarAccess.getFailExprAccess().getOpFailKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getFailExprAccess().getOpFailKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FailExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailExprAccess().getRightParameterizedStringParserRuleCall_1_1_0()); }
	ruleParameterizedString{ after(grammarAccess.getFailExprAccess().getRightParameterizedStringParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getRightImpliesExprParserRuleCall_1_1_0()); }
	ruleImpliesExpr{ after(grammarAccess.getImpliesExprAccess().getRightImpliesExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }

	Or 

{ after(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); }
	ruleAndExpr{ after(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__OpAssignment_1_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0_0()); }
(
{ before(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0_0()); }

	And 

{ after(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0_0()); }
)

{ after(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__OpAssignment_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAndthenKeyword_1_0_0_1_1_0()); }
(
{ before(grammarAccess.getAndExprAccess().getOpAndthenKeyword_1_0_0_1_1_0()); }

	Andthen 

{ after(grammarAccess.getAndExprAccess().getOpAndthenKeyword_1_0_0_1_1_0()); }
)

{ after(grammarAccess.getAndExprAccess().getOpAndthenKeyword_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightInstanceOfExprParserRuleCall_1_1_0()); }
	ruleInstanceOfExpr{ after(grammarAccess.getAndExprAccess().getRightInstanceOfExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceOfExpr__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceOfExprAccess().getTypeType_expressionParserRuleCall_1_1_0()); }
	ruleType_expression{ after(grammarAccess.getInstanceOfExprAccess().getTypeType_expressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getOpRelationalOpParserRuleCall_1_0_0_1_0()); }
	ruleRelationalOp{ after(grammarAccess.getRelationalExprAccess().getOpRelationalOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getRightPlusExprParserRuleCall_1_1_0()); }
	rulePlusExpr{ after(grammarAccess.getRelationalExprAccess().getRightPlusExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getOpAlternatives_1_0_0_1_0()); }
(rule__PlusExpr__OpAlternatives_1_0_0_1_0)
{ after(grammarAccess.getPlusExprAccess().getOpAlternatives_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusExprAccess().getRightTimesExprParserRuleCall_1_1_0()); }
	ruleTimesExpr{ after(grammarAccess.getPlusExprAccess().getRightTimesExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getOpAlternatives_1_0_0_1_0()); }
(rule__TimesExpr__OpAlternatives_1_0_0_1_0)
{ after(grammarAccess.getTimesExprAccess().getOpAlternatives_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimesExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimesExprAccess().getRightPrefixExprParserRuleCall_1_1_0()); }
	rulePrefixExpr{ after(grammarAccess.getTimesExprAccess().getRightPrefixExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__OpAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getOpAlternatives_0_1_0()); }
(rule__PrefixExpr__OpAlternatives_0_1_0)
{ after(grammarAccess.getPrefixExprAccess().getOpAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpr__ExprAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExprAccess().getExprPrefixExprParserRuleCall_0_2_0()); }
	rulePrefixExpr{ after(grammarAccess.getPrefixExprAccess().getExprPrefixExprParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getExprExpression_termParserRuleCall_1_0()); }
	ruleExpression_term{ after(grammarAccess.getPostCastExprAccess().getExprExpression_termParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__ChainAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getChainMethodChainParserRuleCall_2_0_0()); }
	ruleMethodChain{ after(grammarAccess.getPostCastExprAccess().getChainMethodChainParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostCastExpr__NewtypeAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostCastExprAccess().getNewtypeType_expressionParserRuleCall_3_0_1_0()); }
	ruleType_expression{ after(grammarAccess.getPostCastExprAccess().getNewtypeType_expressionParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSNameExpr__RootAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSNameExprAccess().getRootRootKeyword_1_0_0()); }
(
{ before(grammarAccess.getMCSNameExprAccess().getRootRootKeyword_1_0_0()); }

	Root 

{ after(grammarAccess.getMCSNameExprAccess().getRootRootKeyword_1_0_0()); }
)

{ after(grammarAccess.getMCSNameExprAccess().getRootRootKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSNameExpr__IrootAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSNameExprAccess().getIrootIrootKeyword_1_1_0()); }
(
{ before(grammarAccess.getMCSNameExprAccess().getIrootIrootKeyword_1_1_0()); }

	Iroot 

{ after(grammarAccess.getMCSNameExprAccess().getIrootIrootKeyword_1_1_0()); }
)

{ after(grammarAccess.getMCSNameExprAccess().getIrootIrootKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSNameExpr__NilAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSNameExprAccess().getNilNilKeyword_1_2_0()); }
(
{ before(grammarAccess.getMCSNameExprAccess().getNilNilKeyword_1_2_0()); }

	Nil 

{ after(grammarAccess.getMCSNameExprAccess().getNilNilKeyword_1_2_0()); }
)

{ after(grammarAccess.getMCSNameExprAccess().getNilNilKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSNameExpr__EmptyAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSNameExprAccess().getEmptyEmptyKeyword_1_3_0()); }
(
{ before(grammarAccess.getMCSNameExprAccess().getEmptyEmptyKeyword_1_3_0()); }

	Empty 

{ after(grammarAccess.getMCSNameExprAccess().getEmptyEmptyKeyword_1_3_0()); }
)

{ after(grammarAccess.getMCSNameExprAccess().getEmptyEmptyKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSNameExpr__AllmodesAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSNameExprAccess().getAllmodesAllmodesKeyword_1_4_0()); }
(
{ before(grammarAccess.getMCSNameExprAccess().getAllmodesAllmodesKeyword_1_4_0()); }

	Allmodes 

{ after(grammarAccess.getMCSNameExprAccess().getAllmodesAllmodesKeyword_1_4_0()); }
)

{ after(grammarAccess.getMCSNameExprAccess().getAllmodesAllmodesKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSNameExpr__TypednamerefAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSNameExprAccess().getTypednamerefMcs_name_refParserRuleCall_1_5_0()); }
	ruleMcs_name_ref{ after(grammarAccess.getMCSNameExprAccess().getTypednamerefMcs_name_refParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__PackageAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getPackageAadlPackageCrossReference_1_3_0()); }
(
{ before(grammarAccess.getExpression_termAccess().getPackageAadlPackageIDTerminalRuleCall_1_3_0_1()); }
	RULE_ID{ after(grammarAccess.getExpression_termAccess().getPackageAadlPackageIDTerminalRuleCall_1_3_0_1()); }
)
{ after(grammarAccess.getExpression_termAccess().getPackageAadlPackageCrossReference_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ClassifierAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getClassifierComponentClassifierTermParserRuleCall_2_1_0()); }
	ruleComponentClassifierTerm{ after(grammarAccess.getExpression_termAccess().getClassifierComponentClassifierTermParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ReferenceAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getReferenceRefTermParserRuleCall_3_1_0()); }
	ruleRefTerm{ after(grammarAccess.getExpression_termAccess().getReferenceRefTermParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__SubAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getSubNestedDotIDParserRuleCall_4_2_1_0()); }
	ruleNestedDotID{ after(grammarAccess.getExpression_termAccess().getSubNestedDotIDParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ValAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getValIntegerTermParserRuleCall_5_1_0()); }
	ruleIntegerTerm{ after(grammarAccess.getExpression_termAccess().getValIntegerTermParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ValAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getValRealTermParserRuleCall_6_1_0()); }
	ruleRealTerm{ after(grammarAccess.getExpression_termAccess().getValRealTermParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ValAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getValBooleanLiteralParserRuleCall_7_1_0()); }
	ruleBooleanLiteral{ after(grammarAccess.getExpression_termAccess().getValBooleanLiteralParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ValAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getValStringTermParserRuleCall_8_1_0()); }
	ruleStringTerm{ after(grammarAccess.getExpression_termAccess().getValStringTermParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ValAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getValRangeParserRuleCall_9_1_0()); }
	ruleRange{ after(grammarAccess.getExpression_termAccess().getValRangeParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__CondAssignment_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getCondExprParserRuleCall_10_2_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getCondExprParserRuleCall_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ThenAssignment_10_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getThenExprParserRuleCall_10_4_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getThenExprParserRuleCall_10_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ElseAssignment_10_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getElseExprParserRuleCall_10_6_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getElseExprParserRuleCall_10_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__QuantAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getQuantAlternatives_11_1_0()); }
(rule__Expression_term__QuantAlternatives_11_1_0)
{ after(grammarAccess.getExpression_termAccess().getQuantAlternatives_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ArgsAssignment_11_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getArgsParameterParserRuleCall_11_2_1_0()); }
	ruleParameter{ after(grammarAccess.getExpression_termAccess().getArgsParameterParserRuleCall_11_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ExprAssignment_11_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExprExprParserRuleCall_11_4_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getExprExprParserRuleCall_11_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__BuiltinAssignment_12_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getBuiltinBuiltInFnCallParserRuleCall_12_1_0()); }
	ruleBuiltInFnCall{ after(grammarAccess.getExpression_termAccess().getBuiltinBuiltInFnCallParserRuleCall_12_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__FnAssignment_13_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFnFnCallParserRuleCall_13_1_0()); }
	ruleFnCall{ after(grammarAccess.getExpression_termAccess().getFnFnCallParserRuleCall_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__FnAssignment_14_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFnTheorem_callParserRuleCall_14_1_0()); }
	ruleTheorem_call{ after(grammarAccess.getExpression_termAccess().getFnTheorem_callParserRuleCall_14_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ListAssignment_15_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getListListKeyword_15_1_0()); }
(
{ before(grammarAccess.getExpression_termAccess().getListListKeyword_15_1_0()); }

	List 

{ after(grammarAccess.getExpression_termAccess().getListListKeyword_15_1_0()); }
)

{ after(grammarAccess.getExpression_termAccess().getListListKeyword_15_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ExpAssignment_15_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExpExprParserRuleCall_15_3_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getExpExprParserRuleCall_15_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ArgsAssignment_15_4_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getArgsParameterParserRuleCall_15_4_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getExpression_termAccess().getArgsParameterParserRuleCall_15_4_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__FilterAssignment_15_4_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getFilterExprParserRuleCall_15_4_0_3_1_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getFilterExprParserRuleCall_15_4_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__ExprsAssignment_15_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExprsExprParserRuleCall_15_4_1_1_1_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getExprsExprParserRuleCall_15_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Expr1Assignment_16_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExpr1ExprParserRuleCall_16_2_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getExpr1ExprParserRuleCall_16_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Expr2Assignment_16_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExpr2ExprParserRuleCall_16_4_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getExpr2ExprParserRuleCall_16_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__LocalAssignment_18_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getLocalMcsTypedNameParserRuleCall_18_2_0()); }
	ruleMcsTypedName{ after(grammarAccess.getExpression_termAccess().getLocalMcsTypedNameParserRuleCall_18_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Expr1Assignment_18_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExpr1ExprParserRuleCall_18_4_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getExpr1ExprParserRuleCall_18_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_term__Expr2Assignment_18_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_termAccess().getExpr2ExprParserRuleCall_18_6_0()); }
	ruleExpr{ after(grammarAccess.getExpression_termAccess().getExpr2ExprParserRuleCall_18_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_expression__BasicAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_expressionAccess().getBasicBasic_typeParserRuleCall_0_0()); }
	ruleBasic_type{ after(grammarAccess.getType_expressionAccess().getBasicBasic_typeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_expression__CompositeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_expressionAccess().getCompositeComposite_typeParserRuleCall_1_0()); }
	ruleComposite_type{ after(grammarAccess.getType_expressionAccess().getCompositeComposite_typeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_expression__ElementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_expressionAccess().getElementElement_typeParserRuleCall_2_0()); }
	ruleElement_type{ after(grammarAccess.getType_expressionAccess().getElementElement_typeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__PtypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getPtypeProperty_typeKeyword_1_0_0()); }
(
{ before(grammarAccess.getBasic_typeAccess().getPtypeProperty_typeKeyword_1_0_0()); }

	Property_type 

{ after(grammarAccess.getBasic_typeAccess().getPtypeProperty_typeKeyword_1_0_0()); }
)

{ after(grammarAccess.getBasic_typeAccess().getPtypeProperty_typeKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__PrefAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getPrefProperty_refKeyword_1_1_0()); }
(
{ before(grammarAccess.getBasic_typeAccess().getPrefProperty_refKeyword_1_1_0()); }

	Property_ref 

{ after(grammarAccess.getBasic_typeAccess().getPrefProperty_refKeyword_1_1_0()); }
)

{ after(grammarAccess.getBasic_typeAccess().getPrefProperty_refKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__BoolAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getBoolUnnamedBooleanTypeParserRuleCall_1_2_0()); }
	ruleUnnamedBooleanType{ after(grammarAccess.getBasic_typeAccess().getBoolUnnamedBooleanTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__StringAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getStringUnnamedStringTypeParserRuleCall_1_3_0()); }
	ruleUnnamedStringType{ after(grammarAccess.getBasic_typeAccess().getStringUnnamedStringTypeParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__EnumerAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getEnumerUnnamedEnumerationTypeParserRuleCall_1_4_0()); }
	ruleUnnamedEnumerationType{ after(grammarAccess.getBasic_typeAccess().getEnumerUnnamedEnumerationTypeParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__UnitsAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getUnitsUnnamedUnitsTypeParserRuleCall_1_5_0()); }
	ruleUnnamedUnitsType{ after(grammarAccess.getBasic_typeAccess().getUnitsUnnamedUnitsTypeParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__IntegerAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getIntegerUnnamedIntegerTypeParserRuleCall_1_6_0()); }
	ruleUnnamedIntegerType{ after(grammarAccess.getBasic_typeAccess().getIntegerUnnamedIntegerTypeParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__RealAssignment_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getRealUnnamedRealTypeParserRuleCall_1_7_0()); }
	ruleUnnamedRealType{ after(grammarAccess.getBasic_typeAccess().getRealUnnamedRealTypeParserRuleCall_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__RangeAssignment_1_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getRangeUnnamedRangeTypeParserRuleCall_1_8_0()); }
	ruleUnnamedRangeType{ after(grammarAccess.getBasic_typeAccess().getRangeUnnamedRangeTypeParserRuleCall_1_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__TypenameAssignment_1_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getTypenameType_declarationCrossReference_1_9_0()); }
(
{ before(grammarAccess.getBasic_typeAccess().getTypenameType_declarationIDTerminalRuleCall_1_9_0_1()); }
	RULE_ID{ after(grammarAccess.getBasic_typeAccess().getTypenameType_declarationIDTerminalRuleCall_1_9_0_1()); }
)
{ after(grammarAccess.getBasic_typeAccess().getTypenameType_declarationCrossReference_1_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping_type__KeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapping_typeAccess().getKeyType_expressionParserRuleCall_1_0()); }
	ruleType_expression{ after(grammarAccess.getMapping_typeAccess().getKeyType_expressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping_type__ValAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapping_typeAccess().getValType_expressionParserRuleCall_3_0()); }
	ruleType_expression{ after(grammarAccess.getMapping_typeAccess().getValType_expressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Root_typeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getRoot_typeType_expressionParserRuleCall_0_1_0()); }
	ruleType_expression{ after(grammarAccess.getSet_typeAccess().getRoot_typeType_expressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Root_typeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getRoot_typeType_expressionParserRuleCall_1_2_0()); }
	ruleType_expression{ after(grammarAccess.getSet_typeAccess().getRoot_typeType_expressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Root_typeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getRoot_typeType_expressionParserRuleCall_0_1_0()); }
	ruleType_expression{ after(grammarAccess.getList_typeAccess().getRoot_typeType_expressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Root_typeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getRoot_typeType_expressionParserRuleCall_1_2_0()); }
	ruleType_expression{ after(grammarAccess.getList_typeAccess().getRoot_typeType_expressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__FieldAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getFieldId_type_pairParserRuleCall_2_0()); }
	ruleId_type_pair{ after(grammarAccess.getRecord_typeAccess().getFieldId_type_pairParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__TypesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypesType_expressionParserRuleCall_2_0()); }
	ruleType_expression{ after(grammarAccess.getUnion_typeAccess().getTypesType_expressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__TypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypeType_expressionParserRuleCall_3_1_0()); }
	ruleType_expression{ after(grammarAccess.getUnion_typeAccess().getTypeType_expressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Id_type_pair__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_type_pairAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getId_type_pairAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Id_type_pair__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_type_pairAccess().getTypeType_expressionParserRuleCall_2_0()); }
	ruleType_expression{ after(grammarAccess.getId_type_pairAccess().getTypeType_expressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getNameSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getEnumerationLiteralAccess().getNameSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_type__TelemAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_typeAccess().getTelemT_ElementKeyword_0_0()); }
(
{ before(grammarAccess.getElement_typeAccess().getTelemT_ElementKeyword_0_0()); }

	T_Element 

{ after(grammarAccess.getElement_typeAccess().getTelemT_ElementKeyword_0_0()); }
)

{ after(grammarAccess.getElement_typeAccess().getTelemT_ElementKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_type__TpackAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_typeAccess().getTpackT_PackageKeyword_1_0()); }
(
{ before(grammarAccess.getElement_typeAccess().getTpackT_PackageKeyword_1_0()); }

	T_Package 

{ after(grammarAccess.getElement_typeAccess().getTpackT_PackageKeyword_1_0()); }
)

{ after(grammarAccess.getElement_typeAccess().getTpackT_PackageKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_type__T_classAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_typeAccess().getT_classClassifiersParserRuleCall_2_0()); }
	ruleClassifiers{ after(grammarAccess.getElement_typeAccess().getT_classClassifiersParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_type__T_instAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_typeAccess().getT_instInstancesParserRuleCall_3_0()); }
	ruleInstances{ after(grammarAccess.getElement_typeAccess().getT_instInstancesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Classifiers__T_classAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifiersAccess().getT_classT_ClassifierKeyword_0_0()); }
(
{ before(grammarAccess.getClassifiersAccess().getT_classT_ClassifierKeyword_0_0()); }

	T_Classifier 

{ after(grammarAccess.getClassifiersAccess().getT_classT_ClassifierKeyword_0_0()); }
)

{ after(grammarAccess.getClassifiersAccess().getT_classT_ClassifierKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Classifiers__T_class_subtypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifiersAccess().getT_class_subtypeT_classifier_subtypesParserRuleCall_1_0()); }
	ruleT_classifier_subtypes{ after(grammarAccess.getClassifiersAccess().getT_class_subtypeT_classifier_subtypesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifier_subtypes__T_ctypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeC_TypeKeyword_0_0()); }
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeC_TypeKeyword_0_0()); }

	C_type 

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeC_TypeKeyword_0_0()); }
)

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeC_TypeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifier_subtypes__T_cimplAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_cimplC_ImplKeyword_1_0()); }
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_cimplC_ImplKeyword_1_0()); }

	C_Impl 

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_cimplC_ImplKeyword_1_0()); }
)

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_cimplC_ImplKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifier_subtypes__T_fgclassAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassC_Feature_GroupKeyword_2_0()); }
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassC_Feature_GroupKeyword_2_0()); }

	C_Feature_Group 

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassC_Feature_GroupKeyword_2_0()); }
)

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassC_Feature_GroupKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifier_subtypes__T_annexclassAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassC_AnnexKeyword_3_0()); }
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassC_AnnexKeyword_3_0()); }

	C_Annex 

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassC_AnnexKeyword_3_0()); }
)

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassC_AnnexKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instances__InstAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstancesAccess().getInstT_InstanceKeyword_0_0()); }
(
{ before(grammarAccess.getInstancesAccess().getInstT_InstanceKeyword_0_0()); }

	T_Instance 

{ after(grammarAccess.getInstancesAccess().getInstT_InstanceKeyword_0_0()); }
)

{ after(grammarAccess.getInstancesAccess().getInstT_InstanceKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instances__T_inst_stAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstancesAccess().getT_inst_stT_instance_subtypesParserRuleCall_1_0()); }
	rulet_instance_subtypes{ after(grammarAccess.getInstancesAccess().getT_inst_stT_instance_subtypesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_instance_subtypes__T_subc_stAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_subc_stT_subcomponent_subtypesParserRuleCall_0_0()); }
	rulet_subcomponent_subtypes{ after(grammarAccess.getT_instance_subtypesAccess().getT_subc_stT_subcomponent_subtypesParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_instance_subtypes__T_sbcallAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_sbcallI_Subprogram_CallKeyword_5_0()); }
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_sbcallI_Subprogram_CallKeyword_5_0()); }

	I_Subprogram_Call 

{ after(grammarAccess.getT_instance_subtypesAccess().getT_sbcallI_Subprogram_CallKeyword_5_0()); }
)

{ after(grammarAccess.getT_instance_subtypesAccess().getT_sbcallI_Subprogram_CallKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_instance_subtypes__T_callseqAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_callseqI_Call_SequenceKeyword_6_0()); }
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_callseqI_Call_SequenceKeyword_6_0()); }

	I_Call_Sequence 

{ after(grammarAccess.getT_instance_subtypesAccess().getT_callseqI_Call_SequenceKeyword_6_0()); }
)

{ after(grammarAccess.getT_instance_subtypesAccess().getT_callseqI_Call_SequenceKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_instance_subtypes__T_eeflowAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_eeflowI_End_To_End_FlowKeyword_7_0()); }
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_eeflowI_End_To_End_FlowKeyword_7_0()); }

	I_End_To_End_Flow 

{ after(grammarAccess.getT_instance_subtypesAccess().getT_eeflowI_End_To_End_FlowKeyword_7_0()); }
)

{ after(grammarAccess.getT_instance_subtypesAccess().getT_eeflowI_End_To_End_FlowKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_instance_subtypes__T_protoAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_protoI_PrototypeKeyword_8_0()); }
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_protoI_PrototypeKeyword_8_0()); }

	I_Prototype 

{ after(grammarAccess.getT_instance_subtypesAccess().getT_protoI_PrototypeKeyword_8_0()); }
)

{ after(grammarAccess.getT_instance_subtypesAccess().getT_protoI_PrototypeKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_instance_subtypes__T_modeAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_modeI_ModeKeyword_9_0()); }
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_modeI_ModeKeyword_9_0()); }

	I_Mode 

{ after(grammarAccess.getT_instance_subtypesAccess().getT_modeI_ModeKeyword_9_0()); }
)

{ after(grammarAccess.getT_instance_subtypesAccess().getT_modeI_ModeKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_instance_subtypes__T_mod_transAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_mod_transI_Mode_TransitionKeyword_10_0()); }
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_mod_transI_Mode_TransitionKeyword_10_0()); }

	I_Mode_Transition 

{ after(grammarAccess.getT_instance_subtypesAccess().getT_mod_transI_Mode_TransitionKeyword_10_0()); }
)

{ after(grammarAccess.getT_instance_subtypesAccess().getT_mod_transI_Mode_TransitionKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_instance_subtypes__T_mode_trigAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_mode_trigI_Mode_Trigger_IdKeyword_11_0()); }
(
{ before(grammarAccess.getT_instance_subtypesAccess().getT_mode_trigI_Mode_Trigger_IdKeyword_11_0()); }

	I_Mode_Trigger_Id 

{ after(grammarAccess.getT_instance_subtypesAccess().getT_mode_trigI_Mode_Trigger_IdKeyword_11_0()); }
)

{ after(grammarAccess.getT_instance_subtypesAccess().getT_mode_trigI_Mode_Trigger_IdKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_subcomponent_subtypes__T_subAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_subcomponent_subtypesAccess().getT_subI_ComponentKeyword_0_0()); }
(
{ before(grammarAccess.getT_subcomponent_subtypesAccess().getT_subI_ComponentKeyword_0_0()); }

	I_Component 

{ after(grammarAccess.getT_subcomponent_subtypesAccess().getT_subI_ComponentKeyword_0_0()); }
)

{ after(grammarAccess.getT_subcomponent_subtypesAccess().getT_subI_ComponentKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_subcomponent_subtypes__T_cimpl_stAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_subcomponent_subtypesAccess().getT_cimpl_stT_component_subtypesParserRuleCall_1_0()); }
	rulet_component_subtypes{ after(grammarAccess.getT_subcomponent_subtypesAccess().getT_cimpl_stT_component_subtypesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_annex_subAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_annex_subI_Component_AnnexKeyword_0_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_annex_subI_Component_AnnexKeyword_0_0()); }

	I_Component_Annex 

{ after(grammarAccess.getT_component_subtypesAccess().getT_annex_subI_Component_AnnexKeyword_0_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_annex_subI_Component_AnnexKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_abstractAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_abstractI_AbstractKeyword_1_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_abstractI_AbstractKeyword_1_0()); }

	I_Abstract 

{ after(grammarAccess.getT_component_subtypesAccess().getT_abstractI_AbstractKeyword_1_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_abstractI_AbstractKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_sysAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_sysI_SystemKeyword_2_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_sysI_SystemKeyword_2_0()); }

	I_System 

{ after(grammarAccess.getT_component_subtypesAccess().getT_sysI_SystemKeyword_2_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_sysI_SystemKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_devAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_devI_DeviceKeyword_3_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_devI_DeviceKeyword_3_0()); }

	I_Device 

{ after(grammarAccess.getT_component_subtypesAccess().getT_devI_DeviceKeyword_3_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_devI_DeviceKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_procAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_procI_ProcessorKeyword_4_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_procI_ProcessorKeyword_4_0()); }

	I_Processor 

{ after(grammarAccess.getT_component_subtypesAccess().getT_procI_ProcessorKeyword_4_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_procI_ProcessorKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_virt_procAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_virt_procI_Virtual_ProcessorKeyword_5_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_virt_procI_Virtual_ProcessorKeyword_5_0()); }

	I_Virtual_Processor 

{ after(grammarAccess.getT_component_subtypesAccess().getT_virt_procI_Virtual_ProcessorKeyword_5_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_virt_procI_Virtual_ProcessorKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_busAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_busI_BusKeyword_6_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_busI_BusKeyword_6_0()); }

	I_Bus 

{ after(grammarAccess.getT_component_subtypesAccess().getT_busI_BusKeyword_6_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_busI_BusKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_vbusAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_vbusI_Virtual_BusKeyword_7_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_vbusI_Virtual_BusKeyword_7_0()); }

	I_Virtual_Bus 

{ after(grammarAccess.getT_component_subtypesAccess().getT_vbusI_Virtual_BusKeyword_7_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_vbusI_Virtual_BusKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_memAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_memI_MemoryKeyword_8_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_memI_MemoryKeyword_8_0()); }

	I_Memory 

{ after(grammarAccess.getT_component_subtypesAccess().getT_memI_MemoryKeyword_8_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_memI_MemoryKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_procAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_procI_ProcessKeyword_9_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_procI_ProcessKeyword_9_0()); }

	I_Process 

{ after(grammarAccess.getT_component_subtypesAccess().getT_procI_ProcessKeyword_9_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_procI_ProcessKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_tgAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_tgI_Thread_GroupKeyword_10_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_tgI_Thread_GroupKeyword_10_0()); }

	I_Thread_Group 

{ after(grammarAccess.getT_component_subtypesAccess().getT_tgI_Thread_GroupKeyword_10_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_tgI_Thread_GroupKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_tAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_tI_ThreadKeyword_11_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_tI_ThreadKeyword_11_0()); }

	I_Thread 

{ after(grammarAccess.getT_component_subtypesAccess().getT_tI_ThreadKeyword_11_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_tI_ThreadKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_dAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_dI_DataKeyword_12_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_dI_DataKeyword_12_0()); }

	I_Data 

{ after(grammarAccess.getT_component_subtypesAccess().getT_dI_DataKeyword_12_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_dI_DataKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_subprogAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_subprogI_SubprogramKeyword_13_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_subprogI_SubprogramKeyword_13_0()); }

	I_Subprogram 

{ after(grammarAccess.getT_component_subtypesAccess().getT_subprogI_SubprogramKeyword_13_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_subprogI_SubprogramKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_component_subtypes__T_subprog_gAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_subprog_gI_Subprogram_GroupKeyword_14_0()); }
(
{ before(grammarAccess.getT_component_subtypesAccess().getT_subprog_gI_Subprogram_GroupKeyword_14_0()); }

	I_Subprogram_Group 

{ after(grammarAccess.getT_component_subtypesAccess().getT_subprog_gI_Subprogram_GroupKeyword_14_0()); }
)

{ after(grammarAccess.getT_component_subtypesAccess().getT_subprog_gI_Subprogram_GroupKeyword_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_connection_subtypes__T_connAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_connI_ConnectionKeyword_0_0()); }
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_connI_ConnectionKeyword_0_0()); }

	I_Connection 

{ after(grammarAccess.getT_connection_subtypesAccess().getT_connI_ConnectionKeyword_0_0()); }
)

{ after(grammarAccess.getT_connection_subtypesAccess().getT_connI_ConnectionKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_connection_subtypes__T_feat_connAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_feat_connI_Feature_ConnectionKeyword_1_0()); }
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_feat_connI_Feature_ConnectionKeyword_1_0()); }

	I_Feature_Connection 

{ after(grammarAccess.getT_connection_subtypesAccess().getT_feat_connI_Feature_ConnectionKeyword_1_0()); }
)

{ after(grammarAccess.getT_connection_subtypesAccess().getT_feat_connI_Feature_ConnectionKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_connection_subtypes__T_port_connAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_port_connI_Port_ConnectionKeyword_2_0()); }
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_port_connI_Port_ConnectionKeyword_2_0()); }

	I_Port_Connection 

{ after(grammarAccess.getT_connection_subtypesAccess().getT_port_connI_Port_ConnectionKeyword_2_0()); }
)

{ after(grammarAccess.getT_connection_subtypesAccess().getT_port_connI_Port_ConnectionKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_connection_subtypes__T_parm_connAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_parm_connI_Parameter_ConnectionKeyword_3_0()); }
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_parm_connI_Parameter_ConnectionKeyword_3_0()); }

	I_Parameter_Connection 

{ after(grammarAccess.getT_connection_subtypesAccess().getT_parm_connI_Parameter_ConnectionKeyword_3_0()); }
)

{ after(grammarAccess.getT_connection_subtypesAccess().getT_parm_connI_Parameter_ConnectionKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_connection_subtypes__T_acc_conAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_acc_conI_Access_ConnectionKeyword_4_0()); }
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_acc_conI_Access_ConnectionKeyword_4_0()); }

	I_Access_Connection 

{ after(grammarAccess.getT_connection_subtypesAccess().getT_acc_conI_Access_ConnectionKeyword_4_0()); }
)

{ after(grammarAccess.getT_connection_subtypesAccess().getT_acc_conI_Access_ConnectionKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_connection_subtypes__T_fg_connAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_fg_connI_Feature_Group_ConnectionKeyword_5_0()); }
(
{ before(grammarAccess.getT_connection_subtypesAccess().getT_fg_connI_Feature_Group_ConnectionKeyword_5_0()); }

	I_Feature_Group_Connection 

{ after(grammarAccess.getT_connection_subtypesAccess().getT_fg_connI_Feature_Group_ConnectionKeyword_5_0()); }
)

{ after(grammarAccess.getT_connection_subtypesAccess().getT_fg_connI_Feature_Group_ConnectionKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_feature_subtypes__T_featAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_featI_FeatureKeyword_0_0()); }
(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_featI_FeatureKeyword_0_0()); }

	I_Feature 

{ after(grammarAccess.getT_feature_subtypesAccess().getT_featI_FeatureKeyword_0_0()); }
)

{ after(grammarAccess.getT_feature_subtypesAccess().getT_featI_FeatureKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_feature_subtypes__T_abs_featAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_abs_featI_Abstract_FeatureKeyword_1_0()); }
(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_abs_featI_Abstract_FeatureKeyword_1_0()); }

	I_Abstract_Feature 

{ after(grammarAccess.getT_feature_subtypesAccess().getT_abs_featI_Abstract_FeatureKeyword_1_0()); }
)

{ after(grammarAccess.getT_feature_subtypesAccess().getT_abs_featI_Abstract_FeatureKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_feature_subtypes__T_parmAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_parmI_ParameterKeyword_2_0()); }
(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_parmI_ParameterKeyword_2_0()); }

	I_Parameter 

{ after(grammarAccess.getT_feature_subtypesAccess().getT_parmI_ParameterKeyword_2_0()); }
)

{ after(grammarAccess.getT_feature_subtypesAccess().getT_parmI_ParameterKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_feature_subtypes__T_fgAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_fgI_Feature_GroupKeyword_3_0()); }
(
{ before(grammarAccess.getT_feature_subtypesAccess().getT_fgI_Feature_GroupKeyword_3_0()); }

	I_Feature_Group 

{ after(grammarAccess.getT_feature_subtypesAccess().getT_fgI_Feature_GroupKeyword_3_0()); }
)

{ after(grammarAccess.getT_feature_subtypesAccess().getT_fgI_Feature_GroupKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_access_subtypes__T_accessAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_accessI_AccessKeyword_0_0()); }
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_accessI_AccessKeyword_0_0()); }

	I_Access 

{ after(grammarAccess.getT_access_subtypesAccess().getT_accessI_AccessKeyword_0_0()); }
)

{ after(grammarAccess.getT_access_subtypesAccess().getT_accessI_AccessKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_access_subtypes__T_data_accAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_data_accI_Data_AccessKeyword_1_0()); }
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_data_accI_Data_AccessKeyword_1_0()); }

	I_Data_Access 

{ after(grammarAccess.getT_access_subtypesAccess().getT_data_accI_Data_AccessKeyword_1_0()); }
)

{ after(grammarAccess.getT_access_subtypesAccess().getT_data_accI_Data_AccessKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_access_subtypes__T_sub_accAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_sub_accI_Subprogram_AccessKeyword_2_0()); }
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_sub_accI_Subprogram_AccessKeyword_2_0()); }

	I_Subprogram_Access 

{ after(grammarAccess.getT_access_subtypesAccess().getT_sub_accI_Subprogram_AccessKeyword_2_0()); }
)

{ after(grammarAccess.getT_access_subtypesAccess().getT_sub_accI_Subprogram_AccessKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_access_subtypes__T_sub_gr_accAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_sub_gr_accI_Subprogram_Group_AccessKeyword_3_0()); }
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_sub_gr_accI_Subprogram_Group_AccessKeyword_3_0()); }

	I_Subprogram_Group_Access 

{ after(grammarAccess.getT_access_subtypesAccess().getT_sub_gr_accI_Subprogram_Group_AccessKeyword_3_0()); }
)

{ after(grammarAccess.getT_access_subtypesAccess().getT_sub_gr_accI_Subprogram_Group_AccessKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_access_subtypes__T_bus_accAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_bus_accI_Bus_AccessKeyword_4_0()); }
(
{ before(grammarAccess.getT_access_subtypesAccess().getT_bus_accI_Bus_AccessKeyword_4_0()); }

	I_Bus_Access 

{ after(grammarAccess.getT_access_subtypesAccess().getT_bus_accI_Bus_AccessKeyword_4_0()); }
)

{ after(grammarAccess.getT_access_subtypesAccess().getT_bus_accI_Bus_AccessKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_port_subtypes__T_portAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_port_subtypesAccess().getT_portI_PortKeyword_0_0()); }
(
{ before(grammarAccess.getT_port_subtypesAccess().getT_portI_PortKeyword_0_0()); }

	I_Port 

{ after(grammarAccess.getT_port_subtypesAccess().getT_portI_PortKeyword_0_0()); }
)

{ after(grammarAccess.getT_port_subtypesAccess().getT_portI_PortKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_port_subtypes__T_d_portAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_port_subtypesAccess().getT_d_portI_Data_PortKeyword_1_0()); }
(
{ before(grammarAccess.getT_port_subtypesAccess().getT_d_portI_Data_PortKeyword_1_0()); }

	I_Data_Port 

{ after(grammarAccess.getT_port_subtypesAccess().getT_d_portI_Data_PortKeyword_1_0()); }
)

{ after(grammarAccess.getT_port_subtypesAccess().getT_d_portI_Data_PortKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_port_subtypes__T_ev_portAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_port_subtypesAccess().getT_ev_portI_Event_PortKeyword_2_0()); }
(
{ before(grammarAccess.getT_port_subtypesAccess().getT_ev_portI_Event_PortKeyword_2_0()); }

	I_Event_Port 

{ after(grammarAccess.getT_port_subtypesAccess().getT_ev_portI_Event_PortKeyword_2_0()); }
)

{ after(grammarAccess.getT_port_subtypesAccess().getT_ev_portI_Event_PortKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_port_subtypes__T_evd_portAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_port_subtypesAccess().getT_evd_portI_Event_Data_PortKeyword_3_0()); }
(
{ before(grammarAccess.getT_port_subtypesAccess().getT_evd_portI_Event_Data_PortKeyword_3_0()); }

	I_Event_Data_Port 

{ after(grammarAccess.getT_port_subtypesAccess().getT_evd_portI_Event_Data_PortKeyword_3_0()); }
)

{ after(grammarAccess.getT_port_subtypesAccess().getT_evd_portI_Event_Data_PortKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_flow_spec_subtypes__T_f_specAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_specI_Flow_SpecKeyword_0_0()); }
(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_specI_Flow_SpecKeyword_0_0()); }

	I_Flow_Spec 

{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_specI_Flow_SpecKeyword_0_0()); }
)

{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_specI_Flow_SpecKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_flow_spec_subtypes__T_f_spec_sourceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sourceI_Flow_Spec_SourceKeyword_1_0()); }
(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sourceI_Flow_Spec_SourceKeyword_1_0()); }

	I_Flow_Spec_Source 

{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sourceI_Flow_Spec_SourceKeyword_1_0()); }
)

{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sourceI_Flow_Spec_SourceKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_flow_spec_subtypes__T_f_spec_sinkAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sinkI_Flow_Spec_SinkKeyword_2_0()); }
(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sinkI_Flow_Spec_SinkKeyword_2_0()); }

	I_Flow_Spec_Sink 

{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sinkI_Flow_Spec_SinkKeyword_2_0()); }
)

{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_sinkI_Flow_Spec_SinkKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_flow_spec_subtypes__T_f_spec_pathAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_pathI_Flow_Spec_PathKeyword_3_0()); }
(
{ before(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_pathI_Flow_Spec_PathKeyword_3_0()); }

	I_Flow_Spec_Path 

{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_pathI_Flow_Spec_PathKeyword_3_0()); }
)

{ after(grammarAccess.getT_flow_spec_subtypesAccess().getT_f_spec_pathI_Flow_Spec_PathKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_flow_impl_subtypes__T_f_iAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_iI_Flow_ImplKeyword_0_0()); }
(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_iI_Flow_ImplKeyword_0_0()); }

	I_Flow_Impl 

{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_iI_Flow_ImplKeyword_0_0()); }
)

{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_iI_Flow_ImplKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_flow_impl_subtypes__T_f_i_sourceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sourceI_Flow_Impl_SourceKeyword_1_0()); }
(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sourceI_Flow_Impl_SourceKeyword_1_0()); }

	I_Flow_Impl_Source 

{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sourceI_Flow_Impl_SourceKeyword_1_0()); }
)

{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sourceI_Flow_Impl_SourceKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_flow_impl_subtypes__T_f_i_sinkAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sinkI_Flow_Impl_SinkKeyword_2_0()); }
(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sinkI_Flow_Impl_SinkKeyword_2_0()); }

	I_Flow_Impl_Sink 

{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sinkI_Flow_Impl_SinkKeyword_2_0()); }
)

{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_sinkI_Flow_Impl_SinkKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_flow_impl_subtypes__T_f_i_pathAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_pathI_Flow_Impl_PathKeyword_3_0()); }
(
{ before(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_pathI_Flow_Impl_PathKeyword_3_0()); }

	I_Flow_Impl_Path 

{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_pathI_Flow_Impl_PathKeyword_3_0()); }
)

{ after(grammarAccess.getT_flow_impl_subtypesAccess().getT_f_i_pathI_Flow_Impl_PathKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__LowerBoundAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getLowerBoundAlternatives_0_0()); }
(rule__IntegerRange__LowerBoundAlternatives_0_0)
{ after(grammarAccess.getIntegerRangeAccess().getLowerBoundAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__UpperBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getUpperBoundAlternatives_2_0()); }
(rule__IntegerRange__UpperBoundAlternatives_2_0)
{ after(grammarAccess.getIntegerRangeAccess().getUpperBoundAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__LowerBoundAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getLowerBoundAlternatives_0_0()); }
(rule__RealRange__LowerBoundAlternatives_0_0)
{ after(grammarAccess.getRealRangeAccess().getLowerBoundAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__UpperBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getUpperBoundAlternatives_2_0()); }
(rule__RealRange__UpperBoundAlternatives_2_0)
{ after(grammarAccess.getRealRangeAccess().getUpperBoundAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__RangeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getRangeIntegerRangeParserRuleCall_2_0()); }
	ruleIntegerRange{ after(grammarAccess.getUnnamedIntegerTypeAccess().getRangeIntegerRangeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__OwnedUnitsTypeAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getOwnedUnitsTypeUnnamedUnitsTypeParserRuleCall_3_0_0()); }
	ruleUnnamedUnitsType{ after(grammarAccess.getUnnamedIntegerTypeAccess().getOwnedUnitsTypeUnnamedUnitsTypeParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__ReferencedUnitsTypeAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeUnitsTypeCrossReference_3_1_1_0()); }
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeUnitsTypeQPREFParserRuleCall_3_1_1_0_1()); }
	ruleQPREF{ after(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeUnitsTypeQPREFParserRuleCall_3_1_1_0_1()); }
)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeUnitsTypeCrossReference_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__RangeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getRangeRealRangeParserRuleCall_2_0()); }
	ruleRealRange{ after(grammarAccess.getUnnamedRealTypeAccess().getRangeRealRangeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__OwnedUnitsTypeAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getOwnedUnitsTypeUnnamedUnitsTypeParserRuleCall_3_0_0()); }
	ruleUnnamedUnitsType{ after(grammarAccess.getUnnamedRealTypeAccess().getOwnedUnitsTypeUnnamedUnitsTypeParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__ReferencedUnitsTypeAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeUnitsTypeCrossReference_3_1_1_0()); }
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeUnitsTypeQPREFParserRuleCall_3_1_1_0_1()); }
	ruleQPREF{ after(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeUnitsTypeQPREFParserRuleCall_3_1_1_0_1()); }
)
{ after(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeUnitsTypeCrossReference_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__OwnedLiteralAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralUnitLiteralParserRuleCall_2_0()); }
	ruleUnitLiteral{ after(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralUnitLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__OwnedLiteralAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralUnitLiteralConversionParserRuleCall_3_1_0()); }
	ruleUnitLiteralConversion{ after(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralUnitLiteralConversionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteral__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getUnitLiteralAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getUnitLiteralConversionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__BaseUnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitUnitLiteralCrossReference_2_0()); }
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitUnitLiteralIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitUnitLiteralIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitUnitLiteralCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__FactorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getFactorNumberValueParserRuleCall_4_0()); }
	ruleNumberValue{ after(grammarAccess.getUnitLiteralConversionAccess().getFactorNumberValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLit__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLitAccess().getValueSignedRealParserRuleCall_0()); }
	ruleSignedReal{ after(grammarAccess.getRealLitAccess().getValueSignedRealParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLit__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLitAccess().getValueSignedIntParserRuleCall_0()); }
	ruleSignedInt{ after(grammarAccess.getIntegerLitAccess().getValueSignedIntParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__OwnedLiteralAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralEnumerationLiteralParserRuleCall_2_0()); }
	ruleEnumerationLiteral{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralEnumerationLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__OwnedLiteralAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralEnumerationLiteralParserRuleCall_3_1_0()); }
	ruleEnumerationLiteral{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralEnumerationLiteralParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__OwnedNumberTypeAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeAlternatives_2_0_0()); }
(rule__UnnamedRangeType__OwnedNumberTypeAlternatives_2_0_0)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeAlternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__ReferencedNumberTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getReferencedNumberTypeNumberTypeCrossReference_2_1_0()); }
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getReferencedNumberTypeNumberTypeQPREFParserRuleCall_2_1_0_1()); }
	ruleQPREF{ after(grammarAccess.getUnnamedRangeTypeAccess().getReferencedNumberTypeNumberTypeQPREFParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getReferencedNumberTypeNumberTypeCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
	ruleQPREF{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppendAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }

	PlusSignEqualsSignGreaterThanSign 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
)

{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__ConstantAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }

	Constant 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
)

{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__OwnedValueAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_0()); }
	ruleOptionalModalPropertyValue{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__OwnedValueAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_1_1_0()); }
	ruleOptionalModalPropertyValue{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppliesToAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_2_0()); }
	ruleContainmentPath{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppliesToAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_3_1_0()); }
	ruleContainmentPath{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__InBindingAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierCrossReference_5_3_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierQCREFParserRuleCall_5_3_0_1()); }
	ruleQCREF{ after(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierQCREFParserRuleCall_5_3_0_1()); }
)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierCrossReference_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ContainmentPath__PathAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getPathContainmentPathElementParserRuleCall_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getContainmentPathAccess().getPathContainmentPathElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OptionalModalPropertyValue__OwnedValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); }
	rulePropertyExpression{ after(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__InModeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_3_0()); }
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_3_0_1()); }
	RULE_ID{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_3_0_1()); }
)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__InModeAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_4_1_0()); }
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_4_1_0_1()); }
)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__OwnedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0()); }
	rulePropertyExpression{ after(grammarAccess.getPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralorReferenceTerm__NamedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueCrossReference_0()); }
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueQPREFParserRuleCall_0_1()); }
	ruleQPREF{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueQPREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }

	True 

{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__NamedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); }
(
{ before(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantQPREFParserRuleCall_0_1()); }
	ruleQPREF{ after(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantQPREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__PathAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getPathContainmentPathElementParserRuleCall_2_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getReferenceTermAccess().getPathContainmentPathElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__OwnedFieldValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueFieldPropertyAssociationParserRuleCall_1_0()); }
	ruleFieldPropertyAssociation{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueFieldPropertyAssociationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__FunctionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getFunctionIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getComputedTermAccess().getFunctionIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__ClassifierAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0()); }
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierQCREFParserRuleCall_2_0_1()); }
	ruleQCREF{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierQCREFParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__OwnedListElementAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_0_0()); }
	rulePropertyExpression{ after(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__OwnedListElementAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_1_1_0()); }
	rulePropertyExpression{ after(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__OwnedValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValuePropertyExpressionParserRuleCall_2_0()); }
	rulePropertyExpression{ after(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValuePropertyExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__NamedElementAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0_0()); }
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__ArrayRangeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_0_1_0()); }
	ruleArrayRange{ after(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__PathAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getPathContainmentPathElementParserRuleCall_1_1_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getContainmentPathElementAccess().getPathContainmentPathElementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringTerm__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); }
	ruleNoQuoteString{ after(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__LowerBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLowerBoundINTVALUEParserRuleCall_2_0()); }
	ruleINTVALUE{ after(grammarAccess.getArrayRangeAccess().getLowerBoundINTVALUEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__UpperBoundAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getUpperBoundINTVALUEParserRuleCall_3_1_0()); }
	ruleINTVALUE{ after(grammarAccess.getArrayRangeAccess().getUpperBoundINTVALUEParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); }
	rulePlusMinus{ after(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__OwnedPropertyExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); }
	ruleConstantValue{ after(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__MinimumAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumNumAltParserRuleCall_0_0()); }
	ruleNumAlt{ after(grammarAccess.getNumericRangeTermAccess().getMinimumNumAltParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__MaximumAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumNumAltParserRuleCall_2_0()); }
	ruleNumAlt{ after(grammarAccess.getNumericRangeTermAccess().getMaximumNumAltParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__DeltaAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaNumAltParserRuleCall_3_1_0()); }
	ruleNumAlt{ after(grammarAccess.getNumericRangeTermAccess().getDeltaNumAltParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



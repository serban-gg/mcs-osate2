/*
 * generated by Xtext
 */
parser grammar InternalMCSParser;

options {
	tokenVocab=InternalMCSLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@header {
package org.osate.xtext.aadl2.mcs.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.osate.xtext.aadl2.mcs.services.MCSGrammarAccess;

}

@members {
 
 	private MCSGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("ExclamationMark", "'!'");
		tokenNameToValue.put("NumberSign", "'#'");
		tokenNameToValue.put("PercentSign", "'\%'");
		tokenNameToValue.put("Ampersand", "'&'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("QuestionMark", "'?'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("VerticalLine", "'|'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
		tokenNameToValue.put("PercentSignEqualsSign", "'\%='");
		tokenNameToValue.put("AmpersandAmpersand", "'&&'");
		tokenNameToValue.put("LeftParenthesisSpace", "'( '");
		tokenNameToValue.put("AsteriskAsterisk", "'**'");
		tokenNameToValue.put("AsteriskEqualsSign", "'*='");
		tokenNameToValue.put("PlusSignPlusSign", "'++'");
		tokenNameToValue.put("PlusSignEqualsSign", "'+='");
		tokenNameToValue.put("HyphenMinusHyphenMinus", "'--'");
		tokenNameToValue.put("HyphenMinusEqualsSign", "'-='");
		tokenNameToValue.put("HyphenMinusGreaterThanSign", "'->'");
		tokenNameToValue.put("FullStopFullStop", "'..'");
		tokenNameToValue.put("SolidusEqualsSign", "'/='");
		tokenNameToValue.put("ColonColon", "'::'");
		tokenNameToValue.put("ColonEqualsSign", "':='");
		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("QuestionMarkFullStop", "'?.'");
		tokenNameToValue.put("QuestionMarkColon", "'?:'");
		tokenNameToValue.put("As", "'as'");
		tokenNameToValue.put("Do", "'do'");
		tokenNameToValue.put("If", "'if'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("To", "'to'");
		tokenNameToValue.put("VerticalLineVerticalLine", "'||'");
		tokenNameToValue.put("ExclamationMarkEqualsSignEqualsSign", "'!=='");
		tokenNameToValue.put("FullStopFullStopLessThanSign", "'..<'");
		tokenNameToValue.put("EqualsSignEqualsSignEqualsSign", "'==='");
		tokenNameToValue.put("All", "'all'");
		tokenNameToValue.put("Bus", "'bus'");
		tokenNameToValue.put("End", "'end'");
		tokenNameToValue.put("For", "'for'");
		tokenNameToValue.put("Map", "'map'");
		tokenNameToValue.put("New", "'new'");
		tokenNameToValue.put("Set", "'set'");
		tokenNameToValue.put("Try", "'try'");
		tokenNameToValue.put("Val", "'val'");
		tokenNameToValue.put("Var", "'var'");
		tokenNameToValue.put("Case", "'case'");
		tokenNameToValue.put("Data", "'data'");
		tokenNameToValue.put("Else", "'else'");
		tokenNameToValue.put("Fail", "'fail'");
		tokenNameToValue.put("List", "'list'");
		tokenNameToValue.put("Mode", "'mode'");
		tokenNameToValue.put("Null", "'null'");
		tokenNameToValue.put("Root", "'root'");
		tokenNameToValue.put("Self", "'self'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("Type", "'type'");
		tokenNameToValue.put("Catch", "'catch'");
		tokenNameToValue.put("Check", "'check'");
		tokenNameToValue.put("Const", "'const'");
		tokenNameToValue.put("False", "'false'");
		tokenNameToValue.put("Group", "'group'");
		tokenNameToValue.put("Modes", "'modes'");
		tokenNameToValue.put("Range", "'range'");
		tokenNameToValue.put("Super", "'super'");
		tokenNameToValue.put("Throw", "'throw'");
		tokenNameToValue.put("Types", "'types'");
		tokenNameToValue.put("Units", "'units'");
		tokenNameToValue.put("While", "'while'");
		tokenNameToValue.put("Device", "'device'");
		tokenNameToValue.put("Import", "'import'");
		tokenNameToValue.put("Memory", "'memory'");
		tokenNameToValue.put("Record", "'record'");
		tokenNameToValue.put("Return", "'return'");
		tokenNameToValue.put("Script", "'script'");
		tokenNameToValue.put("Static", "'static'");
		tokenNameToValue.put("Switch", "'switch'");
		tokenNameToValue.put("KW_System", "'system'");
		tokenNameToValue.put("Thread", "'thread'");
		tokenNameToValue.put("Typeof", "'typeof'");
		tokenNameToValue.put("Applies", "'applies'");
		tokenNameToValue.put("Default", "'default'");
		tokenNameToValue.put("Enforce", "'enforce'");
		tokenNameToValue.put("Extends", "'extends'");
		tokenNameToValue.put("Finally", "'finally'");
		tokenNameToValue.put("Package", "'package'");
		tokenNameToValue.put("Process", "'process'");
		tokenNameToValue.put("Returns", "'returns'");
		tokenNameToValue.put("Theorem", "'theorem'");
		tokenNameToValue.put("Virtual", "'virtual'");
		tokenNameToValue.put("Aadlreal", "'aadlreal'");
		tokenNameToValue.put("Abstract", "'abstract'");
		tokenNameToValue.put("Contract", "'contract'");
		tokenNameToValue.put("Theorems", "'theorems'");
		tokenNameToValue.put("T_Element", "'T_Element'");
		tokenNameToValue.put("Constants", "'constants'");
		tokenNameToValue.put("Endscript", "'endscript'");
		tokenNameToValue.put("Extension", "'extension'");
		tokenNameToValue.put("Functions", "'functions'");
		tokenNameToValue.put("Processor", "'processor'");
		tokenNameToValue.put("Reference", "'reference'");
		tokenNameToValue.put("Viewpoint", "'viewpoint'");
		tokenNameToValue.put("Aadlstring", "'aadlstring'");
		tokenNameToValue.put("Classifier", "'classifier'");
		tokenNameToValue.put("Instanceof", "'instanceof'");
		tokenNameToValue.put("Subprogram", "'subprogram'");
		tokenNameToValue.put("Aadlboolean", "'aadlboolean'");
		tokenNameToValue.put("Aadlinteger", "'aadlinteger'");
		tokenNameToValue.put("Enumeration", "'enumeration'");
		tokenNameToValue.put("T_Classifier", "'T_Classifier'");
		tokenNameToValue.put("Current_mode", "'current_mode'");
		tokenNameToValue.put("Synchronized", "'synchronized'");
		tokenNameToValue.put("FeatureGroup", "'feature group'");
		tokenNameToValue.put("Implementation", "'implementation'");
		tokenNameToValue.put("T_Named_Reference", "'T_Named_Reference'");
		tokenNameToValue.put("T_Annex_Classifier", "'T_Annex_Classifier'");
		tokenNameToValue.put("T_Feature_Group_Classifier", "'T_Feature_Group_Classifier'");
		tokenNameToValue.put("T_Component_Impl_Classifier", "'T_Component_Impl_Classifier'");
		tokenNameToValue.put("T_Component_Type_Classifier", "'T_Component_Type_Classifier'");
 	}
 	
    public void setGrammarAccess(MCSGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleMCSGrammarRoot
entryRuleMCSGrammarRoot 
:
{ before(grammarAccess.getMCSGrammarRootRule()); }
	 ruleMCSGrammarRoot
{ after(grammarAccess.getMCSGrammarRootRule()); } 
	 EOF 
;

// Rule MCSGrammarRoot
ruleMCSGrammarRoot 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMCSGrammarRootAccess().getAlternatives()); }
(rule__MCSGrammarRoot__Alternatives)
{ after(grammarAccess.getMCSGrammarRootAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleMCSAnnexLibrary
entryRuleMCSAnnexLibrary 
:
{ before(grammarAccess.getMCSAnnexLibraryRule()); }
	 ruleMCSAnnexLibrary
{ after(grammarAccess.getMCSAnnexLibraryRule()); } 
	 EOF 
;

// Rule MCSAnnexLibrary
ruleMCSAnnexLibrary 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup()); }
(rule__MCSAnnexLibrary__Group__0)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_declaration
entryRuletype_declaration 
:
{ before(grammarAccess.getType_declarationRule()); }
	 ruletype_declaration
{ after(grammarAccess.getType_declarationRule()); } 
	 EOF 
;

// Rule type_declaration
ruletype_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getType_declarationAccess().getGroup()); }
(rule__Type_declaration__Group__0)
{ after(grammarAccess.getType_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant_declaration
entryRuleconstant_declaration 
:
{ before(grammarAccess.getConstant_declarationRule()); }
	 ruleconstant_declaration
{ after(grammarAccess.getConstant_declarationRule()); } 
	 EOF 
;

// Rule constant_declaration
ruleconstant_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstant_declarationAccess().getGroup()); }
(rule__Constant_declaration__Group__0)
{ after(grammarAccess.getConstant_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMCSViewpoint
entryRuleMCSViewpoint 
:
{ before(grammarAccess.getMCSViewpointRule()); }
	 ruleMCSViewpoint
{ after(grammarAccess.getMCSViewpointRule()); } 
	 EOF 
;

// Rule MCSViewpoint
ruleMCSViewpoint 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMCSViewpointAccess().getGroup()); }
(rule__MCSViewpoint__Group__0)
{ after(grammarAccess.getMCSViewpointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnforcement_policy
entryRuleEnforcement_policy 
:
{ before(grammarAccess.getEnforcement_policyRule()); }
	 ruleEnforcement_policy
{ after(grammarAccess.getEnforcement_policyRule()); } 
	 EOF 
;

// Rule Enforcement_policy
ruleEnforcement_policy 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getEnforcement_policyAccess().getGroup()); }
(rule__Enforcement_policy__Group__0)
{ after(grammarAccess.getEnforcement_policyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageScript
entryRulePackageScript 
:
{ before(grammarAccess.getPackageScriptRule()); }
	 rulePackageScript
{ after(grammarAccess.getPackageScriptRule()); } 
	 EOF 
;

// Rule PackageScript
rulePackageScript 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPackageScriptAccess().getGroup()); }
(rule__PackageScript__Group__0)
{ after(grammarAccess.getPackageScriptAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAppliesToClause
entryRuleAppliesToClause 
:
{ before(grammarAccess.getAppliesToClauseRule()); }
	 ruleAppliesToClause
{ after(grammarAccess.getAppliesToClauseRule()); } 
	 EOF 
;

// Rule AppliesToClause
ruleAppliesToClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAppliesToClauseAccess().getGroup()); }
(rule__AppliesToClause__Group__0)
{ after(grammarAccess.getAppliesToClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierCategory
entryRuleClassifierCategory 
:
{ before(grammarAccess.getClassifierCategoryRule()); }
	 ruleClassifierCategory
{ after(grammarAccess.getClassifierCategoryRule()); } 
	 EOF 
;

// Rule ClassifierCategory
ruleClassifierCategory 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getClassifierCategoryAccess().getGroup()); }
(rule__ClassifierCategory__Group__0)
{ after(grammarAccess.getClassifierCategoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentCategory
entryRuleComponentCategory 
:
{ before(grammarAccess.getComponentCategoryRule()); }
	 ruleComponentCategory
{ after(grammarAccess.getComponentCategoryRule()); } 
	 EOF 
;

// Rule ComponentCategory
ruleComponentCategory 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComponentCategoryAccess().getAlternatives()); }
(rule__ComponentCategory__Alternatives)
{ after(grammarAccess.getComponentCategoryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureGroupClassifierReference
entryRuleFeatureGroupClassifierReference 
:
{ before(grammarAccess.getFeatureGroupClassifierReferenceRule()); }
	 ruleFeatureGroupClassifierReference
{ after(grammarAccess.getFeatureGroupClassifierReferenceRule()); } 
	 EOF 
;

// Rule FeatureGroupClassifierReference
ruleFeatureGroupClassifierReference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFeatureGroupClassifierReferenceAccess().getFgAssignment()); }
(rule__FeatureGroupClassifierReference__FgAssignment)
{ after(grammarAccess.getFeatureGroupClassifierReferenceAccess().getFgAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleViewpointReference
entryRuleViewpointReference 
:
{ before(grammarAccess.getViewpointReferenceRule()); }
	 ruleViewpointReference
{ after(grammarAccess.getViewpointReferenceRule()); } 
	 EOF 
;

// Rule ViewpointReference
ruleViewpointReference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getViewpointReferenceAccess().getGroup()); }
(rule__ViewpointReference__Group__0)
{ after(grammarAccess.getViewpointReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraintsBlock
entryRuleConstraintsBlock 
:
{ before(grammarAccess.getConstraintsBlockRule()); }
	 ruleConstraintsBlock
{ after(grammarAccess.getConstraintsBlockRule()); } 
	 EOF 
;

// Rule ConstraintsBlock
ruleConstraintsBlock 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstraintsBlockAccess().getGroup()); }
(rule__ConstraintsBlock__Group__0)
{ after(grammarAccess.getConstraintsBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelabelled_check_statement
entryRulelabelled_check_statement 
:
{ before(grammarAccess.getLabelled_check_statementRule()); }
	 rulelabelled_check_statement
{ after(grammarAccess.getLabelled_check_statementRule()); } 
	 EOF 
;

// Rule labelled_check_statement
rulelabelled_check_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLabelled_check_statementAccess().getGroup()); }
(rule__Labelled_check_statement__Group__0)
{ after(grammarAccess.getLabelled_check_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecheck_statement
entryRulecheck_statement 
:
{ before(grammarAccess.getCheck_statementRule()); }
	 rulecheck_statement
{ after(grammarAccess.getCheck_statementRule()); } 
	 EOF 
;

// Rule check_statement
rulecheck_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCheck_statementAccess().getAlternatives()); }
(rule__Check_statement__Alternatives)
{ after(grammarAccess.getCheck_statementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleblock_label_id
entryRuleblock_label_id 
:
{ before(grammarAccess.getBlock_label_idRule()); }
	 ruleblock_label_id
{ after(grammarAccess.getBlock_label_idRule()); } 
	 EOF 
;

// Rule block_label_id
ruleblock_label_id 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBlock_label_idAccess().getNameAssignment()); }
(rule__Block_label_id__NameAssignment)
{ after(grammarAccess.getBlock_label_idAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecheck_label_id
entryRulecheck_label_id 
:
{ before(grammarAccess.getCheck_label_idRule()); }
	 rulecheck_label_id
{ after(grammarAccess.getCheck_label_idRule()); } 
	 EOF 
;

// Rule check_label_id
rulecheck_label_id 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCheck_label_idAccess().getNameAssignment()); }
(rule__Check_label_id__NameAssignment)
{ after(grammarAccess.getCheck_label_idAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecheck_theorem
entryRulecheck_theorem 
:
{ before(grammarAccess.getCheck_theoremRule()); }
	 rulecheck_theorem
{ after(grammarAccess.getCheck_theoremRule()); } 
	 EOF 
;

// Rule check_theorem
rulecheck_theorem 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCheck_theoremAccess().getGroup()); }
(rule__Check_theorem__Group__0)
{ after(grammarAccess.getCheck_theoremAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModeSpec
entryRuleModeSpec 
:
{ before(grammarAccess.getModeSpecRule()); }
	 ruleModeSpec
{ after(grammarAccess.getModeSpecRule()); } 
	 EOF 
;

// Rule ModeSpec
ruleModeSpec 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getModeSpecAccess().getGroup()); }
(rule__ModeSpec__Group__0)
{ after(grammarAccess.getModeSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModeName
entryRuleModeName 
:
{ before(grammarAccess.getModeNameRule()); }
	 ruleModeName
{ after(grammarAccess.getModeNameRule()); } 
	 EOF 
;

// Rule ModeName
ruleModeName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getModeNameAccess().getNameAssignment()); }
(rule__ModeName__NameAssignment)
{ after(grammarAccess.getModeNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecheck_assertion
entryRulecheck_assertion 
:
{ before(grammarAccess.getCheck_assertionRule()); }
	 rulecheck_assertion
{ after(grammarAccess.getCheck_assertionRule()); } 
	 EOF 
;

// Rule check_assertion
rulecheck_assertion 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCheck_assertionAccess().getGroup()); }
(rule__Check_assertion__Group__0)
{ after(grammarAccess.getCheck_assertionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleroot_element
entryRuleroot_element 
:
{ before(grammarAccess.getRoot_elementRule()); }
	 ruleroot_element
{ after(grammarAccess.getRoot_elementRule()); } 
	 EOF 
;

// Rule root_element
ruleroot_element 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRoot_elementAccess().getElement_referenceParserRuleCall()); }
	ruleelement_reference
{ after(grammarAccess.getRoot_elementAccess().getElement_referenceParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelement_reference
entryRuleelement_reference 
:
{ before(grammarAccess.getElement_referenceRule()); }
	 ruleelement_reference
{ after(grammarAccess.getElement_referenceRule()); } 
	 EOF 
;

// Rule element_reference
ruleelement_reference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getElement_referenceAccess().getAlternatives()); }
(rule__Element_reference__Alternatives)
{ after(grammarAccess.getElement_referenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainmentPathElement
entryRuleContainmentPathElement 
:
{ before(grammarAccess.getContainmentPathElementRule()); }
	 ruleContainmentPathElement
{ after(grammarAccess.getContainmentPathElementRule()); } 
	 EOF 
;

// Rule ContainmentPathElement
ruleContainmentPathElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup()); }
(rule__ContainmentPathElement__Group__0)
{ after(grammarAccess.getContainmentPathElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayRange
entryRuleArrayRange 
:
{ before(grammarAccess.getArrayRangeRule()); }
	 ruleArrayRange
{ after(grammarAccess.getArrayRangeRule()); } 
	 EOF 
;

// Rule ArrayRange
ruleArrayRange 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArrayRangeAccess().getGroup()); }
(rule__ArrayRange__Group__0)
{ after(grammarAccess.getArrayRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageEnforce
entryRulePackageEnforce 
:
{ before(grammarAccess.getPackageEnforceRule()); }
	 rulePackageEnforce
{ after(grammarAccess.getPackageEnforceRule()); } 
	 EOF 
;

// Rule PackageEnforce
rulePackageEnforce 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPackageEnforceAccess().getGroup()); }
(rule__PackageEnforce__Group__0)
{ after(grammarAccess.getPackageEnforceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleassertion_expression
entryRuleassertion_expression 
:
{ before(grammarAccess.getAssertion_expressionRule()); }
	 ruleassertion_expression
{ after(grammarAccess.getAssertion_expressionRule()); } 
	 EOF 
;

// Rule assertion_expression
ruleassertion_expression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAssertion_expressionAccess().getExprAssignment()); }
(rule__Assertion_expression__ExprAssignment)
{ after(grammarAccess.getAssertion_expressionAccess().getExprAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestring_expression
entryRulestring_expression 
:
{ before(grammarAccess.getString_expressionRule()); }
	 rulestring_expression
{ after(grammarAccess.getString_expressionRule()); } 
	 EOF 
;

// Rule string_expression
rulestring_expression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getString_expressionAccess().getExprAssignment()); }
(rule__String_expression__ExprAssignment)
{ after(grammarAccess.getString_expressionAccess().getExprAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant_expression
entryRuleconstant_expression 
:
{ before(grammarAccess.getConstant_expressionRule()); }
	 ruleconstant_expression
{ after(grammarAccess.getConstant_expressionRule()); } 
	 EOF 
;

// Rule constant_expression
ruleconstant_expression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstant_expressionAccess().getExpressionParserRuleCall()); }
	ruleexpression
{ after(grammarAccess.getConstant_expressionAccess().getExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression
entryRuleexpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getExpressionAccess().getNameAssignment()); }
(rule__Expression__NameAssignment)
{ after(grammarAccess.getExpressionAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXLiteral
entryRuleXLiteral 
:
{ before(grammarAccess.getXLiteralRule()); }
	 ruleXLiteral
{ after(grammarAccess.getXLiteralRule()); } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXLiteralAccess().getAlternatives()); }
(rule__XLiteral__Alternatives)
{ after(grammarAccess.getXLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMCSAnnexSubclause
entryRuleMCSAnnexSubclause 
:
{ before(grammarAccess.getMCSAnnexSubclauseRule()); }
	 ruleMCSAnnexSubclause
{ after(grammarAccess.getMCSAnnexSubclauseRule()); } 
	 EOF 
;

// Rule MCSAnnexSubclause
ruleMCSAnnexSubclause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getGroup()); }
(rule__MCSAnnexSubclause__Group__0)
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierEnforce
entryRuleClassifierEnforce 
:
{ before(grammarAccess.getClassifierEnforceRule()); }
	 ruleClassifierEnforce
{ after(grammarAccess.getClassifierEnforceRule()); } 
	 EOF 
;

// Rule ClassifierEnforce
ruleClassifierEnforce 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getClassifierEnforceAccess().getGroup()); }
(rule__ClassifierEnforce__Group__0)
{ after(grammarAccess.getClassifierEnforceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierScript
entryRuleClassifierScript 
:
{ before(grammarAccess.getClassifierScriptRule()); }
	 ruleClassifierScript
{ after(grammarAccess.getClassifierScriptRule()); } 
	 EOF 
;

// Rule ClassifierScript
ruleClassifierScript 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getClassifierScriptAccess().getGroup()); }
(rule__ClassifierScript__Group__0)
{ after(grammarAccess.getClassifierScriptAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction_declaration
entryRulefunction_declaration 
:
{ before(grammarAccess.getFunction_declarationRule()); }
	 rulefunction_declaration
{ after(grammarAccess.getFunction_declarationRule()); } 
	 EOF 
;

// Rule function_declaration
rulefunction_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunction_declarationAccess().getGroup()); }
(rule__Function_declaration__Group__0)
{ after(grammarAccess.getFunction_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleargument
entryRuleargument 
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleargument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule argument
ruleargument 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArgumentAccess().getGroup()); }
(rule__Argument__Group__0)
{ after(grammarAccess.getArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMCSClosure
entryRuleMCSClosure 
:
{ before(grammarAccess.getMCSClosureRule()); }
	 ruleMCSClosure
{ after(grammarAccess.getMCSClosureRule()); } 
	 EOF 
;

// Rule MCSClosure
ruleMCSClosure 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMCSClosureAccess().getGroup()); }
(rule__MCSClosure__Group__0)
{ after(grammarAccess.getMCSClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletheorem_declaration
entryRuletheorem_declaration 
:
{ before(grammarAccess.getTheorem_declarationRule()); }
	 ruletheorem_declaration
{ after(grammarAccess.getTheorem_declarationRule()); } 
	 EOF 
;

// Rule theorem_declaration
ruletheorem_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTheorem_declarationAccess().getGroup()); }
(rule__Theorem_declaration__Group__0)
{ after(grammarAccess.getTheorem_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulein_modes_list
entryRulein_modes_list 
:
{ before(grammarAccess.getIn_modes_listRule()); }
	 rulein_modes_list
{ after(grammarAccess.getIn_modes_listRule()); } 
	 EOF 
;

// Rule in_modes_list
rulein_modes_list 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIn_modes_listAccess().getGroup()); }
(rule__In_modes_list__Group__0)
{ after(grammarAccess.getIn_modes_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelocal_declaration
entryRulelocal_declaration 
:
{ before(grammarAccess.getLocal_declarationRule()); }
	 rulelocal_declaration
{ after(grammarAccess.getLocal_declarationRule()); } 
	 EOF 
;

// Rule local_declaration
rulelocal_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLocal_declarationAccess().getGroup()); }
(rule__Local_declaration__Group__0)
{ after(grammarAccess.getLocal_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletheorem_statement
entryRuletheorem_statement 
:
{ before(grammarAccess.getTheorem_statementRule()); }
	 ruletheorem_statement
{ after(grammarAccess.getTheorem_statementRule()); } 
	 EOF 
;

// Rule theorem_statement
ruletheorem_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTheorem_statementAccess().getStatementAssignment()); }
(rule__Theorem_statement__StatementAssignment)
{ after(grammarAccess.getTheorem_statementAccess().getStatementAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_expression
entryRuletype_expression 
:
{ before(grammarAccess.getType_expressionRule()); }
	 ruletype_expression
{ after(grammarAccess.getType_expressionRule()); } 
	 EOF 
;

// Rule type_expression
ruletype_expression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getType_expressionAccess().getAlternatives()); }
(rule__Type_expression__Alternatives)
{ after(grammarAccess.getType_expressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebasic_type
entryRulebasic_type 
:
{ before(grammarAccess.getBasic_typeRule()); }
	 rulebasic_type
{ after(grammarAccess.getBasic_typeRule()); } 
	 EOF 
;

// Rule basic_type
rulebasic_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBasic_typeAccess().getAlternatives()); }
(rule__Basic_type__Alternatives)
{ after(grammarAccess.getBasic_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedFunctionType
entryRuleUnnamedFunctionType 
:
{ before(grammarAccess.getUnnamedFunctionTypeRule()); }
	 ruleUnnamedFunctionType
{ after(grammarAccess.getUnnamedFunctionTypeRule()); } 
	 EOF 
;

// Rule UnnamedFunctionType
ruleUnnamedFunctionType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getGroup()); }
(rule__UnnamedFunctionType__Group__0)
{ after(grammarAccess.getUnnamedFunctionTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedBooleanType
entryRuleUnnamedBooleanType 
:
{ before(grammarAccess.getUnnamedBooleanTypeRule()); }
	 ruleUnnamedBooleanType
{ after(grammarAccess.getUnnamedBooleanTypeRule()); } 
	 EOF 
;

// Rule UnnamedBooleanType
ruleUnnamedBooleanType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedBooleanTypeAccess().getGroup()); }
(rule__UnnamedBooleanType__Group__0)
{ after(grammarAccess.getUnnamedBooleanTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedStringType
entryRuleUnnamedStringType 
:
{ before(grammarAccess.getUnnamedStringTypeRule()); }
	 ruleUnnamedStringType
{ after(grammarAccess.getUnnamedStringTypeRule()); } 
	 EOF 
;

// Rule UnnamedStringType
ruleUnnamedStringType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedStringTypeAccess().getGroup()); }
(rule__UnnamedStringType__Group__0)
{ after(grammarAccess.getUnnamedStringTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedEnumerationType
entryRuleUnnamedEnumerationType 
:
{ before(grammarAccess.getUnnamedEnumerationTypeRule()); }
	 ruleUnnamedEnumerationType
{ after(grammarAccess.getUnnamedEnumerationTypeRule()); } 
	 EOF 
;

// Rule UnnamedEnumerationType
ruleUnnamedEnumerationType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getGroup()); }
(rule__UnnamedEnumerationType__Group__0)
{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral 
:
{ before(grammarAccess.getEnumerationLiteralRule()); }
	 ruleEnumerationLiteral
{ after(grammarAccess.getEnumerationLiteralRule()); } 
	 EOF 
;

// Rule EnumerationLiteral
ruleEnumerationLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getEnumerationLiteralAccess().getNameAssignment()); }
(rule__EnumerationLiteral__NameAssignment)
{ after(grammarAccess.getEnumerationLiteralAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedUnitsType
entryRuleUnnamedUnitsType 
:
{ before(grammarAccess.getUnnamedUnitsTypeRule()); }
	 ruleUnnamedUnitsType
{ after(grammarAccess.getUnnamedUnitsTypeRule()); } 
	 EOF 
;

// Rule UnnamedUnitsType
ruleUnnamedUnitsType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getGroup()); }
(rule__UnnamedUnitsType__Group__0)
{ after(grammarAccess.getUnnamedUnitsTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitLiteral
entryRuleUnitLiteral 
:
{ before(grammarAccess.getUnitLiteralRule()); }
	 ruleUnitLiteral
{ after(grammarAccess.getUnitLiteralRule()); } 
	 EOF 
;

// Rule UnitLiteral
ruleUnitLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnitLiteralAccess().getNameAssignment()); }
(rule__UnitLiteral__NameAssignment)
{ after(grammarAccess.getUnitLiteralAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitLiteralConversion
entryRuleUnitLiteralConversion 
:
{ before(grammarAccess.getUnitLiteralConversionRule()); }
	 ruleUnitLiteralConversion
{ after(grammarAccess.getUnitLiteralConversionRule()); } 
	 EOF 
;

// Rule UnitLiteralConversion
ruleUnitLiteralConversion 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getGroup()); }
(rule__UnitLiteralConversion__Group__0)
{ after(grammarAccess.getUnitLiteralConversionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberValue
entryRuleNumberValue 
:
{ before(grammarAccess.getNumberValueRule()); }
	 ruleNumberValue
{ after(grammarAccess.getNumberValueRule()); } 
	 EOF 
;

// Rule NumberValue
ruleNumberValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumberValueAccess().getAlternatives()); }
(rule__NumberValue__Alternatives)
{ after(grammarAccess.getNumberValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLit
entryRuleRealLit 
:
{ before(grammarAccess.getRealLitRule()); }
	 ruleRealLit
{ after(grammarAccess.getRealLitRule()); } 
	 EOF 
;

// Rule RealLit
ruleRealLit 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRealLitAccess().getValueAssignment()); }
(rule__RealLit__ValueAssignment)
{ after(grammarAccess.getRealLitAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLit
entryRuleIntegerLit 
:
{ before(grammarAccess.getIntegerLitRule()); }
	 ruleIntegerLit
{ after(grammarAccess.getIntegerLitRule()); } 
	 EOF 
;

// Rule IntegerLit
ruleIntegerLit 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegerLitAccess().getValueAssignment()); }
(rule__IntegerLit__ValueAssignment)
{ after(grammarAccess.getIntegerLitAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedInt
entryRuleSignedInt 
:
{ before(grammarAccess.getSignedIntRule()); }
	 ruleSignedInt
{ after(grammarAccess.getSignedIntRule()); } 
	 EOF 
;

// Rule SignedInt
ruleSignedInt 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedIntAccess().getGroup()); }
(rule__SignedInt__Group__0)
{ after(grammarAccess.getSignedIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedReal
entryRuleSignedReal 
:
{ before(grammarAccess.getSignedRealRule()); }
	 ruleSignedReal
{ after(grammarAccess.getSignedRealRule()); } 
	 EOF 
;

// Rule SignedReal
ruleSignedReal 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedRealAccess().getGroup()); }
(rule__SignedReal__Group__0)
{ after(grammarAccess.getSignedRealAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedIntegerType
entryRuleUnnamedIntegerType 
:
{ before(grammarAccess.getUnnamedIntegerTypeRule()); }
	 ruleUnnamedIntegerType
{ after(grammarAccess.getUnnamedIntegerTypeRule()); } 
	 EOF 
;

// Rule UnnamedIntegerType
ruleUnnamedIntegerType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getGroup()); }
(rule__UnnamedIntegerType__Group__0)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerRange
entryRuleIntegerRange 
:
{ before(grammarAccess.getIntegerRangeRule()); }
	 ruleIntegerRange
{ after(grammarAccess.getIntegerRangeRule()); } 
	 EOF 
;

// Rule IntegerRange
ruleIntegerRange 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegerRangeAccess().getGroup()); }
(rule__IntegerRange__Group__0)
{ after(grammarAccess.getIntegerRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm 
:
{ before(grammarAccess.getIntegerTermRule()); }
	 ruleIntegerTerm
{ after(grammarAccess.getIntegerTermRule()); } 
	 EOF 
;

// Rule IntegerTerm
ruleIntegerTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegerTermAccess().getGroup()); }
(rule__IntegerTerm__Group__0)
{ after(grammarAccess.getIntegerTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedConstant
entryRuleSignedConstant 
:
{ before(grammarAccess.getSignedConstantRule()); }
	 ruleSignedConstant
{ after(grammarAccess.getSignedConstantRule()); } 
	 EOF 
;

// Rule SignedConstant
ruleSignedConstant 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedConstantAccess().getGroup()); }
(rule__SignedConstant__Group__0)
{ after(grammarAccess.getSignedConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlusMinus
entryRulePlusMinus 
:
{ before(grammarAccess.getPlusMinusRule()); }
	 rulePlusMinus
{ after(grammarAccess.getPlusMinusRule()); } 
	 EOF 
;

// Rule PlusMinus
rulePlusMinus 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPlusMinusAccess().getAlternatives()); }
(rule__PlusMinus__Alternatives)
{ after(grammarAccess.getPlusMinusAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantValue
entryRuleConstantValue 
:
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstantValueAccess().getNamedValueAssignment()); }
(rule__ConstantValue__NamedValueAssignment)
{ after(grammarAccess.getConstantValueAccess().getNamedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedRealType
entryRuleUnnamedRealType 
:
{ before(grammarAccess.getUnnamedRealTypeRule()); }
	 ruleUnnamedRealType
{ after(grammarAccess.getUnnamedRealTypeRule()); } 
	 EOF 
;

// Rule UnnamedRealType
ruleUnnamedRealType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getGroup()); }
(rule__UnnamedRealType__Group__0)
{ after(grammarAccess.getUnnamedRealTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealRange
entryRuleRealRange 
:
{ before(grammarAccess.getRealRangeRule()); }
	 ruleRealRange
{ after(grammarAccess.getRealRangeRule()); } 
	 EOF 
;

// Rule RealRange
ruleRealRange 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRealRangeAccess().getGroup()); }
(rule__RealRange__Group__0)
{ after(grammarAccess.getRealRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealTerm
entryRuleRealTerm 
:
{ before(grammarAccess.getRealTermRule()); }
	 ruleRealTerm
{ after(grammarAccess.getRealTermRule()); } 
	 EOF 
;

// Rule RealTerm
ruleRealTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRealTermAccess().getGroup()); }
(rule__RealTerm__Group__0)
{ after(grammarAccess.getRealTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedRangeType
entryRuleUnnamedRangeType 
:
{ before(grammarAccess.getUnnamedRangeTypeRule()); }
	 ruleUnnamedRangeType
{ after(grammarAccess.getUnnamedRangeTypeRule()); } 
	 EOF 
;

// Rule UnnamedRangeType
ruleUnnamedRangeType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getGroup()); }
(rule__UnnamedRangeType__Group__0)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedClassifierType
entryRuleUnnamedClassifierType 
:
{ before(grammarAccess.getUnnamedClassifierTypeRule()); }
	 ruleUnnamedClassifierType
{ after(grammarAccess.getUnnamedClassifierTypeRule()); } 
	 EOF 
;

// Rule UnnamedClassifierType
ruleUnnamedClassifierType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getGroup()); }
(rule__UnnamedClassifierType__Group__0)
{ after(grammarAccess.getUnnamedClassifierTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnnamedReferenceType
entryRuleUnnamedReferenceType 
:
{ before(grammarAccess.getUnnamedReferenceTypeRule()); }
	 ruleUnnamedReferenceType
{ after(grammarAccess.getUnnamedReferenceTypeRule()); } 
	 EOF 
;

// Rule UnnamedReferenceType
ruleUnnamedReferenceType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getGroup()); }
(rule__UnnamedReferenceType__Group__0)
{ after(grammarAccess.getUnnamedReferenceTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQMReference
entryRuleQMReference 
:
{ before(grammarAccess.getQMReferenceRule()); }
	 ruleQMReference
{ after(grammarAccess.getQMReferenceRule()); } 
	 EOF 
;

// Rule QMReference
ruleQMReference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQMReferenceAccess().getGroup()); }
(rule__QMReference__Group__0)
{ after(grammarAccess.getQMReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulecomposite_type
entryRulecomposite_type 
:
{ before(grammarAccess.getComposite_typeRule()); }
	 rulecomposite_type
{ after(grammarAccess.getComposite_typeRule()); } 
	 EOF 
;

// Rule composite_type
rulecomposite_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComposite_typeAccess().getAlternatives()); }
(rule__Composite_type__Alternatives)
{ after(grammarAccess.getComposite_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleset_type
entryRuleset_type 
:
{ before(grammarAccess.getSet_typeRule()); }
	 ruleset_type
{ after(grammarAccess.getSet_typeRule()); } 
	 EOF 
;

// Rule set_type
ruleset_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSet_typeAccess().getGroup()); }
(rule__Set_type__Group__0)
{ after(grammarAccess.getSet_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelist_type
entryRulelist_type 
:
{ before(grammarAccess.getList_typeRule()); }
	 rulelist_type
{ after(grammarAccess.getList_typeRule()); } 
	 EOF 
;

// Rule list_type
rulelist_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getList_typeAccess().getGroup()); }
(rule__List_type__Group__0)
{ after(grammarAccess.getList_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemap_type
entryRulemap_type 
:
{ before(grammarAccess.getMap_typeRule()); }
	 rulemap_type
{ after(grammarAccess.getMap_typeRule()); } 
	 EOF 
;

// Rule map_type
rulemap_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getMap_typeAccess().getGroup()); }
(rule__Map_type__Group__0)
{ after(grammarAccess.getMap_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerecord_type
entryRulerecord_type 
:
{ before(grammarAccess.getRecord_typeRule()); }
	 rulerecord_type
{ after(grammarAccess.getRecord_typeRule()); } 
	 EOF 
;

// Rule record_type
rulerecord_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRecord_typeAccess().getGroup()); }
(rule__Record_type__Group__0)
{ after(grammarAccess.getRecord_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunion_type
entryRuleunion_type 
:
{ before(grammarAccess.getUnion_typeRule()); }
	 ruleunion_type
{ after(grammarAccess.getUnion_typeRule()); } 
	 EOF 
;

// Rule union_type
ruleunion_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnion_typeAccess().getGroup()); }
(rule__Union_type__Group__0)
{ after(grammarAccess.getUnion_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleid_type_pair
entryRuleid_type_pair 
:
{ before(grammarAccess.getId_type_pairRule()); }
	 ruleid_type_pair
{ after(grammarAccess.getId_type_pairRule()); } 
	 EOF 
;

// Rule id_type_pair
ruleid_type_pair 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getId_type_pairAccess().getGroup()); }
(rule__Id_type_pair__Group__0)
{ after(grammarAccess.getId_type_pairAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleelement_type
entryRuleelement_type 
:
{ before(grammarAccess.getElement_typeRule()); }
	 ruleelement_type
{ after(grammarAccess.getElement_typeRule()); } 
	 EOF 
;

// Rule element_type
ruleelement_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getElement_typeAccess().getAlternatives()); }
(rule__Element_type__Alternatives)
{ after(grammarAccess.getElement_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_classifiers
entryRulet_classifiers 
:
{ before(grammarAccess.getT_classifiersRule()); }
	 rulet_classifiers
{ after(grammarAccess.getT_classifiersRule()); } 
	 EOF 
;

// Rule t_classifiers
rulet_classifiers 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_classifiersAccess().getAlternatives()); }
(rule__T_classifiers__Alternatives)
{ after(grammarAccess.getT_classifiersAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_classifier_subtypes
entryRulet_classifier_subtypes 
:
{ before(grammarAccess.getT_classifier_subtypesRule()); }
	 rulet_classifier_subtypes
{ after(grammarAccess.getT_classifier_subtypesRule()); } 
	 EOF 
;

// Rule t_classifier_subtypes
rulet_classifier_subtypes 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getAlternatives()); }
(rule__T_classifier_subtypes__Alternatives)
{ after(grammarAccess.getT_classifier_subtypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulet_named_references
entryRulet_named_references 
:
{ before(grammarAccess.getT_named_referencesRule()); }
	 rulet_named_references
{ after(grammarAccess.getT_named_referencesRule()); } 
	 EOF 
;

// Rule t_named_references
rulet_named_references 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getT_named_referencesAccess().getT_nrefAssignment()); }
(rule__T_named_references__T_nrefAssignment)
{ after(grammarAccess.getT_named_referencesAccess().getT_nrefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQCREF
entryRuleFQCREF 
:
{ before(grammarAccess.getFQCREFRule()); }
	 ruleFQCREF
{ after(grammarAccess.getFQCREFRule()); } 
	 EOF 
;

// Rule FQCREF
ruleFQCREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFQCREFAccess().getGroup()); }
(rule__FQCREF__Group__0)
{ after(grammarAccess.getFQCREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQCREF
entryRuleQCREF 
:
{ before(grammarAccess.getQCREFRule()); }
	 ruleQCREF
{ after(grammarAccess.getQCREFRule()); } 
	 EOF 
;

// Rule QCREF
ruleQCREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQCREFAccess().getGroup()); }
(rule__QCREF__Group__0)
{ after(grammarAccess.getQCREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQPREF
entryRuleQPREF 
:
{ before(grammarAccess.getQPREFRule()); }
	 ruleQPREF
{ after(grammarAccess.getQPREFRule()); } 
	 EOF 
;

// Rule QPREF
ruleQPREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQPREFAccess().getGroup()); }
(rule__QPREF__Group__0)
{ after(grammarAccess.getQPREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression
entryRuleXExpression 
:
{ before(grammarAccess.getXExpressionRule()); }
	 ruleXExpression
{ after(grammarAccess.getXExpressionRule()); } 
	 EOF 
;

// Rule XExpression
ruleXExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); }
	ruleXAssignment
{ after(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAssignment
entryRuleXAssignment 
:
{ before(grammarAccess.getXAssignmentRule()); }
	 ruleXAssignment
{ after(grammarAccess.getXAssignmentRule()); } 
	 EOF 
;

// Rule XAssignment
ruleXAssignment 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXAssignmentAccess().getAlternatives()); }
(rule__XAssignment__Alternatives)
{ after(grammarAccess.getXAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign 
:
{ before(grammarAccess.getOpSingleAssignRule()); }
	 ruleOpSingleAssign
{ after(grammarAccess.getOpSingleAssignRule()); } 
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }

	EqualsSign 

{ after(grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign 
:
{ before(grammarAccess.getOpMultiAssignRule()); }
	 ruleOpMultiAssign
{ after(grammarAccess.getOpMultiAssignRule()); } 
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpMultiAssignAccess().getAlternatives()); }
(rule__OpMultiAssign__Alternatives)
{ after(grammarAccess.getOpMultiAssignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXOrExpression
entryRuleXOrExpression 
:
{ before(grammarAccess.getXOrExpressionRule()); }
	 ruleXOrExpression
{ after(grammarAccess.getXOrExpressionRule()); } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup()); }
(rule__XOrExpression__Group__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOr
entryRuleOpOr 
:
{ before(grammarAccess.getOpOrRule()); }
	 ruleOpOr
{ after(grammarAccess.getOpOrRule()); } 
	 EOF 
;

// Rule OpOr
ruleOpOr 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }

	VerticalLineVerticalLine 

{ after(grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAndExpression
entryRuleXAndExpression 
:
{ before(grammarAccess.getXAndExpressionRule()); }
	 ruleXAndExpression
{ after(grammarAccess.getXAndExpressionRule()); } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup()); }
(rule__XAndExpression__Group__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAnd
entryRuleOpAnd 
:
{ before(grammarAccess.getOpAndRule()); }
	 ruleOpAnd
{ after(grammarAccess.getOpAndRule()); } 
	 EOF 
;

// Rule OpAnd
ruleOpAnd 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }

	AmpersandAmpersand 

{ after(grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression 
:
{ before(grammarAccess.getXEqualityExpressionRule()); }
	 ruleXEqualityExpression
{ after(grammarAccess.getXEqualityExpressionRule()); } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup()); }
(rule__XEqualityExpression__Group__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpEquality
entryRuleOpEquality 
:
{ before(grammarAccess.getOpEqualityRule()); }
	 ruleOpEquality
{ after(grammarAccess.getOpEqualityRule()); } 
	 EOF 
;

// Rule OpEquality
ruleOpEquality 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpEqualityAccess().getAlternatives()); }
(rule__OpEquality__Alternatives)
{ after(grammarAccess.getOpEqualityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression 
:
{ before(grammarAccess.getXRelationalExpressionRule()); }
	 ruleXRelationalExpression
{ after(grammarAccess.getXRelationalExpressionRule()); } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup()); }
(rule__XRelationalExpression__Group__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpCompare
entryRuleOpCompare 
:
{ before(grammarAccess.getOpCompareRule()); }
	 ruleOpCompare
{ after(grammarAccess.getOpCompareRule()); } 
	 EOF 
;

// Rule OpCompare
ruleOpCompare 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpCompareAccess().getAlternatives()); }
(rule__OpCompare__Alternatives)
{ after(grammarAccess.getOpCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression 
:
{ before(grammarAccess.getXOtherOperatorExpressionRule()); }
	 ruleXOtherOperatorExpression
{ after(grammarAccess.getXOtherOperatorExpressionRule()); } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup()); }
(rule__XOtherOperatorExpression__Group__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOther
entryRuleOpOther 
:
{ before(grammarAccess.getOpOtherRule()); }
	 ruleOpOther
{ after(grammarAccess.getOpOtherRule()); } 
	 EOF 
;

// Rule OpOther
ruleOpOther 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives()); }
(rule__OpOther__Alternatives)
{ after(grammarAccess.getOpOtherAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression 
:
{ before(grammarAccess.getXAdditiveExpressionRule()); }
	 ruleXAdditiveExpression
{ after(grammarAccess.getXAdditiveExpressionRule()); } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup()); }
(rule__XAdditiveExpression__Group__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAdd
entryRuleOpAdd 
:
{ before(grammarAccess.getOpAddRule()); }
	 ruleOpAdd
{ after(grammarAccess.getOpAddRule()); } 
	 EOF 
;

// Rule OpAdd
ruleOpAdd 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpAddAccess().getAlternatives()); }
(rule__OpAdd__Alternatives)
{ after(grammarAccess.getOpAddAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression 
:
{ before(grammarAccess.getXMultiplicativeExpressionRule()); }
	 ruleXMultiplicativeExpression
{ after(grammarAccess.getXMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup()); }
(rule__XMultiplicativeExpression__Group__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMulti
entryRuleOpMulti 
:
{ before(grammarAccess.getOpMultiRule()); }
	 ruleOpMulti
{ after(grammarAccess.getOpMultiRule()); } 
	 EOF 
;

// Rule OpMulti
ruleOpMulti 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpMultiAccess().getAlternatives()); }
(rule__OpMulti__Alternatives)
{ after(grammarAccess.getOpMultiAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation 
:
{ before(grammarAccess.getXUnaryOperationRule()); }
	 ruleXUnaryOperation
{ after(grammarAccess.getXUnaryOperationRule()); } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXUnaryOperationAccess().getAlternatives()); }
(rule__XUnaryOperation__Alternatives)
{ after(grammarAccess.getXUnaryOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpUnary
entryRuleOpUnary 
:
{ before(grammarAccess.getOpUnaryRule()); }
	 ruleOpUnary
{ after(grammarAccess.getOpUnaryRule()); } 
	 EOF 
;

// Rule OpUnary
ruleOpUnary 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpUnaryAccess().getAlternatives()); }
(rule__OpUnary__Alternatives)
{ after(grammarAccess.getOpUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression 
:
{ before(grammarAccess.getXCastedExpressionRule()); }
	 ruleXCastedExpression
{ after(grammarAccess.getXCastedExpressionRule()); } 
	 EOF 
;

// Rule XCastedExpression
ruleXCastedExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup()); }
(rule__XCastedExpression__Group__0)
{ after(grammarAccess.getXCastedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXPostfixOperation
entryRuleXPostfixOperation 
:
{ before(grammarAccess.getXPostfixOperationRule()); }
	 ruleXPostfixOperation
{ after(grammarAccess.getXPostfixOperationRule()); } 
	 EOF 
;

// Rule XPostfixOperation
ruleXPostfixOperation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXPostfixOperationAccess().getGroup()); }
(rule__XPostfixOperation__Group__0)
{ after(grammarAccess.getXPostfixOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpPostfix
entryRuleOpPostfix 
:
{ before(grammarAccess.getOpPostfixRule()); }
	 ruleOpPostfix
{ after(grammarAccess.getOpPostfixRule()); } 
	 EOF 
;

// Rule OpPostfix
ruleOpPostfix 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOpPostfixAccess().getAlternatives()); }
(rule__OpPostfix__Alternatives)
{ after(grammarAccess.getOpPostfixAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall 
:
{ before(grammarAccess.getXMemberFeatureCallRule()); }
	 ruleXMemberFeatureCall
{ after(grammarAccess.getXMemberFeatureCallRule()); } 
	 EOF 
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup()); }
(rule__XMemberFeatureCall__Group__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression 
:
{ before(grammarAccess.getXPrimaryExpressionRule()); }
	 ruleXPrimaryExpression
{ after(grammarAccess.getXPrimaryExpressionRule()); } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
(rule__XPrimaryExpression__Alternatives)
{ after(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCollectionLiteral
entryRuleXCollectionLiteral 
:
{ before(grammarAccess.getXCollectionLiteralRule()); }
	 ruleXCollectionLiteral
{ after(grammarAccess.getXCollectionLiteralRule()); } 
	 EOF 
;

// Rule XCollectionLiteral
ruleXCollectionLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXCollectionLiteralAccess().getAlternatives()); }
(rule__XCollectionLiteral__Alternatives)
{ after(grammarAccess.getXCollectionLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSetLiteral
entryRuleXSetLiteral 
:
{ before(grammarAccess.getXSetLiteralRule()); }
	 ruleXSetLiteral
{ after(grammarAccess.getXSetLiteralRule()); } 
	 EOF 
;

// Rule XSetLiteral
ruleXSetLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup()); }
(rule__XSetLiteral__Group__0)
{ after(grammarAccess.getXSetLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXListLiteral
entryRuleXListLiteral 
:
{ before(grammarAccess.getXListLiteralRule()); }
	 ruleXListLiteral
{ after(grammarAccess.getXListLiteralRule()); } 
	 EOF 
;

// Rule XListLiteral
ruleXListLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXListLiteralAccess().getGroup()); }
(rule__XListLiteral__Group__0)
{ after(grammarAccess.getXListLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXClosure
entryRuleXClosure 
:
{ before(grammarAccess.getXClosureRule()); }
	 ruleXClosure
{ after(grammarAccess.getXClosureRule()); } 
	 EOF 
;

// Rule XClosure
ruleXClosure 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXClosureAccess().getGroup()); }
(rule__XClosure__Group__0)
{ after(grammarAccess.getXClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure 
:
{ before(grammarAccess.getXExpressionInClosureRule()); }
	 ruleXExpressionInClosure
{ after(grammarAccess.getXExpressionInClosureRule()); } 
	 EOF 
;

// Rule XExpressionInClosure
ruleXExpressionInClosure 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXExpressionInClosureAccess().getGroup()); }
(rule__XExpressionInClosure__Group__0)
{ after(grammarAccess.getXExpressionInClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXShortClosure
entryRuleXShortClosure 
:
{ before(grammarAccess.getXShortClosureRule()); }
	 ruleXShortClosure
{ after(grammarAccess.getXShortClosureRule()); } 
	 EOF 
;

// Rule XShortClosure
ruleXShortClosure 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXShortClosureAccess().getGroup()); }
(rule__XShortClosure__Group__0)
{ after(grammarAccess.getXShortClosureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression 
:
{ before(grammarAccess.getXParenthesizedExpressionRule()); }
	 ruleXParenthesizedExpression
{ after(grammarAccess.getXParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
(rule__XParenthesizedExpression__Group__0)
{ after(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXIfExpression
entryRuleXIfExpression 
:
{ before(grammarAccess.getXIfExpressionRule()); }
	 ruleXIfExpression
{ after(grammarAccess.getXIfExpressionRule()); } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup()); }
(rule__XIfExpression__Group__0)
{ after(grammarAccess.getXIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression 
:
{ before(grammarAccess.getXSwitchExpressionRule()); }
	 ruleXSwitchExpression
{ after(grammarAccess.getXSwitchExpressionRule()); } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup()); }
(rule__XSwitchExpression__Group__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCasePart
entryRuleXCasePart 
:
{ before(grammarAccess.getXCasePartRule()); }
	 ruleXCasePart
{ after(grammarAccess.getXCasePartRule()); } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXCasePartAccess().getGroup()); }
(rule__XCasePart__Group__0)
{ after(grammarAccess.getXCasePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression 
:
{ before(grammarAccess.getXForLoopExpressionRule()); }
	 ruleXForLoopExpression
{ after(grammarAccess.getXForLoopExpressionRule()); } 
	 EOF 
;

// Rule XForLoopExpression
ruleXForLoopExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXForLoopExpressionAccess().getGroup()); }
(rule__XForLoopExpression__Group__0)
{ after(grammarAccess.getXForLoopExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXBasicForLoopExpression
entryRuleXBasicForLoopExpression 
:
{ before(grammarAccess.getXBasicForLoopExpressionRule()); }
	 ruleXBasicForLoopExpression
{ after(grammarAccess.getXBasicForLoopExpressionRule()); } 
	 EOF 
;

// Rule XBasicForLoopExpression
ruleXBasicForLoopExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getGroup()); }
(rule__XBasicForLoopExpression__Group__0)
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression 
:
{ before(grammarAccess.getXWhileExpressionRule()); }
	 ruleXWhileExpression
{ after(grammarAccess.getXWhileExpressionRule()); } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXWhileExpressionAccess().getGroup()); }
(rule__XWhileExpression__Group__0)
{ after(grammarAccess.getXWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression 
:
{ before(grammarAccess.getXDoWhileExpressionRule()); }
	 ruleXDoWhileExpression
{ after(grammarAccess.getXDoWhileExpressionRule()); } 
	 EOF 
;

// Rule XDoWhileExpression
ruleXDoWhileExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getGroup()); }
(rule__XDoWhileExpression__Group__0)
{ after(grammarAccess.getXDoWhileExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression 
:
{ before(grammarAccess.getXBlockExpressionRule()); }
	 ruleXBlockExpression
{ after(grammarAccess.getXBlockExpressionRule()); } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXBlockExpressionAccess().getGroup()); }
(rule__XBlockExpression__Group__0)
{ after(grammarAccess.getXBlockExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpressionOrVarDeclaration
entryRuleXExpressionOrVarDeclaration 
:
{ before(grammarAccess.getXExpressionOrVarDeclarationRule()); }
	 ruleXExpressionOrVarDeclaration
{ after(grammarAccess.getXExpressionOrVarDeclarationRule()); } 
	 EOF 
;

// Rule XExpressionOrVarDeclaration
ruleXExpressionOrVarDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXExpressionOrVarDeclarationAccess().getAlternatives()); }
(rule__XExpressionOrVarDeclaration__Alternatives)
{ after(grammarAccess.getXExpressionOrVarDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration 
:
{ before(grammarAccess.getXVariableDeclarationRule()); }
	 ruleXVariableDeclaration
{ after(grammarAccess.getXVariableDeclarationRule()); } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup()); }
(rule__XVariableDeclaration__Group__0)
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter 
:
{ before(grammarAccess.getJvmFormalParameterRule()); }
	 ruleJvmFormalParameter
{ after(grammarAccess.getJvmFormalParameterRule()); } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getJvmFormalParameterAccess().getGroup()); }
(rule__JvmFormalParameter__Group__0)
{ after(grammarAccess.getJvmFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter 
:
{ before(grammarAccess.getFullJvmFormalParameterRule()); }
	 ruleFullJvmFormalParameter
{ after(grammarAccess.getFullJvmFormalParameterRule()); } 
	 EOF 
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getGroup()); }
(rule__FullJvmFormalParameter__Group__0)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall 
:
{ before(grammarAccess.getXFeatureCallRule()); }
	 ruleXFeatureCall
{ after(grammarAccess.getXFeatureCallRule()); } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup()); }
(rule__XFeatureCall__Group__0)
{ after(grammarAccess.getXFeatureCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureCallID
entryRuleFeatureCallID 
:
{ before(grammarAccess.getFeatureCallIDRule()); }
	 ruleFeatureCallID
{ after(grammarAccess.getFeatureCallIDRule()); } 
	 EOF 
;

// Rule FeatureCallID
ruleFeatureCallID 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFeatureCallIDAccess().getAlternatives()); }
(rule__FeatureCallID__Alternatives)
{ after(grammarAccess.getFeatureCallIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper 
:
{ before(grammarAccess.getIdOrSuperRule()); }
	 ruleIdOrSuper
{ after(grammarAccess.getIdOrSuperRule()); } 
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIdOrSuperAccess().getAlternatives()); }
(rule__IdOrSuper__Alternatives)
{ after(grammarAccess.getIdOrSuperAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall 
:
{ before(grammarAccess.getXConstructorCallRule()); }
	 ruleXConstructorCall
{ after(grammarAccess.getXConstructorCallRule()); } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup()); }
(rule__XConstructorCall__Group__0)
{ after(grammarAccess.getXConstructorCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral 
:
{ before(grammarAccess.getXBooleanLiteralRule()); }
	 ruleXBooleanLiteral
{ after(grammarAccess.getXBooleanLiteralRule()); } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXBooleanLiteralAccess().getGroup()); }
(rule__XBooleanLiteral__Group__0)
{ after(grammarAccess.getXBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral 
:
{ before(grammarAccess.getXNullLiteralRule()); }
	 ruleXNullLiteral
{ after(grammarAccess.getXNullLiteralRule()); } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXNullLiteralAccess().getGroup()); }
(rule__XNullLiteral__Group__0)
{ after(grammarAccess.getXNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral 
:
{ before(grammarAccess.getXNumberLiteralRule()); }
	 ruleXNumberLiteral
{ after(grammarAccess.getXNumberLiteralRule()); } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXNumberLiteralAccess().getGroup()); }
(rule__XNumberLiteral__Group__0)
{ after(grammarAccess.getXNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral 
:
{ before(grammarAccess.getXStringLiteralRule()); }
	 ruleXStringLiteral
{ after(grammarAccess.getXStringLiteralRule()); } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXStringLiteralAccess().getGroup()); }
(rule__XStringLiteral__Group__0)
{ after(grammarAccess.getXStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral 
:
{ before(grammarAccess.getXTypeLiteralRule()); }
	 ruleXTypeLiteral
{ after(grammarAccess.getXTypeLiteralRule()); } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXTypeLiteralAccess().getGroup()); }
(rule__XTypeLiteral__Group__0)
{ after(grammarAccess.getXTypeLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression 
:
{ before(grammarAccess.getXThrowExpressionRule()); }
	 ruleXThrowExpression
{ after(grammarAccess.getXThrowExpressionRule()); } 
	 EOF 
;

// Rule XThrowExpression
ruleXThrowExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXThrowExpressionAccess().getGroup()); }
(rule__XThrowExpression__Group__0)
{ after(grammarAccess.getXThrowExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression 
:
{ before(grammarAccess.getXReturnExpressionRule()); }
	 ruleXReturnExpression
{ after(grammarAccess.getXReturnExpressionRule()); } 
	 EOF 
;

// Rule XReturnExpression
ruleXReturnExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXReturnExpressionAccess().getGroup()); }
(rule__XReturnExpression__Group__0)
{ after(grammarAccess.getXReturnExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression 
:
{ before(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	 ruleXTryCatchFinallyExpression
{ after(grammarAccess.getXTryCatchFinallyExpressionRule()); } 
	 EOF 
;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup()); }
(rule__XTryCatchFinallyExpression__Group__0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSynchronizedExpression
entryRuleXSynchronizedExpression 
:
{ before(grammarAccess.getXSynchronizedExpressionRule()); }
	 ruleXSynchronizedExpression
{ after(grammarAccess.getXSynchronizedExpressionRule()); } 
	 EOF 
;

// Rule XSynchronizedExpression
ruleXSynchronizedExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getGroup()); }
(rule__XSynchronizedExpression__Group__0)
{ after(grammarAccess.getXSynchronizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCatchClause
entryRuleXCatchClause 
:
{ before(grammarAccess.getXCatchClauseRule()); }
	 ruleXCatchClause
{ after(grammarAccess.getXCatchClauseRule()); } 
	 EOF 
;

// Rule XCatchClause
ruleXCatchClause 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXCatchClauseAccess().getGroup()); }
(rule__XCatchClause__Group__0)
{ after(grammarAccess.getXCatchClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}





// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference 
:
{ before(grammarAccess.getJvmTypeReferenceRule()); }
	 ruleJvmTypeReference
{ after(grammarAccess.getJvmTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getAlternatives()); }
(rule__JvmTypeReference__Alternatives)
{ after(grammarAccess.getJvmTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayBrackets
entryRuleArrayBrackets 
:
{ before(grammarAccess.getArrayBracketsRule()); }
	 ruleArrayBrackets
{ after(grammarAccess.getArrayBracketsRule()); } 
	 EOF 
;

// Rule ArrayBrackets
ruleArrayBrackets 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArrayBracketsAccess().getGroup()); }
(rule__ArrayBrackets__Group__0)
{ after(grammarAccess.getArrayBracketsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef 
:
{ before(grammarAccess.getXFunctionTypeRefRule()); }
	 ruleXFunctionTypeRef
{ after(grammarAccess.getXFunctionTypeRefRule()); } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
(rule__XFunctionTypeRef__Group__0)
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference 
:
{ before(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 ruleJvmParameterizedTypeReference
{ after(grammarAccess.getJvmParameterizedTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup()); }
(rule__JvmParameterizedTypeReference__Group__0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference 
:
{ before(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 ruleJvmArgumentTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives()); }
(rule__JvmArgumentTypeReference__Alternatives)
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference 
:
{ before(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 ruleJvmWildcardTypeReference
{ after(grammarAccess.getJvmWildcardTypeReferenceRule()); } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup()); }
(rule__JvmWildcardTypeReference__Group__0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound 
:
{ before(grammarAccess.getJvmUpperBoundRule()); }
	 ruleJvmUpperBound
{ after(grammarAccess.getJvmUpperBoundRule()); } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getJvmUpperBoundAccess().getGroup()); }
(rule__JvmUpperBound__Group__0)
{ after(grammarAccess.getJvmUpperBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded 
:
{ before(grammarAccess.getJvmUpperBoundAndedRule()); }
	 ruleJvmUpperBoundAnded
{ after(grammarAccess.getJvmUpperBoundAndedRule()); } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getGroup()); }
(rule__JvmUpperBoundAnded__Group__0)
{ after(grammarAccess.getJvmUpperBoundAndedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound 
:
{ before(grammarAccess.getJvmLowerBoundRule()); }
	 ruleJvmLowerBound
{ after(grammarAccess.getJvmLowerBoundRule()); } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getJvmLowerBoundAccess().getGroup()); }
(rule__JvmLowerBound__Group__0)
{ after(grammarAccess.getJvmLowerBoundAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJvmLowerBoundAnded
entryRuleJvmLowerBoundAnded 
:
{ before(grammarAccess.getJvmLowerBoundAndedRule()); }
	 ruleJvmLowerBoundAnded
{ after(grammarAccess.getJvmLowerBoundAndedRule()); } 
	 EOF 
;

// Rule JvmLowerBoundAnded
ruleJvmLowerBoundAnded 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getJvmLowerBoundAndedAccess().getGroup()); }
(rule__JvmLowerBoundAnded__Group__0)
{ after(grammarAccess.getJvmLowerBoundAndedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleXImportDeclaration
entryRuleXImportDeclaration 
:
{ before(grammarAccess.getXImportDeclarationRule()); }
	 ruleXImportDeclaration
{ after(grammarAccess.getXImportDeclarationRule()); } 
	 EOF 
;

// Rule XImportDeclaration
ruleXImportDeclaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getXImportDeclarationAccess().getGroup()); }
(rule__XImportDeclaration__Group__0)
{ after(grammarAccess.getXImportDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameInStaticImport
entryRuleQualifiedNameInStaticImport 
:
{ before(grammarAccess.getQualifiedNameInStaticImportRule()); }
	 ruleQualifiedNameInStaticImport
{ after(grammarAccess.getQualifiedNameInStaticImportRule()); } 
	 EOF 
;

// Rule QualifiedNameInStaticImport
ruleQualifiedNameInStaticImport 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
(
{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
(rule__QualifiedNameInStaticImport__Group__0)
{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
)
(
{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
(rule__QualifiedNameInStaticImport__Group__0)*
{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MCSGrammarRoot__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getLibAssignment_0()); }
(rule__MCSGrammarRoot__LibAssignment_0)
{ after(grammarAccess.getMCSGrammarRootAccess().getLibAssignment_0()); }
)

    |(
{ before(grammarAccess.getMCSGrammarRootAccess().getSubclauseAssignment_1()); }
(rule__MCSGrammarRoot__SubclauseAssignment_1)
{ after(grammarAccess.getMCSGrammarRootAccess().getSubclauseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enforcement_policy__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnforcement_policyAccess().getPackAssignment_0_0()); }
(rule__Enforcement_policy__PackAssignment_0_0)
{ after(grammarAccess.getEnforcement_policyAccess().getPackAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getEnforcement_policyAccess().getClassAssignment_0_1()); }
(rule__Enforcement_policy__ClassAssignment_0_1)
{ after(grammarAccess.getEnforcement_policyAccess().getClassAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getAllAssignment_2_0()); }
(rule__AppliesToClause__AllAssignment_2_0)
{ after(grammarAccess.getAppliesToClauseAccess().getAllAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getAppliesToClauseAccess().getGroup_2_1()); }
(rule__AppliesToClause__Group_2_1__0)
{ after(grammarAccess.getAppliesToClauseAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getGroup_1_0()); }
(rule__ClassifierCategory__Group_1_0__0)
{ after(grammarAccess.getClassifierCategoryAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getClassifierCategoryAccess().getGroup_1_1()); }
(rule__ClassifierCategory__Group_1_1__0)
{ after(grammarAccess.getClassifierCategoryAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentCategory__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentCategoryAccess().getAbstractKeyword_0()); }

	Abstract 

{ after(grammarAccess.getComponentCategoryAccess().getAbstractKeyword_0()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getBusKeyword_1()); }

	Bus 

{ after(grammarAccess.getComponentCategoryAccess().getBusKeyword_1()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getDataKeyword_2()); }

	Data 

{ after(grammarAccess.getComponentCategoryAccess().getDataKeyword_2()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getDeviceKeyword_3()); }

	Device 

{ after(grammarAccess.getComponentCategoryAccess().getDeviceKeyword_3()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getMemoryKeyword_4()); }

	Memory 

{ after(grammarAccess.getComponentCategoryAccess().getMemoryKeyword_4()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getProcessKeyword_5()); }

	Process 

{ after(grammarAccess.getComponentCategoryAccess().getProcessKeyword_5()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getProcessorKeyword_6()); }

	Processor 

{ after(grammarAccess.getComponentCategoryAccess().getProcessorKeyword_6()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getSubprogramKeyword_7()); }

	Subprogram 

{ after(grammarAccess.getComponentCategoryAccess().getSubprogramKeyword_7()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getGroup_8()); }
(rule__ComponentCategory__Group_8__0)
{ after(grammarAccess.getComponentCategoryAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getSystemKeyword_9()); }

	KW_System 

{ after(grammarAccess.getComponentCategoryAccess().getSystemKeyword_9()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getGroup_10()); }
(rule__ComponentCategory__Group_10__0)
{ after(grammarAccess.getComponentCategoryAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getThreadKeyword_11()); }

	Thread 

{ after(grammarAccess.getComponentCategoryAccess().getThreadKeyword_11()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getGroup_12()); }
(rule__ComponentCategory__Group_12__0)
{ after(grammarAccess.getComponentCategoryAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getComponentCategoryAccess().getGroup_13()); }
(rule__ComponentCategory__Group_13__0)
{ after(grammarAccess.getComponentCategoryAccess().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check_statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_statementAccess().getCheck_theoremParserRuleCall_0()); }
	rulecheck_theorem
{ after(grammarAccess.getCheck_statementAccess().getCheck_theoremParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCheck_statementAccess().getCheck_assertionParserRuleCall_1()); }
	rulecheck_assertion
{ after(grammarAccess.getCheck_statementAccess().getCheck_assertionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getGroup_0()); }
(rule__Element_reference__Group_0__0)
{ after(grammarAccess.getElement_referenceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getElement_referenceAccess().getRootAssignment_1()); }
(rule__Element_reference__RootAssignment_1)
{ after(grammarAccess.getElement_referenceAccess().getRootAssignment_1()); }
)

    |(
{ before(grammarAccess.getElement_referenceAccess().getCurrentmodeAssignment_2()); }
(rule__Element_reference__CurrentmodeAssignment_2)
{ after(grammarAccess.getElement_referenceAccess().getCurrentmodeAssignment_2()); }
)

    |(
{ before(grammarAccess.getElement_referenceAccess().getGroup_3()); }
(rule__Element_reference__Group_3__0)
{ after(grammarAccess.getElement_referenceAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getElement_referenceAccess().getGroup_4()); }
(rule__Element_reference__Group_4__0)
{ after(grammarAccess.getElement_referenceAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); }
	ruleXCollectionLiteral
{ after(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); }
(	ruleXClosure)
{ after(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); }
	ruleXBooleanLiteral
{ after(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); }
	ruleXNumberLiteral
{ after(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); }
	ruleXNullLiteral
{ after(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); }
	ruleXStringLiteral
{ after(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); }
	ruleXTypeLiteral
{ after(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getElement_referenceParserRuleCall_7()); }
	ruleelement_reference
{ after(grammarAccess.getXLiteralAccess().getElement_referenceParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getGroup_1_0()); }
(rule__Function_declaration__Group_1_0__0)
{ after(grammarAccess.getFunction_declarationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getFunction_declarationAccess().getGroup_1_1()); }
(rule__Function_declaration__Group_1_1__0)
{ after(grammarAccess.getFunction_declarationAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getFtypeAssignment_1_1_1_0()); }
(rule__Function_declaration__FtypeAssignment_1_1_1_0)
{ after(grammarAccess.getFunction_declarationAccess().getFtypeAssignment_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getFunction_declarationAccess().getTyperefAssignment_1_1_1_1()); }
(rule__Function_declaration__TyperefAssignment_1_1_1_1)
{ after(grammarAccess.getFunction_declarationAccess().getTyperefAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getClosureAssignment_3_0()); }
(rule__Function_declaration__ClosureAssignment_3_0)
{ after(grammarAccess.getFunction_declarationAccess().getClosureAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getFunction_declarationAccess().getExp_bodyAssignment_3_1()); }
(rule__Function_declaration__Exp_bodyAssignment_3_1)
{ after(grammarAccess.getFunction_declarationAccess().getExp_bodyAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getLeft_exprAssignment_4_0()); }
(rule__Local_declaration__Left_exprAssignment_4_0)
{ after(grammarAccess.getLocal_declarationAccess().getLeft_exprAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getLocal_declarationAccess().getLeft_exprAssignment_4_1()); }
(rule__Local_declaration__Left_exprAssignment_4_1)
{ after(grammarAccess.getLocal_declarationAccess().getLeft_exprAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_expressionAccess().getBasicAssignment_0()); }
(rule__Type_expression__BasicAssignment_0)
{ after(grammarAccess.getType_expressionAccess().getBasicAssignment_0()); }
)

    |(
{ before(grammarAccess.getType_expressionAccess().getCompositeAssignment_1()); }
(rule__Type_expression__CompositeAssignment_1)
{ after(grammarAccess.getType_expressionAccess().getCompositeAssignment_1()); }
)

    |(
{ before(grammarAccess.getType_expressionAccess().getElementAssignment_2()); }
(rule__Type_expression__ElementAssignment_2)
{ after(grammarAccess.getType_expressionAccess().getElementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getBoolAssignment_0()); }
(rule__Basic_type__BoolAssignment_0)
{ after(grammarAccess.getBasic_typeAccess().getBoolAssignment_0()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getStringAssignment_1()); }
(rule__Basic_type__StringAssignment_1)
{ after(grammarAccess.getBasic_typeAccess().getStringAssignment_1()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getEnumerAssignment_2()); }
(rule__Basic_type__EnumerAssignment_2)
{ after(grammarAccess.getBasic_typeAccess().getEnumerAssignment_2()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getUnitsAssignment_3()); }
(rule__Basic_type__UnitsAssignment_3)
{ after(grammarAccess.getBasic_typeAccess().getUnitsAssignment_3()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getIntegerAssignment_4()); }
(rule__Basic_type__IntegerAssignment_4)
{ after(grammarAccess.getBasic_typeAccess().getIntegerAssignment_4()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getRealAssignment_5()); }
(rule__Basic_type__RealAssignment_5)
{ after(grammarAccess.getBasic_typeAccess().getRealAssignment_5()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getRangeAssignment_6()); }
(rule__Basic_type__RangeAssignment_6)
{ after(grammarAccess.getBasic_typeAccess().getRangeAssignment_6()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getClassAssignment_7()); }
(rule__Basic_type__ClassAssignment_7)
{ after(grammarAccess.getBasic_typeAccess().getClassAssignment_7()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getRefAssignment_8()); }
(rule__Basic_type__RefAssignment_8)
{ after(grammarAccess.getBasic_typeAccess().getRefAssignment_8()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getFuncAssignment_9()); }
(rule__Basic_type__FuncAssignment_9)
{ after(grammarAccess.getBasic_typeAccess().getFuncAssignment_9()); }
)

    |(
{ before(grammarAccess.getBasic_typeAccess().getTypenameAssignment_10()); }
(rule__Basic_type__TypenameAssignment_10)
{ after(grammarAccess.getBasic_typeAccess().getTypenameAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberValueAccess().getRealLitParserRuleCall_0()); }
	ruleRealLit
{ after(grammarAccess.getNumberValueAccess().getRealLitParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberValueAccess().getIntegerLitParserRuleCall_1()); }
(	ruleIntegerLit)
{ after(grammarAccess.getNumberValueAccess().getIntegerLitParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getPlusSignKeyword_0_0()); }

	PlusSign 

{ after(grammarAccess.getSignedIntAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0_1()); }

	HyphenMinus 

{ after(grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getPlusSignKeyword_0_0()); }

	PlusSign 

{ after(grammarAccess.getSignedRealAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0_1()); }

	HyphenMinus 

{ after(grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getOwnedUnitsTypeAssignment_3_0()); }
(rule__UnnamedIntegerType__OwnedUnitsTypeAssignment_3_0)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getOwnedUnitsTypeAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getGroup_3_1()); }
(rule__UnnamedIntegerType__Group_3_1__0)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__LowerBoundAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getLowerBoundIntegerTermParserRuleCall_0_0_0()); }
	ruleIntegerTerm
{ after(grammarAccess.getIntegerRangeAccess().getLowerBoundIntegerTermParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getIntegerRangeAccess().getLowerBoundSignedConstantParserRuleCall_0_0_1()); }
	ruleSignedConstant
{ after(grammarAccess.getIntegerRangeAccess().getLowerBoundSignedConstantParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getIntegerRangeAccess().getLowerBoundConstantValueParserRuleCall_0_0_2()); }
	ruleConstantValue
{ after(grammarAccess.getIntegerRangeAccess().getLowerBoundConstantValueParserRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__UpperBoundAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getUpperBoundIntegerTermParserRuleCall_2_0_0()); }
	ruleIntegerTerm
{ after(grammarAccess.getIntegerRangeAccess().getUpperBoundIntegerTermParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getIntegerRangeAccess().getUpperBoundSignedConstantParserRuleCall_2_0_1()); }
	ruleSignedConstant
{ after(grammarAccess.getIntegerRangeAccess().getUpperBoundSignedConstantParserRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getIntegerRangeAccess().getUpperBoundConstantValueParserRuleCall_2_0_2()); }
	ruleConstantValue
{ after(grammarAccess.getIntegerRangeAccess().getUpperBoundConstantValueParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); }

	PlusSign 

{ after(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); }

	HyphenMinus 

{ after(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getOwnedUnitsTypeAssignment_3_0()); }
(rule__UnnamedRealType__OwnedUnitsTypeAssignment_3_0)
{ after(grammarAccess.getUnnamedRealTypeAccess().getOwnedUnitsTypeAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getUnnamedRealTypeAccess().getGroup_3_1()); }
(rule__UnnamedRealType__Group_3_1__0)
{ after(grammarAccess.getUnnamedRealTypeAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__LowerBoundAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getLowerBoundRealTermParserRuleCall_0_0_0()); }
	ruleRealTerm
{ after(grammarAccess.getRealRangeAccess().getLowerBoundRealTermParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getRealRangeAccess().getLowerBoundSignedConstantParserRuleCall_0_0_1()); }
	ruleSignedConstant
{ after(grammarAccess.getRealRangeAccess().getLowerBoundSignedConstantParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getRealRangeAccess().getLowerBoundConstantValueParserRuleCall_0_0_2()); }
	ruleConstantValue
{ after(grammarAccess.getRealRangeAccess().getLowerBoundConstantValueParserRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__UpperBoundAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getUpperBoundRealTermParserRuleCall_2_0_0()); }
	ruleRealTerm
{ after(grammarAccess.getRealRangeAccess().getUpperBoundRealTermParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getRealRangeAccess().getUpperBoundSignedConstantParserRuleCall_2_0_1()); }
	ruleSignedConstant
{ after(grammarAccess.getRealRangeAccess().getUpperBoundSignedConstantParserRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getRealRangeAccess().getUpperBoundConstantValueParserRuleCall_2_0_2()); }
	ruleConstantValue
{ after(grammarAccess.getRealRangeAccess().getUpperBoundConstantValueParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeAssignment_3_0()); }
(rule__UnnamedRangeType__OwnedNumberTypeAssignment_3_0)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getNumberTypeAssignment_3_1()); }
(rule__UnnamedRangeType__NumberTypeAssignment_3_1)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getNumberTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__OwnedNumberTypeAlternatives_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeUnnamedIntegerTypeParserRuleCall_3_0_0_0()); }
	ruleUnnamedIntegerType
{ after(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeUnnamedIntegerTypeParserRuleCall_3_0_0_0()); }
)

    |(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeUnnamedRealTypeParserRuleCall_3_0_0_1()); }
	ruleUnnamedRealType
{ after(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeUnnamedRealTypeParserRuleCall_3_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Composite_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComposite_typeAccess().getSet_typeParserRuleCall_0()); }
	ruleset_type
{ after(grammarAccess.getComposite_typeAccess().getSet_typeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getComposite_typeAccess().getList_typeParserRuleCall_1()); }
	rulelist_type
{ after(grammarAccess.getComposite_typeAccess().getList_typeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getComposite_typeAccess().getMap_typeParserRuleCall_2()); }
	rulemap_type
{ after(grammarAccess.getComposite_typeAccess().getMap_typeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getComposite_typeAccess().getRecord_typeParserRuleCall_3()); }
	rulerecord_type
{ after(grammarAccess.getComposite_typeAccess().getRecord_typeParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getComposite_typeAccess().getUnion_typeParserRuleCall_4()); }
	ruleunion_type
{ after(grammarAccess.getComposite_typeAccess().getUnion_typeParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_typeAccess().getTelemAssignment_0()); }
(rule__Element_type__TelemAssignment_0)
{ after(grammarAccess.getElement_typeAccess().getTelemAssignment_0()); }
)

    |(
{ before(grammarAccess.getElement_typeAccess().getT_classAssignment_1()); }
(rule__Element_type__T_classAssignment_1)
{ after(grammarAccess.getElement_typeAccess().getT_classAssignment_1()); }
)

    |(
{ before(grammarAccess.getElement_typeAccess().getT_refAssignment_2()); }
(rule__Element_type__T_refAssignment_2)
{ after(grammarAccess.getElement_typeAccess().getT_refAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifiers__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifiersAccess().getT_classAssignment_0()); }
(rule__T_classifiers__T_classAssignment_0)
{ after(grammarAccess.getT_classifiersAccess().getT_classAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_classifiersAccess().getT_class_subtypeAssignment_1()); }
(rule__T_classifiers__T_class_subtypeAssignment_1)
{ after(grammarAccess.getT_classifiersAccess().getT_class_subtypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifier_subtypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeAssignment_0()); }
(rule__T_classifier_subtypes__T_ctypeAssignment_0)
{ after(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_cimplAssignment_1()); }
(rule__T_classifier_subtypes__T_cimplAssignment_1)
{ after(grammarAccess.getT_classifier_subtypesAccess().getT_cimplAssignment_1()); }
)

    |(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassAssignment_2()); }
(rule__T_classifier_subtypes__T_fgclassAssignment_2)
{ after(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassAssignment_2()); }
)

    |(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassAssignment_3()); }
(rule__T_classifier_subtypes__T_annexclassAssignment_3)
{ after(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_0()); }
(rule__XAssignment__Group_0__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1()); }
(rule__XAssignment__Group_1__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); }

	PlusSignEqualsSign 

{ after(grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); }

	HyphenMinusEqualsSign 

{ after(grammarAccess.getOpMultiAssignAccess().getHyphenMinusEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); }

	AsteriskEqualsSign 

{ after(grammarAccess.getOpMultiAssignAccess().getAsteriskEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); }

	SolidusEqualsSign 

{ after(grammarAccess.getOpMultiAssignAccess().getSolidusEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); }

	PercentSignEqualsSign 

{ after(grammarAccess.getOpMultiAssignAccess().getPercentSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getGroup_5()); }
(rule__OpMultiAssign__Group_5__0)
{ after(grammarAccess.getOpMultiAssignAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getOpMultiAssignAccess().getGroup_6()); }
(rule__OpMultiAssign__Group_6__0)
{ after(grammarAccess.getOpMultiAssignAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }

	EqualsSignEqualsSign 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }

	ExclamationMarkEqualsSign 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); }

	EqualsSignEqualsSignEqualsSign 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); }

	ExclamationMarkEqualsSignEqualsSign 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0()); }
(rule__XRelationalExpression__Group_1_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1()); }
(rule__XRelationalExpression__Group_1_1__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }

	GreaterThanSignEqualsSign 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGroup_1()); }
(rule__OpCompare__Group_1__0)
{ after(grammarAccess.getOpCompareAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); }

	GreaterThanSign 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); }

	LessThanSign 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); }

	HyphenMinusGreaterThanSign 

{ after(grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); }

	FullStopFullStopLessThanSign 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopLessThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_2()); }
(rule__OpOther__Group_2__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); }

	FullStopFullStop 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_3()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_5()); }
(rule__OpOther__Group_5__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGroup_6()); }
(rule__OpOther__Group_6__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); }

	LessThanSignGreaterThanSign 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); }

	QuestionMarkColon 

{ after(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_5_1_0()); }
(rule__OpOther__Group_5_1_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5_1_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); }

	GreaterThanSign 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_6_1_0()); }
(rule__OpOther__Group_6_1_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6_1_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); }

	LessThanSign 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_1()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_6_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdd__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }

	PlusSign 

{ after(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }

	HyphenMinus 

{ after(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMulti__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }

	Asterisk 

{ after(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); }

	AsteriskAsterisk 

{ after(grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); }

	Solidus 

{ after(grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); }

	PercentSign 

{ after(grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getGroup_0()); }
(rule__XUnaryOperation__Group_0__0)
{ after(grammarAccess.getXUnaryOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); }
	ruleXCastedExpression
{ after(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpUnary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }

	ExclamationMark 

{ after(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }

	HyphenMinus 

{ after(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }

	PlusSign 

{ after(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpPostfix__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); }

	PlusSignPlusSign 

{ after(grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); }

	HyphenMinusHyphenMinus 

{ after(grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0()); }
(rule__XMemberFeatureCall__Group_1_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1()); }
(rule__XMemberFeatureCall__Group_1_1__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1_0_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0()); }

	FullStop 

{ after(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticAssignment_1_0_0_0_1_1()); }
(rule__XMemberFeatureCall__ExplicitStaticAssignment_1_0_0_0_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticAssignment_1_0_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0()); }

	FullStop 

{ after(grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getNullSafeAssignment_1_1_0_0_1_1()); }
(rule__XMemberFeatureCall__NullSafeAssignment_1_1_0_0_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getNullSafeAssignment_1_1_0_0_1_1()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticAssignment_1_1_0_0_1_2()); }
(rule__XMemberFeatureCall__ExplicitStaticAssignment_1_1_0_0_1_2)
{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticAssignment_1_1_0_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Alternatives_1_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_0()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_0()); }
)

    |(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1()); }
(rule__XMemberFeatureCall__Group_1_1_3_1_1__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); }
	ruleXConstructorCall
{ after(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); }
	ruleXBlockExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); }
	ruleXSwitchExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3()); }
(	ruleXSynchronizedExpression)
{ after(grammarAccess.getXPrimaryExpressionAccess().getXSynchronizedExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4()); }
	ruleXFeatureCall
{ after(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5()); }
	ruleXLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6()); }
	ruleXIfExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7()); }
(	ruleXForLoopExpression)
{ after(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8()); }
	ruleXBasicForLoopExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXBasicForLoopExpressionParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9()); }
	ruleXWhileExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10()); }
	ruleXDoWhileExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11()); }
	ruleXThrowExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12()); }
	ruleXReturnExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13()); }
	ruleXTryCatchFinallyExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14()); }
	ruleXParenthesizedExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCollectionLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); }
	ruleXSetLiteral
{ after(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); }
	ruleXListLiteral
{ after(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0()); }
(rule__XSwitchExpression__Group_2_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1()); }
(rule__XSwitchExpression__Group_2_1__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getGroup_3_0()); }
(rule__XCasePart__Group_3_0__0)
{ after(grammarAccess.getXCasePartAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getXCasePartAccess().getFallThroughAssignment_3_1()); }
(rule__XCasePart__FallThroughAssignment_3_1)
{ after(grammarAccess.getXCasePartAccess().getFallThroughAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionOrVarDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0()); }
	ruleXVariableDeclaration
{ after(grammarAccess.getXExpressionOrVarDeclarationAccess().getXVariableDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1()); }
	ruleXExpression
{ after(grammarAccess.getXExpressionOrVarDeclarationAccess().getXExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getWriteableAssignment_1_0()); }
(rule__XVariableDeclaration__WriteableAssignment_1_0)
{ after(grammarAccess.getXVariableDeclarationAccess().getWriteableAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1()); }

	Val 

{ after(grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0()); }
(rule__XVariableDeclaration__Group_2_0__0)
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_1()); }
(rule__XVariableDeclaration__NameAssignment_2_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_0()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_0)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_0()); }
)

    |(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_3_1_1()); }
(rule__XFeatureCall__Group_3_1_1__0)
{ after(grammarAccess.getXFeatureCallAccess().getGroup_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCallID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getFeatureCallIDAccess().getValidIDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); }

	Extends 

{ after(grammarAccess.getFeatureCallIDAccess().getExtendsKeyword_1()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); }

	Static 

{ after(grammarAccess.getFeatureCallIDAccess().getStaticKeyword_2()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); }

	Import 

{ after(grammarAccess.getFeatureCallIDAccess().getImportKeyword_3()); }
)

    |(
{ before(grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); }

	Extension 

{ after(grammarAccess.getFeatureCallIDAccess().getExtensionKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdOrSuper__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); }
	ruleFeatureCallID
{ after(grammarAccess.getIdOrSuperAccess().getFeatureCallIDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); }

	Super 

{ after(grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_0()); }
(rule__XConstructorCall__ArgumentsAssignment_4_1_0)
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_0()); }
)

    |(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1()); }
(rule__XConstructorCall__Group_4_1_1__0)
{ after(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0()); }

	False 

{ after(grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
(rule__XBooleanLiteral__IsTrueAssignment_1_1)
{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0()); }
(rule__XTryCatchFinallyExpression__Group_3_0__0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_1()); }
(rule__XTryCatchFinallyExpression__Group_3_1__0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
	RULE_HEX
{ after(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getGroup_1()); }
(rule__Number__Group_1__0)
{ after(grammarAccess.getNumberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0()); }
(rule__JvmTypeReference__Group_0__0)
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); }
	ruleXFunctionTypeRef
{ after(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmArgumentTypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); }
	ruleJvmTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); }
	ruleJvmWildcardTypeReference
{ after(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_0()); }
(rule__JvmWildcardTypeReference__Group_2_0__0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_1()); }
(rule__JvmWildcardTypeReference__Group_2_1__0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getGroup_1_0()); }
(rule__XImportDeclaration__Group_1_0__0)
{ after(grammarAccess.getXImportDeclarationAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1()); }
(rule__XImportDeclaration__ImportedTypeAssignment_1_1)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2()); }
(rule__XImportDeclaration__ImportedNamespaceAssignment_1_2)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Alternatives_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getWildcardAssignment_1_0_3_0()); }
(rule__XImportDeclaration__WildcardAssignment_1_0_3_0)
{ after(grammarAccess.getXImportDeclarationAccess().getWildcardAssignment_1_0_3_0()); }
)

    |(
{ before(grammarAccess.getXImportDeclarationAccess().getMemberNameAssignment_1_0_3_1()); }
(rule__XImportDeclaration__MemberNameAssignment_1_0_3_1)
{ after(grammarAccess.getXImportDeclarationAccess().getMemberNameAssignment_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MCSAnnexLibrary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__0__Impl
	rule__MCSAnnexLibrary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getMCSAnnexLibraryAction_0()); }
(

)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getMCSAnnexLibraryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__1__Impl
	rule__MCSAnnexLibrary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup_1()); }
(rule__MCSAnnexLibrary__Group_1__0)?
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__2__Impl
	rule__MCSAnnexLibrary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup_2()); }
(rule__MCSAnnexLibrary__Group_2__0)?
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__3__Impl
	rule__MCSAnnexLibrary__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup_3()); }
(rule__MCSAnnexLibrary__Group_3__0)?
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__4__Impl
	rule__MCSAnnexLibrary__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup_4()); }
(rule__MCSAnnexLibrary__Group_4__0)?
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__5__Impl
	rule__MCSAnnexLibrary__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup_5()); }
(rule__MCSAnnexLibrary__Group_5__0)?
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getGroup_6()); }
(rule__MCSAnnexLibrary__Group_6__0)?
{ after(grammarAccess.getMCSAnnexLibraryAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MCSAnnexLibrary__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_1__0__Impl
	rule__MCSAnnexLibrary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTypesKeyword_1_0()); }

	Types 

{ after(grammarAccess.getMCSAnnexLibraryAccess().getTypesKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTypesAssignment_1_1()); }
(rule__MCSAnnexLibrary__TypesAssignment_1_1)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getTypesAssignment_1_1()); }
)
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTypesAssignment_1_1()); }
(rule__MCSAnnexLibrary__TypesAssignment_1_1)*
{ after(grammarAccess.getMCSAnnexLibraryAccess().getTypesAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexLibrary__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_2__0__Impl
	rule__MCSAnnexLibrary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getConstantsKeyword_2_0()); }

	Constants 

{ after(grammarAccess.getMCSAnnexLibraryAccess().getConstantsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getConstantsAssignment_2_1()); }
(rule__MCSAnnexLibrary__ConstantsAssignment_2_1)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getConstantsAssignment_2_1()); }
)
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getConstantsAssignment_2_1()); }
(rule__MCSAnnexLibrary__ConstantsAssignment_2_1)*
{ after(grammarAccess.getMCSAnnexLibraryAccess().getConstantsAssignment_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexLibrary__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_3__0__Impl
	rule__MCSAnnexLibrary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsKeyword_3_0()); }

	Functions 

{ after(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsAssignment_3_1()); }
(rule__MCSAnnexLibrary__FunctionsAssignment_3_1)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsAssignment_3_1()); }
)
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsAssignment_3_1()); }
(rule__MCSAnnexLibrary__FunctionsAssignment_3_1)*
{ after(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsAssignment_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexLibrary__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_4__0__Impl
	rule__MCSAnnexLibrary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsKeyword_4_0()); }

	Theorems 

{ after(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsAssignment_4_1()); }
(rule__MCSAnnexLibrary__TheoremsAssignment_4_1)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsAssignment_4_1()); }
)
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsAssignment_4_1()); }
(rule__MCSAnnexLibrary__TheoremsAssignment_4_1)*
{ after(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsAssignment_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexLibrary__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_5__0__Impl
	rule__MCSAnnexLibrary__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getViewpointsAssignment_5_0()); }
(rule__MCSAnnexLibrary__ViewpointsAssignment_5_0)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getViewpointsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getViewpointsAssignment_5_1()); }
(rule__MCSAnnexLibrary__ViewpointsAssignment_5_1)*
{ after(grammarAccess.getMCSAnnexLibraryAccess().getViewpointsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexLibrary__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_6__0__Impl
	rule__MCSAnnexLibrary__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getEnforceclausesAssignment_6_0()); }
(rule__MCSAnnexLibrary__EnforceclausesAssignment_6_0)
{ after(grammarAccess.getMCSAnnexLibraryAccess().getEnforceclausesAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexLibrary__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexLibrary__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getEnforceclausesAssignment_6_1()); }
(rule__MCSAnnexLibrary__EnforceclausesAssignment_6_1)*
{ after(grammarAccess.getMCSAnnexLibraryAccess().getEnforceclausesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__0__Impl
	rule__Type_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getNameAssignment_0()); }
(rule__Type_declaration__NameAssignment_0)
{ after(grammarAccess.getType_declarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__1__Impl
	rule__Type_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getType_declarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__2__Impl
	rule__Type_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getTypeKeyword_2()); }

	Type 

{ after(grammarAccess.getType_declarationAccess().getTypeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__3__Impl
	rule__Type_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getTypeAssignment_3()); }
(rule__Type_declaration__TypeAssignment_3)
{ after(grammarAccess.getType_declarationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getSemicolonKeyword_4()); }

	Semicolon 

{ after(grammarAccess.getType_declarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Constant_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__0__Impl
	rule__Constant_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getConstAssignment_0()); }
(rule__Constant_declaration__ConstAssignment_0)?
{ after(grammarAccess.getConstant_declarationAccess().getConstAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__1__Impl
	rule__Constant_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getNameAssignment_1()); }
(rule__Constant_declaration__NameAssignment_1)
{ after(grammarAccess.getConstant_declarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__2__Impl
	rule__Constant_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getTypeAssignment_2()); }
(rule__Constant_declaration__TypeAssignment_2)?
{ after(grammarAccess.getConstant_declarationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__3__Impl
	rule__Constant_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getColonEqualsSignKeyword_3()); }

	ColonEqualsSign 

{ after(grammarAccess.getConstant_declarationAccess().getColonEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__4__Impl
	rule__Constant_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getLeft_exprAssignment_4()); }
(rule__Constant_declaration__Left_exprAssignment_4)
{ after(grammarAccess.getConstant_declarationAccess().getLeft_exprAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_declaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getSemicolonKeyword_5()); }

	Semicolon 

{ after(grammarAccess.getConstant_declarationAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MCSViewpoint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSViewpoint__Group__0__Impl
	rule__MCSViewpoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSViewpoint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSViewpointAccess().getViewpointKeyword_0()); }

	Viewpoint 

{ after(grammarAccess.getMCSViewpointAccess().getViewpointKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSViewpoint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSViewpoint__Group__1__Impl
	rule__MCSViewpoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSViewpoint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSViewpointAccess().getNameAssignment_1()); }
(rule__MCSViewpoint__NameAssignment_1)
{ after(grammarAccess.getMCSViewpointAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSViewpoint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSViewpoint__Group__2__Impl
	rule__MCSViewpoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSViewpoint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSViewpointAccess().getPolicyAssignment_2()); }
(rule__MCSViewpoint__PolicyAssignment_2)
{ after(grammarAccess.getMCSViewpointAccess().getPolicyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSViewpoint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSViewpoint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSViewpoint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSViewpointAccess().getPscriptAssignment_3()); }
(rule__MCSViewpoint__PscriptAssignment_3)?
{ after(grammarAccess.getMCSViewpointAccess().getPscriptAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Enforcement_policy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enforcement_policy__Group__0__Impl
	rule__Enforcement_policy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enforcement_policy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnforcement_policyAccess().getAlternatives_0()); }
(rule__Enforcement_policy__Alternatives_0)
{ after(grammarAccess.getEnforcement_policyAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enforcement_policy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enforcement_policy__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enforcement_policy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnforcement_policyAccess().getContractKeyword_1()); }

	Contract 

{ after(grammarAccess.getEnforcement_policyAccess().getContractKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageScript__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageScript__Group__0__Impl
	rule__PackageScript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageScript__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageScriptAccess().getScriptKeyword_0()); }

	Script 

{ after(grammarAccess.getPackageScriptAccess().getScriptKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageScript__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageScript__Group__1__Impl
	rule__PackageScript__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageScript__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageScriptAccess().getGroup_1()); }
(rule__PackageScript__Group_1__0)*
{ after(grammarAccess.getPackageScriptAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageScript__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageScript__Group__2__Impl
	rule__PackageScript__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageScript__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageScriptAccess().getEndscriptKeyword_2()); }

	Endscript 

{ after(grammarAccess.getPackageScriptAccess().getEndscriptKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageScript__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageScript__Group__3__Impl
	rule__PackageScript__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageScript__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageScriptAccess().getRefAssignment_3()); }
(rule__PackageScript__RefAssignment_3)
{ after(grammarAccess.getPackageScriptAccess().getRefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageScript__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageScript__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageScript__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageScriptAccess().getSemicolonKeyword_4()); }

	Semicolon 

{ after(grammarAccess.getPackageScriptAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PackageScript__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageScript__Group_1__0__Impl
	rule__PackageScript__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageScript__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageScriptAccess().getAppliesAssignment_1_0()); }
(rule__PackageScript__AppliesAssignment_1_0)
{ after(grammarAccess.getPackageScriptAccess().getAppliesAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageScript__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageScript__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageScript__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPackageScriptAccess().getC_blockAssignment_1_1()); }
(rule__PackageScript__C_blockAssignment_1_1)
{ after(grammarAccess.getPackageScriptAccess().getC_blockAssignment_1_1()); }
)
(
{ before(grammarAccess.getPackageScriptAccess().getC_blockAssignment_1_1()); }
(rule__PackageScript__C_blockAssignment_1_1)*
{ after(grammarAccess.getPackageScriptAccess().getC_blockAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AppliesToClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AppliesToClause__Group__0__Impl
	rule__AppliesToClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getAppliesKeyword_0()); }

	Applies 

{ after(grammarAccess.getAppliesToClauseAccess().getAppliesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AppliesToClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AppliesToClause__Group__1__Impl
	rule__AppliesToClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getToKeyword_1()); }

	To 

{ after(grammarAccess.getAppliesToClauseAccess().getToKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AppliesToClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AppliesToClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getAlternatives_2()); }
(rule__AppliesToClause__Alternatives_2)
{ after(grammarAccess.getAppliesToClauseAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AppliesToClause__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AppliesToClause__Group_2_1__0__Impl
	rule__AppliesToClause__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getCategoryAssignment_2_1_0()); }
(rule__AppliesToClause__CategoryAssignment_2_1_0)
{ after(grammarAccess.getAppliesToClauseAccess().getCategoryAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AppliesToClause__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AppliesToClause__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getGroup_2_1_1()); }
(rule__AppliesToClause__Group_2_1_1__0)*
{ after(grammarAccess.getAppliesToClauseAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AppliesToClause__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AppliesToClause__Group_2_1_1__0__Impl
	rule__AppliesToClause__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getCommaKeyword_2_1_1_0()); }

	Comma 

{ after(grammarAccess.getAppliesToClauseAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AppliesToClause__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AppliesToClause__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getCategoryAssignment_2_1_1_1()); }
(rule__AppliesToClause__CategoryAssignment_2_1_1_1)
{ after(grammarAccess.getAppliesToClauseAccess().getCategoryAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifierCategory__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierCategory__Group__0__Impl
	rule__ClassifierCategory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getClassifierCategoryAction_0()); }
(

)
{ after(grammarAccess.getClassifierCategoryAccess().getClassifierCategoryAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierCategory__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierCategory__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getAlternatives_1()); }
(rule__ClassifierCategory__Alternatives_1)
{ after(grammarAccess.getClassifierCategoryAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifierCategory__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierCategory__Group_1_0__0__Impl
	rule__ClassifierCategory__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getComponentAssignment_1_0_0()); }
(rule__ClassifierCategory__ComponentAssignment_1_0_0)
{ after(grammarAccess.getClassifierCategoryAccess().getComponentAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierCategory__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierCategory__Group_1_0__1__Impl
	rule__ClassifierCategory__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getCtAssignment_1_0_1()); }
(rule__ClassifierCategory__CtAssignment_1_0_1)?
{ after(grammarAccess.getClassifierCategoryAccess().getCtAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierCategory__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierCategory__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getGroup_1_0_2()); }
(rule__ClassifierCategory__Group_1_0_2__0)?
{ after(grammarAccess.getClassifierCategoryAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassifierCategory__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierCategory__Group_1_0_2__0__Impl
	rule__ClassifierCategory__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getImplAssignment_1_0_2_0()); }
(rule__ClassifierCategory__ImplAssignment_1_0_2_0)
{ after(grammarAccess.getClassifierCategoryAccess().getImplAssignment_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierCategory__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierCategory__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getCiAssignment_1_0_2_1()); }
(rule__ClassifierCategory__CiAssignment_1_0_2_1)?
{ after(grammarAccess.getClassifierCategoryAccess().getCiAssignment_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifierCategory__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierCategory__Group_1_1__0__Impl
	rule__ClassifierCategory__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getFeat_gAssignment_1_1_0()); }
(rule__ClassifierCategory__Feat_gAssignment_1_1_0)
{ after(grammarAccess.getClassifierCategoryAccess().getFeat_gAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierCategory__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierCategory__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getRef_to_fAssignment_1_1_1()); }
(rule__ClassifierCategory__Ref_to_fAssignment_1_1_1)?
{ after(grammarAccess.getClassifierCategoryAccess().getRef_to_fAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentCategory__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentCategory__Group_8__0__Impl
	rule__ComponentCategory__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentCategory__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentCategoryAccess().getSubprogramKeyword_8_0()); }

	Subprogram 

{ after(grammarAccess.getComponentCategoryAccess().getSubprogramKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentCategory__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentCategory__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentCategory__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentCategoryAccess().getGroupKeyword_8_1()); }

	Group 

{ after(grammarAccess.getComponentCategoryAccess().getGroupKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentCategory__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentCategory__Group_10__0__Impl
	rule__ComponentCategory__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentCategory__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentCategoryAccess().getThreadKeyword_10_0()); }

	Thread 

{ after(grammarAccess.getComponentCategoryAccess().getThreadKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentCategory__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentCategory__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentCategory__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentCategoryAccess().getGroupKeyword_10_1()); }

	Group 

{ after(grammarAccess.getComponentCategoryAccess().getGroupKeyword_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentCategory__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentCategory__Group_12__0__Impl
	rule__ComponentCategory__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentCategory__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentCategoryAccess().getVirtualKeyword_12_0()); }

	Virtual 

{ after(grammarAccess.getComponentCategoryAccess().getVirtualKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentCategory__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentCategory__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentCategory__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentCategoryAccess().getBusKeyword_12_1()); }

	Bus 

{ after(grammarAccess.getComponentCategoryAccess().getBusKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentCategory__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentCategory__Group_13__0__Impl
	rule__ComponentCategory__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentCategory__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentCategoryAccess().getVirtualKeyword_13_0()); }

	Virtual 

{ after(grammarAccess.getComponentCategoryAccess().getVirtualKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentCategory__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentCategory__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentCategory__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentCategoryAccess().getProcessorKeyword_13_1()); }

	Processor 

{ after(grammarAccess.getComponentCategoryAccess().getProcessorKeyword_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ViewpointReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewpointReference__Group__0__Impl
	rule__ViewpointReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewpointReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewpointReferenceAccess().getPolicyAssignment_0()); }
(rule__ViewpointReference__PolicyAssignment_0)?
{ after(grammarAccess.getViewpointReferenceAccess().getPolicyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewpointReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewpointReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewpointReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewpointReferenceAccess().getVp_refAssignment_1()); }
(rule__ViewpointReference__Vp_refAssignment_1)
{ after(grammarAccess.getViewpointReferenceAccess().getVp_refAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstraintsBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintsBlock__Group__0__Impl
	rule__ConstraintsBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintsBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsBlockAccess().getGroup_0()); }
(rule__ConstraintsBlock__Group_0__0)?
{ after(grammarAccess.getConstraintsBlockAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintsBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintsBlock__Group__1__Impl
	rule__ConstraintsBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintsBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsBlockAccess().getLeftCurlyBracketKeyword_1()); }

	LeftCurlyBracket 

{ after(grammarAccess.getConstraintsBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintsBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintsBlock__Group__2__Impl
	rule__ConstraintsBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintsBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConstraintsBlockAccess().getCsAssignment_2()); }
(rule__ConstraintsBlock__CsAssignment_2)
{ after(grammarAccess.getConstraintsBlockAccess().getCsAssignment_2()); }
)
(
{ before(grammarAccess.getConstraintsBlockAccess().getCsAssignment_2()); }
(rule__ConstraintsBlock__CsAssignment_2)*
{ after(grammarAccess.getConstraintsBlockAccess().getCsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintsBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintsBlock__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintsBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsBlockAccess().getRightCurlyBracketKeyword_3()); }

	RightCurlyBracket 

{ after(grammarAccess.getConstraintsBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstraintsBlock__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintsBlock__Group_0__0__Impl
	rule__ConstraintsBlock__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintsBlock__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsBlockAccess().getB_labelAssignment_0_0()); }
(rule__ConstraintsBlock__B_labelAssignment_0_0)
{ after(grammarAccess.getConstraintsBlockAccess().getB_labelAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintsBlock__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintsBlock__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintsBlock__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsBlockAccess().getColonKeyword_0_1()); }

	Colon 

{ after(grammarAccess.getConstraintsBlockAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Labelled_check_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Labelled_check_statement__Group__0__Impl
	rule__Labelled_check_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labelled_check_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelled_check_statementAccess().getGroup_0()); }
(rule__Labelled_check_statement__Group_0__0)?
{ after(grammarAccess.getLabelled_check_statementAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Labelled_check_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Labelled_check_statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labelled_check_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelled_check_statementAccess().getCsAssignment_1()); }
(rule__Labelled_check_statement__CsAssignment_1)
{ after(grammarAccess.getLabelled_check_statementAccess().getCsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Labelled_check_statement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Labelled_check_statement__Group_0__0__Impl
	rule__Labelled_check_statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labelled_check_statement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelled_check_statementAccess().getC_labelAssignment_0_0()); }
(rule__Labelled_check_statement__C_labelAssignment_0_0)
{ after(grammarAccess.getLabelled_check_statementAccess().getC_labelAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Labelled_check_statement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Labelled_check_statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labelled_check_statement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelled_check_statementAccess().getColonKeyword_0_1()); }

	Colon 

{ after(grammarAccess.getLabelled_check_statementAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Check_theorem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group__0__Impl
	rule__Check_theorem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getCheckKeyword_0()); }

	Check 

{ after(grammarAccess.getCheck_theoremAccess().getCheckKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_theorem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group__1__Impl
	rule__Check_theorem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getTheoremKeyword_1()); }

	Theorem 

{ after(grammarAccess.getCheck_theoremAccess().getTheoremKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_theorem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group__2__Impl
	rule__Check_theorem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getNameAssignment_2()); }
(rule__Check_theorem__NameAssignment_2)
{ after(grammarAccess.getCheck_theoremAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_theorem__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group__3__Impl
	rule__Check_theorem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getGroup_3()); }
(rule__Check_theorem__Group_3__0)?
{ after(grammarAccess.getCheck_theoremAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_theorem__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group__4__Impl
	rule__Check_theorem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getInmodeAssignment_4()); }
(rule__Check_theorem__InmodeAssignment_4)?
{ after(grammarAccess.getCheck_theoremAccess().getInmodeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_theorem__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group__5__Impl
	rule__Check_theorem__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getGroup_5()); }
(rule__Check_theorem__Group_5__0)?
{ after(grammarAccess.getCheck_theoremAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_theorem__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getSemicolonKeyword_6()); }

	Semicolon 

{ after(grammarAccess.getCheck_theoremAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Check_theorem__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group_3__0__Impl
	rule__Check_theorem__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getLeftParenthesisKeyword_3_0()); }

	LeftParenthesis 

{ after(grammarAccess.getCheck_theoremAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_theorem__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group_3__1__Impl
	rule__Check_theorem__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getRootAssignment_3_1()); }
(rule__Check_theorem__RootAssignment_3_1)
{ after(grammarAccess.getCheck_theoremAccess().getRootAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_theorem__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getRightParenthesisKeyword_3_2()); }

	RightParenthesis 

{ after(grammarAccess.getCheck_theoremAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Check_theorem__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group_5__0__Impl
	rule__Check_theorem__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getFailKeyword_5_0()); }

	Fail 

{ after(grammarAccess.getCheck_theoremAccess().getFailKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_theorem__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_theorem__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getStrAssignment_5_1()); }
(rule__Check_theorem__StrAssignment_5_1)
{ after(grammarAccess.getCheck_theoremAccess().getStrAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModeSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModeSpec__Group__0__Impl
	rule__ModeSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModeSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeSpecAccess().getInKeyword_0()); }

	In 

{ after(grammarAccess.getModeSpecAccess().getInKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModeSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModeSpec__Group__1__Impl
	rule__ModeSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModeSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeSpecAccess().getModeKeyword_1()); }

	Mode 

{ after(grammarAccess.getModeSpecAccess().getModeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModeSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModeSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModeSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeSpecAccess().getModeAssignment_2()); }
(rule__ModeSpec__ModeAssignment_2)
{ after(grammarAccess.getModeSpecAccess().getModeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Check_assertion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_assertion__Group__0__Impl
	rule__Check_assertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getCheckKeyword_0()); }

	Check 

{ after(grammarAccess.getCheck_assertionAccess().getCheckKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_assertion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_assertion__Group__1__Impl
	rule__Check_assertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getRootAssignment_1()); }
(rule__Check_assertion__RootAssignment_1)?
{ after(grammarAccess.getCheck_assertionAccess().getRootAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_assertion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_assertion__Group__2__Impl
	rule__Check_assertion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getInmodeAssignment_2()); }
(rule__Check_assertion__InmodeAssignment_2)?
{ after(grammarAccess.getCheck_assertionAccess().getInmodeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_assertion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_assertion__Group__3__Impl
	rule__Check_assertion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getLeftParenthesisKeyword_3()); }

	LeftParenthesis 

{ after(grammarAccess.getCheck_assertionAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_assertion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_assertion__Group__4__Impl
	rule__Check_assertion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getExprAssignment_4()); }
(rule__Check_assertion__ExprAssignment_4)
{ after(grammarAccess.getCheck_assertionAccess().getExprAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_assertion__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_assertion__Group__5__Impl
	rule__Check_assertion__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getRightParenthesisKeyword_5()); }

	RightParenthesis 

{ after(grammarAccess.getCheck_assertionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_assertion__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_assertion__Group__6__Impl
	rule__Check_assertion__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getGroup_6()); }
(rule__Check_assertion__Group_6__0)?
{ after(grammarAccess.getCheck_assertionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_assertion__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_assertion__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getSemicolonKeyword_7()); }

	Semicolon 

{ after(grammarAccess.getCheck_assertionAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Check_assertion__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_assertion__Group_6__0__Impl
	rule__Check_assertion__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getFailKeyword_6_0()); }

	Fail 

{ after(grammarAccess.getCheck_assertionAccess().getFailKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check_assertion__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check_assertion__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getStrAssignment_6_1()); }
(rule__Check_assertion__StrAssignment_6_1)
{ after(grammarAccess.getCheck_assertionAccess().getStrAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Element_reference__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_0__0__Impl
	rule__Element_reference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getElement_referenceAction_0_0()); }
(

)
{ after(grammarAccess.getElement_referenceAccess().getElement_referenceAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_reference__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getSelfAssignment_0_1()); }
(rule__Element_reference__SelfAssignment_0_1)
{ after(grammarAccess.getElement_referenceAccess().getSelfAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Element_reference__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_3__0__Impl
	rule__Element_reference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getClassifierKeyword_3_0()); }

	Classifier 

{ after(grammarAccess.getElement_referenceAccess().getClassifierKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_reference__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_3__1__Impl
	rule__Element_reference__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getLeftParenthesisKeyword_3_1()); }

	LeftParenthesis 

{ after(grammarAccess.getElement_referenceAccess().getLeftParenthesisKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_reference__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_3__2__Impl
	rule__Element_reference__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getCrefAssignment_3_2()); }
(rule__Element_reference__CrefAssignment_3_2)
{ after(grammarAccess.getElement_referenceAccess().getCrefAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_reference__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getRightParenthesisKeyword_3_3()); }

	RightParenthesis 

{ after(grammarAccess.getElement_referenceAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Element_reference__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_4__0__Impl
	rule__Element_reference__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getReferenceKeyword_4_0()); }

	Reference 

{ after(grammarAccess.getElement_referenceAccess().getReferenceKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_reference__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_4__1__Impl
	rule__Element_reference__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getLeftParenthesisKeyword_4_1()); }

	LeftParenthesis 

{ after(grammarAccess.getElement_referenceAccess().getLeftParenthesisKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_reference__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_4__2__Impl
	rule__Element_reference__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getGroup_4_2()); }
(rule__Element_reference__Group_4_2__0)*
{ after(grammarAccess.getElement_referenceAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_reference__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_4__3__Impl
	rule__Element_reference__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getRefAssignment_4_3()); }
(rule__Element_reference__RefAssignment_4_3)
{ after(grammarAccess.getElement_referenceAccess().getRefAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_reference__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getRightParenthesisKeyword_4_4()); }

	RightParenthesis 

{ after(grammarAccess.getElement_referenceAccess().getRightParenthesisKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Element_reference__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_4_2__0__Impl
	rule__Element_reference__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getPackageNameAssignment_4_2_0()); }
(rule__Element_reference__PackageNameAssignment_4_2_0)
{ after(grammarAccess.getElement_referenceAccess().getPackageNameAssignment_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Element_reference__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Element_reference__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getColonColonKeyword_4_2_1()); }

	ColonColon 

{ after(grammarAccess.getElement_referenceAccess().getColonColonKeyword_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainmentPathElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group__0__Impl
	rule__ContainmentPathElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup_0()); }
(rule__ContainmentPathElement__Group_0__0)
{ after(grammarAccess.getContainmentPathElementAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup_1()); }
(rule__ContainmentPathElement__Group_1__0)?
{ after(grammarAccess.getContainmentPathElementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainmentPathElement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_0__0__Impl
	rule__ContainmentPathElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0_0()); }
(rule__ContainmentPathElement__NamedElementAssignment_0_0)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_0_1()); }
(rule__ContainmentPathElement__ArrayRangeAssignment_0_1)?
{ after(grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainmentPathElement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_1__0__Impl
	rule__ContainmentPathElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getFullStopKeyword_1_0()); }

	FullStop 

{ after(grammarAccess.getContainmentPathElementAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getPathAssignment_1_1()); }
(rule__ContainmentPathElement__PathAssignment_1_1)
{ after(grammarAccess.getContainmentPathElementAccess().getPathAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__0__Impl
	rule__ArrayRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_0()); }

	LeftSquareBracket 

{ after(grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__1__Impl
	rule__ArrayRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_1()); }
(rule__ArrayRange__LowerBoundAssignment_1)
{ after(grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__2__Impl
	rule__ArrayRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getGroup_2()); }
(rule__ArrayRange__Group_2__0)?
{ after(grammarAccess.getArrayRangeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_3()); }

	RightSquareBracket 

{ after(grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayRange__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group_2__0__Impl
	rule__ArrayRange__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_2_0()); }

	FullStopFullStop 

{ after(grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_2_1()); }
(rule__ArrayRange__UpperBoundAssignment_2_1)
{ after(grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageEnforce__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageEnforce__Group__0__Impl
	rule__PackageEnforce__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageEnforce__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageEnforceAccess().getEnforceKeyword_0()); }

	Enforce 

{ after(grammarAccess.getPackageEnforceAccess().getEnforceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageEnforce__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageEnforce__Group__1__Impl
	rule__PackageEnforce__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageEnforce__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageEnforceAccess().getViewpointAssignment_1()); }
(rule__PackageEnforce__ViewpointAssignment_1)
{ after(grammarAccess.getPackageEnforceAccess().getViewpointAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageEnforce__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageEnforce__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageEnforce__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageEnforceAccess().getSemicolonKeyword_2()); }

	Semicolon 

{ after(grammarAccess.getPackageEnforceAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MCSAnnexSubclause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group__0__Impl
	rule__MCSAnnexSubclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getMCSAnnexSubclauseAction_0()); }
(

)
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getMCSAnnexSubclauseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group__1__Impl
	rule__MCSAnnexSubclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getGroup_1()); }
(rule__MCSAnnexSubclause__Group_1__0)?
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group__2__Impl
	rule__MCSAnnexSubclause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getGroup_2()); }
(rule__MCSAnnexSubclause__Group_2__0)?
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group__3__Impl
	rule__MCSAnnexSubclause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getGroup_3()); }
(rule__MCSAnnexSubclause__Group_3__0)?
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group__4__Impl
	rule__MCSAnnexSubclause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getGroup_4()); }
(rule__MCSAnnexSubclause__Group_4__0)
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getGroup_5()); }
(rule__MCSAnnexSubclause__Group_5__0)?
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MCSAnnexSubclause__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group_1__0__Impl
	rule__MCSAnnexSubclause__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getTypesKeyword_1_0()); }

	Types 

{ after(grammarAccess.getMCSAnnexSubclauseAccess().getTypesKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getTypesAssignment_1_1()); }
(rule__MCSAnnexSubclause__TypesAssignment_1_1)
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getTypesAssignment_1_1()); }
)
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getTypesAssignment_1_1()); }
(rule__MCSAnnexSubclause__TypesAssignment_1_1)*
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getTypesAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexSubclause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group_2__0__Impl
	rule__MCSAnnexSubclause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getConstantsKeyword_2_0()); }

	Constants 

{ after(grammarAccess.getMCSAnnexSubclauseAccess().getConstantsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getConstantsAssignment_2_1()); }
(rule__MCSAnnexSubclause__ConstantsAssignment_2_1)
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getConstantsAssignment_2_1()); }
)
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getConstantsAssignment_2_1()); }
(rule__MCSAnnexSubclause__ConstantsAssignment_2_1)*
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getConstantsAssignment_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexSubclause__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group_3__0__Impl
	rule__MCSAnnexSubclause__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getFunctionsKeyword_3_0()); }

	Functions 

{ after(grammarAccess.getMCSAnnexSubclauseAccess().getFunctionsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getFunctionsAssignment_3_1()); }
(rule__MCSAnnexSubclause__FunctionsAssignment_3_1)
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getFunctionsAssignment_3_1()); }
)
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getFunctionsAssignment_3_1()); }
(rule__MCSAnnexSubclause__FunctionsAssignment_3_1)*
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getFunctionsAssignment_3_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexSubclause__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group_4__0__Impl
	rule__MCSAnnexSubclause__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getTheoremsKeyword_4_0()); }

	Theorems 

{ after(grammarAccess.getMCSAnnexSubclauseAccess().getTheoremsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getTheoremsAssignment_4_1()); }
(rule__MCSAnnexSubclause__TheoremsAssignment_4_1)
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getTheoremsAssignment_4_1()); }
)
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getTheoremsAssignment_4_1()); }
(rule__MCSAnnexSubclause__TheoremsAssignment_4_1)*
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getTheoremsAssignment_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSAnnexSubclause__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group_5__0__Impl
	rule__MCSAnnexSubclause__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getEnforceclausesAssignment_5_0()); }
(rule__MCSAnnexSubclause__EnforceclausesAssignment_5_0)
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getEnforceclausesAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSAnnexSubclause__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSAnnexSubclause__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getEnforceclausesAssignment_5_1()); }
(rule__MCSAnnexSubclause__EnforceclausesAssignment_5_1)*
{ after(grammarAccess.getMCSAnnexSubclauseAccess().getEnforceclausesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifierEnforce__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierEnforce__Group__0__Impl
	rule__ClassifierEnforce__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierEnforce__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierEnforceAccess().getEnforceKeyword_0()); }

	Enforce 

{ after(grammarAccess.getClassifierEnforceAccess().getEnforceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierEnforce__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierEnforce__Group__1__Impl
	rule__ClassifierEnforce__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierEnforce__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierEnforceAccess().getViewpointAssignment_1()); }
(rule__ClassifierEnforce__ViewpointAssignment_1)
{ after(grammarAccess.getClassifierEnforceAccess().getViewpointAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierEnforce__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierEnforce__Group__2__Impl
	rule__ClassifierEnforce__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierEnforce__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierEnforceAccess().getScriptAssignment_2()); }
(rule__ClassifierEnforce__ScriptAssignment_2)
{ after(grammarAccess.getClassifierEnforceAccess().getScriptAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierEnforce__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierEnforce__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierEnforce__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierEnforceAccess().getSemicolonKeyword_3()); }

	Semicolon 

{ after(grammarAccess.getClassifierEnforceAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassifierScript__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierScript__Group__0__Impl
	rule__ClassifierScript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierScript__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierScriptAccess().getScriptKeyword_0()); }

	Script 

{ after(grammarAccess.getClassifierScriptAccess().getScriptKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierScript__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierScript__Group__1__Impl
	rule__ClassifierScript__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierScript__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierScriptAccess().getC_blockAssignment_1()); }
(rule__ClassifierScript__C_blockAssignment_1)*
{ after(grammarAccess.getClassifierScriptAccess().getC_blockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierScript__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierScript__Group__2__Impl
	rule__ClassifierScript__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierScript__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierScriptAccess().getEndscriptKeyword_2()); }

	Endscript 

{ after(grammarAccess.getClassifierScriptAccess().getEndscriptKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierScript__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierScript__Group__3__Impl
	rule__ClassifierScript__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierScript__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierScriptAccess().getRefAssignment_3()); }
(rule__ClassifierScript__RefAssignment_3)
{ after(grammarAccess.getClassifierScriptAccess().getRefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierScript__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierScript__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierScript__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierScriptAccess().getSemicolonKeyword_4()); }

	Semicolon 

{ after(grammarAccess.getClassifierScriptAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__0__Impl
	rule__Function_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getNameAssignment_0()); }
(rule__Function_declaration__NameAssignment_0)
{ after(grammarAccess.getFunction_declarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__1__Impl
	rule__Function_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getAlternatives_1()); }
(rule__Function_declaration__Alternatives_1)
{ after(grammarAccess.getFunction_declarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__2__Impl
	rule__Function_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getColonEqualsSignKeyword_2()); }

	ColonEqualsSign 

{ after(grammarAccess.getFunction_declarationAccess().getColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__3__Impl
	rule__Function_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getAlternatives_3()); }
(rule__Function_declaration__Alternatives_3)
{ after(grammarAccess.getFunction_declarationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_4()); }

	Semicolon 

{ after(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function_declaration__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_0__0__Impl
	rule__Function_declaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getLeftParenthesisKeyword_1_0_0()); }

	LeftParenthesis 

{ after(grammarAccess.getFunction_declarationAccess().getLeftParenthesisKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_0__1__Impl
	rule__Function_declaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getArgAssignment_1_0_1()); }
(rule__Function_declaration__ArgAssignment_1_0_1)
{ after(grammarAccess.getFunction_declarationAccess().getArgAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_0__2__Impl
	rule__Function_declaration__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getGroup_1_0_2()); }
(rule__Function_declaration__Group_1_0_2__0)*
{ after(grammarAccess.getFunction_declarationAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_0__3__Impl
	rule__Function_declaration__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getRightParenthesisKeyword_1_0_3()); }

	RightParenthesis 

{ after(grammarAccess.getFunction_declarationAccess().getRightParenthesisKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getGroup_1_0_4()); }
(rule__Function_declaration__Group_1_0_4__0)?
{ after(grammarAccess.getFunction_declarationAccess().getGroup_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function_declaration__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_0_2__0__Impl
	rule__Function_declaration__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getCommaKeyword_1_0_2_0()); }

	Comma 

{ after(grammarAccess.getFunction_declarationAccess().getCommaKeyword_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getArgAssignment_1_0_2_1()); }
(rule__Function_declaration__ArgAssignment_1_0_2_1)
{ after(grammarAccess.getFunction_declarationAccess().getArgAssignment_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function_declaration__Group_1_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_0_4__0__Impl
	rule__Function_declaration__Group_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getReturnsKeyword_1_0_4_0()); }

	Returns 

{ after(grammarAccess.getFunction_declarationAccess().getReturnsKeyword_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group_1_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getOutAssignment_1_0_4_1()); }
(rule__Function_declaration__OutAssignment_1_0_4_1)
{ after(grammarAccess.getFunction_declarationAccess().getOutAssignment_1_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function_declaration__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_1__0__Impl
	rule__Function_declaration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getColonKeyword_1_1_0()); }

	Colon 

{ after(grammarAccess.getFunction_declarationAccess().getColonKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getAlternatives_1_1_1()); }
(rule__Function_declaration__Alternatives_1_1_1)
{ after(grammarAccess.getFunction_declarationAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Argument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getArgumentAction_0()); }
(

)
{ after(grammarAccess.getArgumentAccess().getArgumentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__1__Impl
	rule__Argument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
(rule__Argument__NameAssignment_1)
{ after(grammarAccess.getArgumentAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getGroup_2()); }
(rule__Argument__Group_2__0)?
{ after(grammarAccess.getArgumentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Argument__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_2__0__Impl
	rule__Argument__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getColonKeyword_2_0()); }

	Colon 

{ after(grammarAccess.getArgumentAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getArg_typeAssignment_2_1()); }
(rule__Argument__Arg_typeAssignment_2_1)
{ after(grammarAccess.getArgumentAccess().getArg_typeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group__0__Impl
	rule__MCSClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getGroup_0()); }
(rule__MCSClosure__Group_0__0)
{ after(grammarAccess.getMCSClosureAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group__1__Impl
	rule__MCSClosure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getGroup_1()); }
(rule__MCSClosure__Group_1__0)?
{ after(grammarAccess.getMCSClosureAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSClosure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group__2__Impl
	rule__MCSClosure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getExpressionAssignment_2()); }
(rule__MCSClosure__ExpressionAssignment_2)
{ after(grammarAccess.getMCSClosureAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSClosure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getRightSquareBracketKeyword_3()); }

	RightSquareBracket 

{ after(grammarAccess.getMCSClosureAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MCSClosure__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getGroup_0_0()); }
(rule__MCSClosure__Group_0_0__0)
{ after(grammarAccess.getMCSClosureAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MCSClosure__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group_0_0__0__Impl
	rule__MCSClosure__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getMCSClosureAction_0_0_0()); }
(

)
{ after(grammarAccess.getMCSClosureAccess().getMCSClosureAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSClosure__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getLeftSquareBracketKeyword_0_0_1()); }

	LeftSquareBracket 

{ after(grammarAccess.getMCSClosureAccess().getLeftSquareBracketKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSClosure__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getGroup_1_0()); }
(rule__MCSClosure__Group_1_0__0)
{ after(grammarAccess.getMCSClosureAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MCSClosure__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group_1_0__0__Impl
	rule__MCSClosure__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getGroup_1_0_0()); }
(rule__MCSClosure__Group_1_0_0__0)?
{ after(grammarAccess.getMCSClosureAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSClosure__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getExplicitSyntaxAssignment_1_0_1()); }
(rule__MCSClosure__ExplicitSyntaxAssignment_1_0_1)
{ after(grammarAccess.getMCSClosureAccess().getExplicitSyntaxAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSClosure__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group_1_0_0__0__Impl
	rule__MCSClosure__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0()); }
(rule__MCSClosure__DeclaredFormalParametersAssignment_1_0_0_0)
{ after(grammarAccess.getMCSClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSClosure__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getGroup_1_0_0_1()); }
(rule__MCSClosure__Group_1_0_0_1__0)*
{ after(grammarAccess.getMCSClosureAccess().getGroup_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MCSClosure__Group_1_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group_1_0_0_1__0__Impl
	rule__MCSClosure__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group_1_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getCommaKeyword_1_0_0_1_0()); }

	Comma 

{ after(grammarAccess.getMCSClosureAccess().getCommaKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MCSClosure__Group_1_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MCSClosure__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__Group_1_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1()); }
(rule__MCSClosure__DeclaredFormalParametersAssignment_1_0_0_1_1)
{ after(grammarAccess.getMCSClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Theorem_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__0__Impl
	rule__Theorem_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getTheoremKeyword_0()); }

	Theorem 

{ after(grammarAccess.getTheorem_declarationAccess().getTheoremKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__1__Impl
	rule__Theorem_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getNameAssignment_1()); }
(rule__Theorem_declaration__NameAssignment_1)
{ after(grammarAccess.getTheorem_declarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__2__Impl
	rule__Theorem_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getMlAssignment_2()); }
(rule__Theorem_declaration__MlAssignment_2)?
{ after(grammarAccess.getTheorem_declarationAccess().getMlAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__3__Impl
	rule__Theorem_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getLocalsAssignment_3()); }
(rule__Theorem_declaration__LocalsAssignment_3)*
{ after(grammarAccess.getTheorem_declarationAccess().getLocalsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__4__Impl
	rule__Theorem_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getStatementsAssignment_4()); }
(rule__Theorem_declaration__StatementsAssignment_4)*
{ after(grammarAccess.getTheorem_declarationAccess().getStatementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__5__Impl
	rule__Theorem_declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getEndKeyword_5()); }

	End 

{ after(grammarAccess.getTheorem_declarationAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__6__Impl
	rule__Theorem_declaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getEndnameAssignment_6()); }
(rule__Theorem_declaration__EndnameAssignment_6)
{ after(grammarAccess.getTheorem_declarationAccess().getEndnameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Theorem_declaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Theorem_declaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getSemicolonKeyword_7()); }

	Semicolon 

{ after(grammarAccess.getTheorem_declarationAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__In_modes_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__In_modes_list__Group__0__Impl
	rule__In_modes_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__In_modes_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIn_modes_listAccess().getInKeyword_0()); }

	In 

{ after(grammarAccess.getIn_modes_listAccess().getInKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__In_modes_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__In_modes_list__Group__1__Impl
	rule__In_modes_list__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__In_modes_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIn_modes_listAccess().getModesKeyword_1()); }

	Modes 

{ after(grammarAccess.getIn_modes_listAccess().getModesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__In_modes_list__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__In_modes_list__Group__2__Impl
	rule__In_modes_list__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__In_modes_list__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIn_modes_listAccess().getLeftParenthesisKeyword_2()); }

	LeftParenthesis 

{ after(grammarAccess.getIn_modes_listAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__In_modes_list__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__In_modes_list__Group__3__Impl
	rule__In_modes_list__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__In_modes_list__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIn_modes_listAccess().getModesAssignment_3()); }
(rule__In_modes_list__ModesAssignment_3)
{ after(grammarAccess.getIn_modes_listAccess().getModesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__In_modes_list__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__In_modes_list__Group__4__Impl
	rule__In_modes_list__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__In_modes_list__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIn_modes_listAccess().getGroup_4()); }
(rule__In_modes_list__Group_4__0)*
{ after(grammarAccess.getIn_modes_listAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__In_modes_list__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__In_modes_list__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__In_modes_list__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIn_modes_listAccess().getRightParenthesisKeyword_5()); }

	RightParenthesis 

{ after(grammarAccess.getIn_modes_listAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__In_modes_list__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__In_modes_list__Group_4__0__Impl
	rule__In_modes_list__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__In_modes_list__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIn_modes_listAccess().getCommaKeyword_4_0()); }

	Comma 

{ after(grammarAccess.getIn_modes_listAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__In_modes_list__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__In_modes_list__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__In_modes_list__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIn_modes_listAccess().getModesAssignment_4_1()); }
(rule__In_modes_list__ModesAssignment_4_1)
{ after(grammarAccess.getIn_modes_listAccess().getModesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Local_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Local_declaration__Group__0__Impl
	rule__Local_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getConstAssignment_0()); }
(rule__Local_declaration__ConstAssignment_0)?
{ after(grammarAccess.getLocal_declarationAccess().getConstAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Local_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Local_declaration__Group__1__Impl
	rule__Local_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getNameAssignment_1()); }
(rule__Local_declaration__NameAssignment_1)
{ after(grammarAccess.getLocal_declarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Local_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Local_declaration__Group__2__Impl
	rule__Local_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getTypeAssignment_2()); }
(rule__Local_declaration__TypeAssignment_2)?
{ after(grammarAccess.getLocal_declarationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Local_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Local_declaration__Group__3__Impl
	rule__Local_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getColonEqualsSignKeyword_3()); }

	ColonEqualsSign 

{ after(grammarAccess.getLocal_declarationAccess().getColonEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Local_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Local_declaration__Group__4__Impl
	rule__Local_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getAlternatives_4()); }
(rule__Local_declaration__Alternatives_4)
{ after(grammarAccess.getLocal_declarationAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Local_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Local_declaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getSemicolonKeyword_5()); }

	Semicolon 

{ after(grammarAccess.getLocal_declarationAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__UnnamedFunctionType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedFunctionType__Group__0__Impl
	rule__UnnamedFunctionType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getLeftParenthesisKeyword_0()); }

	LeftParenthesis 

{ after(grammarAccess.getUnnamedFunctionTypeAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedFunctionType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedFunctionType__Group__1__Impl
	rule__UnnamedFunctionType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getParmAssignment_1()); }
(rule__UnnamedFunctionType__ParmAssignment_1)?
{ after(grammarAccess.getUnnamedFunctionTypeAccess().getParmAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedFunctionType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedFunctionType__Group__2__Impl
	rule__UnnamedFunctionType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getGroup_2()); }
(rule__UnnamedFunctionType__Group_2__0)
{ after(grammarAccess.getUnnamedFunctionTypeAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getGroup_2()); }
(rule__UnnamedFunctionType__Group_2__0)*
{ after(grammarAccess.getUnnamedFunctionTypeAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedFunctionType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedFunctionType__Group__3__Impl
	rule__UnnamedFunctionType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getUnnamedFunctionTypeAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedFunctionType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedFunctionType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getGroup_4()); }
(rule__UnnamedFunctionType__Group_4__0)?
{ after(grammarAccess.getUnnamedFunctionTypeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnnamedFunctionType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedFunctionType__Group_2__0__Impl
	rule__UnnamedFunctionType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getCommaKeyword_2_0()); }

	Comma 

{ after(grammarAccess.getUnnamedFunctionTypeAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedFunctionType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedFunctionType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getParmAssignment_2_1()); }
(rule__UnnamedFunctionType__ParmAssignment_2_1)
{ after(grammarAccess.getUnnamedFunctionTypeAccess().getParmAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedFunctionType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedFunctionType__Group_4__0__Impl
	rule__UnnamedFunctionType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getOutspecAssignment_4_0()); }
(rule__UnnamedFunctionType__OutspecAssignment_4_0)
{ after(grammarAccess.getUnnamedFunctionTypeAccess().getOutspecAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedFunctionType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedFunctionType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getResultAssignment_4_1()); }
(rule__UnnamedFunctionType__ResultAssignment_4_1)
{ after(grammarAccess.getUnnamedFunctionTypeAccess().getResultAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedBooleanType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedBooleanType__Group__0__Impl
	rule__UnnamedBooleanType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedBooleanType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedBooleanTypeAccess().getAadlBooleanAction_0()); }
(

)
{ after(grammarAccess.getUnnamedBooleanTypeAccess().getAadlBooleanAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedBooleanType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedBooleanType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedBooleanType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedBooleanTypeAccess().getAadlbooleanKeyword_1()); }

	Aadlboolean 

{ after(grammarAccess.getUnnamedBooleanTypeAccess().getAadlbooleanKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedStringType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedStringType__Group__0__Impl
	rule__UnnamedStringType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedStringType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedStringTypeAccess().getAadlStringAction_0()); }
(

)
{ after(grammarAccess.getUnnamedStringTypeAccess().getAadlStringAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedStringType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedStringType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedStringType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedStringTypeAccess().getAadlstringKeyword_1()); }

	Aadlstring 

{ after(grammarAccess.getUnnamedStringTypeAccess().getAadlstringKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedEnumerationType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group__0__Impl
	rule__UnnamedEnumerationType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getEnumerationKeyword_0()); }

	Enumeration 

{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getEnumerationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedEnumerationType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group__1__Impl
	rule__UnnamedEnumerationType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedEnumerationType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group__2__Impl
	rule__UnnamedEnumerationType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralAssignment_2()); }
(rule__UnnamedEnumerationType__OwnedLiteralAssignment_2)
{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedEnumerationType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group__3__Impl
	rule__UnnamedEnumerationType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getGroup_3()); }
(rule__UnnamedEnumerationType__Group_3__0)*
{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedEnumerationType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnnamedEnumerationType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group_3__0__Impl
	rule__UnnamedEnumerationType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getCommaKeyword_3_0()); }

	Comma 

{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedEnumerationType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedEnumerationType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralAssignment_3_1()); }
(rule__UnnamedEnumerationType__OwnedLiteralAssignment_3_1)
{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedUnitsType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group__0__Impl
	rule__UnnamedUnitsType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getUnitsKeyword_0()); }

	Units 

{ after(grammarAccess.getUnnamedUnitsTypeAccess().getUnitsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedUnitsType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group__1__Impl
	rule__UnnamedUnitsType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getUnnamedUnitsTypeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedUnitsType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group__2__Impl
	rule__UnnamedUnitsType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralAssignment_2()); }
(rule__UnnamedUnitsType__OwnedLiteralAssignment_2)
{ after(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedUnitsType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group__3__Impl
	rule__UnnamedUnitsType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getGroup_3()); }
(rule__UnnamedUnitsType__Group_3__0)*
{ after(grammarAccess.getUnnamedUnitsTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedUnitsType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getUnnamedUnitsTypeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UnnamedUnitsType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group_3__0__Impl
	rule__UnnamedUnitsType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getCommaKeyword_3_0()); }

	Comma 

{ after(grammarAccess.getUnnamedUnitsTypeAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedUnitsType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedUnitsType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralAssignment_3_1()); }
(rule__UnnamedUnitsType__OwnedLiteralAssignment_3_1)
{ after(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitLiteralConversion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitLiteralConversion__Group__0__Impl
	rule__UnitLiteralConversion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getNameAssignment_0()); }
(rule__UnitLiteralConversion__NameAssignment_0)
{ after(grammarAccess.getUnitLiteralConversionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitLiteralConversion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitLiteralConversion__Group__1__Impl
	rule__UnitLiteralConversion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getUnitLiteralConversionAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitLiteralConversion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitLiteralConversion__Group__2__Impl
	rule__UnitLiteralConversion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitAssignment_2()); }
(rule__UnitLiteralConversion__BaseUnitAssignment_2)
{ after(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitLiteralConversion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitLiteralConversion__Group__3__Impl
	rule__UnitLiteralConversion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getAsteriskKeyword_3()); }

	Asterisk 

{ after(grammarAccess.getUnitLiteralConversionAccess().getAsteriskKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitLiteralConversion__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitLiteralConversion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getFactorAssignment_4()); }
(rule__UnitLiteralConversion__FactorAssignment_4)
{ after(grammarAccess.getUnitLiteralConversionAccess().getFactorAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SignedInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedInt__Group__0__Impl
	rule__SignedInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getAlternatives_0()); }
(rule__SignedInt__Alternatives_0)?
{ after(grammarAccess.getSignedIntAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getNumberParserRuleCall_1()); }
	ruleNumber
{ after(grammarAccess.getSignedIntAccess().getNumberParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedReal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedReal__Group__0__Impl
	rule__SignedReal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getAlternatives_0()); }
(rule__SignedReal__Alternatives_0)?
{ after(grammarAccess.getSignedRealAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedReal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedReal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getNumberParserRuleCall_1()); }
	ruleNumber
{ after(grammarAccess.getSignedRealAccess().getNumberParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedIntegerType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group__0__Impl
	rule__UnnamedIntegerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getAadlIntegerAction_0()); }
(

)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getAadlIntegerAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedIntegerType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group__1__Impl
	rule__UnnamedIntegerType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getAadlintegerKeyword_1()); }

	Aadlinteger 

{ after(grammarAccess.getUnnamedIntegerTypeAccess().getAadlintegerKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedIntegerType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group__2__Impl
	rule__UnnamedIntegerType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getRangeAssignment_2()); }
(rule__UnnamedIntegerType__RangeAssignment_2)?
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getRangeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedIntegerType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getAlternatives_3()); }
(rule__UnnamedIntegerType__Alternatives_3)?
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnnamedIntegerType__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group_3_1__0__Impl
	rule__UnnamedIntegerType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getUnitsKeyword_3_1_0()); }

	Units 

{ after(grammarAccess.getUnnamedIntegerTypeAccess().getUnitsKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedIntegerType__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedIntegerType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeAssignment_3_1_1()); }
(rule__UnnamedIntegerType__ReferencedUnitsTypeAssignment_3_1_1)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerRange__Group__0__Impl
	rule__IntegerRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getLowerBoundAssignment_0()); }
(rule__IntegerRange__LowerBoundAssignment_0)
{ after(grammarAccess.getIntegerRangeAccess().getLowerBoundAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerRange__Group__1__Impl
	rule__IntegerRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getFullStopFullStopKeyword_1()); }

	FullStopFullStop 

{ after(grammarAccess.getIntegerRangeAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerRange__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getUpperBoundAssignment_2()); }
(rule__IntegerRange__UpperBoundAssignment_2)
{ after(grammarAccess.getIntegerRangeAccess().getUpperBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntegerTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTerm__Group__0__Impl
	rule__IntegerTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getValueAssignment_0()); }
(rule__IntegerTerm__ValueAssignment_0)
{ after(grammarAccess.getIntegerTermAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getUnitAssignment_1()); }
(rule__IntegerTerm__UnitAssignment_1)?
{ after(grammarAccess.getIntegerTermAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedConstant__Group__0__Impl
	rule__SignedConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOpAssignment_0()); }
(rule__SignedConstant__OpAssignment_0)
{ after(grammarAccess.getSignedConstantAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionAssignment_1()); }
(rule__SignedConstant__OwnedPropertyExpressionAssignment_1)
{ after(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedRealType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group__0__Impl
	rule__UnnamedRealType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getAadlRealAction_0()); }
(

)
{ after(grammarAccess.getUnnamedRealTypeAccess().getAadlRealAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRealType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group__1__Impl
	rule__UnnamedRealType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getAadlrealKeyword_1()); }

	Aadlreal 

{ after(grammarAccess.getUnnamedRealTypeAccess().getAadlrealKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRealType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group__2__Impl
	rule__UnnamedRealType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getRangeAssignment_2()); }
(rule__UnnamedRealType__RangeAssignment_2)?
{ after(grammarAccess.getUnnamedRealTypeAccess().getRangeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRealType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getAlternatives_3()); }
(rule__UnnamedRealType__Alternatives_3)?
{ after(grammarAccess.getUnnamedRealTypeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnnamedRealType__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group_3_1__0__Impl
	rule__UnnamedRealType__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getUnitsKeyword_3_1_0()); }

	Units 

{ after(grammarAccess.getUnnamedRealTypeAccess().getUnitsKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRealType__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRealType__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeAssignment_3_1_1()); }
(rule__UnnamedRealType__ReferencedUnitsTypeAssignment_3_1_1)
{ after(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealRange__Group__0__Impl
	rule__RealRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getLowerBoundAssignment_0()); }
(rule__RealRange__LowerBoundAssignment_0)
{ after(grammarAccess.getRealRangeAccess().getLowerBoundAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealRange__Group__1__Impl
	rule__RealRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getFullStopFullStopKeyword_1()); }

	FullStopFullStop 

{ after(grammarAccess.getRealRangeAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealRange__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getUpperBoundAssignment_2()); }
(rule__RealRange__UpperBoundAssignment_2)
{ after(grammarAccess.getRealRangeAccess().getUpperBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RealTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTerm__Group__0__Impl
	rule__RealTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getValueAssignment_0()); }
(rule__RealTerm__ValueAssignment_0)
{ after(grammarAccess.getRealTermAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getUnitAssignment_1()); }
(rule__RealTerm__UnitAssignment_1)?
{ after(grammarAccess.getRealTermAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedRangeType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRangeType__Group__0__Impl
	rule__UnnamedRangeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getRangeTypeAction_0()); }
(

)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getRangeTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRangeType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRangeType__Group__1__Impl
	rule__UnnamedRangeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getRangeKeyword_1()); }

	Range 

{ after(grammarAccess.getUnnamedRangeTypeAccess().getRangeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRangeType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRangeType__Group__2__Impl
	rule__UnnamedRangeType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getOfKeyword_2()); }

	Of 

{ after(grammarAccess.getUnnamedRangeTypeAccess().getOfKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedRangeType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedRangeType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getAlternatives_3()); }
(rule__UnnamedRangeType__Alternatives_3)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnnamedClassifierType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedClassifierType__Group__0__Impl
	rule__UnnamedClassifierType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierTypeAction_0()); }
(

)
{ after(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedClassifierType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedClassifierType__Group__1__Impl
	rule__UnnamedClassifierType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierKeyword_1()); }

	Classifier 

{ after(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedClassifierType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedClassifierType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getGroup_2()); }
(rule__UnnamedClassifierType__Group_2__0)?
{ after(grammarAccess.getUnnamedClassifierTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnnamedClassifierType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedClassifierType__Group_2__0__Impl
	rule__UnnamedClassifierType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getLeftParenthesisKeyword_2_0()); }

	LeftParenthesis 

{ after(grammarAccess.getUnnamedClassifierTypeAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedClassifierType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedClassifierType__Group_2__1__Impl
	rule__UnnamedClassifierType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierReferenceAssignment_2_1()); }
(rule__UnnamedClassifierType__ClassifierReferenceAssignment_2_1)
{ after(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierReferenceAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedClassifierType__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedClassifierType__Group_2__2__Impl
	rule__UnnamedClassifierType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getGroup_2_2()); }
(rule__UnnamedClassifierType__Group_2_2__0)*
{ after(grammarAccess.getUnnamedClassifierTypeAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedClassifierType__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedClassifierType__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getRightParenthesisKeyword_2_3()); }

	RightParenthesis 

{ after(grammarAccess.getUnnamedClassifierTypeAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnnamedClassifierType__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedClassifierType__Group_2_2__0__Impl
	rule__UnnamedClassifierType__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getCommaKeyword_2_2_0()); }

	Comma 

{ after(grammarAccess.getUnnamedClassifierTypeAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedClassifierType__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedClassifierType__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierReferenceAssignment_2_2_1()); }
(rule__UnnamedClassifierType__ClassifierReferenceAssignment_2_2_1)
{ after(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierReferenceAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnnamedReferenceType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedReferenceType__Group__0__Impl
	rule__UnnamedReferenceType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getReferenceKeyword_0()); }

	Reference 

{ after(grammarAccess.getUnnamedReferenceTypeAccess().getReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedReferenceType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedReferenceType__Group__1__Impl
	rule__UnnamedReferenceType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getReferenceTypeAction_1()); }
(

)
{ after(grammarAccess.getUnnamedReferenceTypeAccess().getReferenceTypeAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedReferenceType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedReferenceType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getGroup_2()); }
(rule__UnnamedReferenceType__Group_2__0)?
{ after(grammarAccess.getUnnamedReferenceTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnnamedReferenceType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedReferenceType__Group_2__0__Impl
	rule__UnnamedReferenceType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getLeftParenthesisKeyword_2_0()); }

	LeftParenthesis 

{ after(grammarAccess.getUnnamedReferenceTypeAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedReferenceType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedReferenceType__Group_2__1__Impl
	rule__UnnamedReferenceType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getNamedElementReferenceAssignment_2_1()); }
(rule__UnnamedReferenceType__NamedElementReferenceAssignment_2_1)
{ after(grammarAccess.getUnnamedReferenceTypeAccess().getNamedElementReferenceAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedReferenceType__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedReferenceType__Group_2__2__Impl
	rule__UnnamedReferenceType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getGroup_2_2()); }
(rule__UnnamedReferenceType__Group_2_2__0)*
{ after(grammarAccess.getUnnamedReferenceTypeAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedReferenceType__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedReferenceType__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getRightParenthesisKeyword_2_3()); }

	RightParenthesis 

{ after(grammarAccess.getUnnamedReferenceTypeAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnnamedReferenceType__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedReferenceType__Group_2_2__0__Impl
	rule__UnnamedReferenceType__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getCommaKeyword_2_2_0()); }

	Comma 

{ after(grammarAccess.getUnnamedReferenceTypeAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnnamedReferenceType__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnnamedReferenceType__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getNamedElementReferenceAssignment_2_2_1()); }
(rule__UnnamedReferenceType__NamedElementReferenceAssignment_2_2_1)
{ after(grammarAccess.getUnnamedReferenceTypeAccess().getNamedElementReferenceAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QMReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QMReference__Group__0__Impl
	rule__QMReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QMReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQMReferenceAccess().getGroup_0()); }
(rule__QMReference__Group_0__0)?
{ after(grammarAccess.getQMReferenceAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QMReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QMReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QMReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getQMReferenceAccess().getMetaclassNameAssignment_1()); }
(rule__QMReference__MetaclassNameAssignment_1)
{ after(grammarAccess.getQMReferenceAccess().getMetaclassNameAssignment_1()); }
)
(
{ before(grammarAccess.getQMReferenceAccess().getMetaclassNameAssignment_1()); }
(rule__QMReference__MetaclassNameAssignment_1)*
{ after(grammarAccess.getQMReferenceAccess().getMetaclassNameAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QMReference__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QMReference__Group_0__0__Impl
	rule__QMReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QMReference__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQMReferenceAccess().getLeftCurlyBracketKeyword_0_0()); }

	LeftCurlyBracket 

{ after(grammarAccess.getQMReferenceAccess().getLeftCurlyBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QMReference__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QMReference__Group_0__1__Impl
	rule__QMReference__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QMReference__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQMReferenceAccess().getAnnexNameAssignment_0_1()); }
(rule__QMReference__AnnexNameAssignment_0_1)
{ after(grammarAccess.getQMReferenceAccess().getAnnexNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QMReference__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QMReference__Group_0__2__Impl
	rule__QMReference__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QMReference__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQMReferenceAccess().getRightCurlyBracketKeyword_0_2()); }

	RightCurlyBracket 

{ after(grammarAccess.getQMReferenceAccess().getRightCurlyBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QMReference__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QMReference__Group_0__3__Impl
	rule__QMReference__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QMReference__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQMReferenceAccess().getAsteriskKeyword_0_3()); }

	Asterisk 

{ after(grammarAccess.getQMReferenceAccess().getAsteriskKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QMReference__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QMReference__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QMReference__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQMReferenceAccess().getAsteriskKeyword_0_4()); }

	Asterisk 

{ after(grammarAccess.getQMReferenceAccess().getAsteriskKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Set_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group__0__Impl
	rule__Set_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getSetKeyword_0()); }

	Set 

{ after(grammarAccess.getSet_typeAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group__1__Impl
	rule__Set_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getOfKeyword_1()); }

	Of 

{ after(grammarAccess.getSet_typeAccess().getOfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getTypeAssignment_2()); }
(rule__Set_type__TypeAssignment_2)
{ after(grammarAccess.getSet_typeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__List_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List_type__Group__0__Impl
	rule__List_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getListKeyword_0()); }

	List 

{ after(grammarAccess.getList_typeAccess().getListKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List_type__Group__1__Impl
	rule__List_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getOfKeyword_1()); }

	Of 

{ after(grammarAccess.getList_typeAccess().getOfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__List_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__List_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getTypeAssignment_2()); }
(rule__List_type__TypeAssignment_2)
{ after(grammarAccess.getList_typeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Map_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map_type__Group__0__Impl
	rule__Map_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Map_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMap_typeAccess().getMapKeyword_0()); }

	Map 

{ after(grammarAccess.getMap_typeAccess().getMapKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map_type__Group__1__Impl
	rule__Map_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Map_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMap_typeAccess().getOfKeyword_1()); }

	Of 

{ after(grammarAccess.getMap_typeAccess().getOfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Map_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Map_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMap_typeAccess().getTypeAssignment_2()); }
(rule__Map_type__TypeAssignment_2)
{ after(grammarAccess.getMap_typeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Record_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__0__Impl
	rule__Record_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getRecordKeyword_0()); }

	Record 

{ after(grammarAccess.getRecord_typeAccess().getRecordKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__1__Impl
	rule__Record_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getLeftParenthesisSpaceKeyword_1()); }

	LeftParenthesisSpace 

{ after(grammarAccess.getRecord_typeAccess().getLeftParenthesisSpaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__2__Impl
	rule__Record_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRecord_typeAccess().getFieldAssignment_2()); }
(rule__Record_type__FieldAssignment_2)
{ after(grammarAccess.getRecord_typeAccess().getFieldAssignment_2()); }
)
(
{ before(grammarAccess.getRecord_typeAccess().getFieldAssignment_2()); }
(rule__Record_type__FieldAssignment_2)*
{ after(grammarAccess.getRecord_typeAccess().getFieldAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record_type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getRecord_typeAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Union_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group__0__Impl
	rule__Union_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getLeftParenthesisKeyword_0()); }

	LeftParenthesis 

{ after(grammarAccess.getUnion_typeAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group__1__Impl
	rule__Union_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getGroup_1()); }
(rule__Union_type__Group_1__0)?
{ after(grammarAccess.getUnion_typeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group__2__Impl
	rule__Union_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypeAssignment_2()); }
(rule__Union_type__TypeAssignment_2)
{ after(grammarAccess.getUnion_typeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group__3__Impl
	rule__Union_type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getGroup_3()); }
(rule__Union_type__Group_3__0)*
{ after(grammarAccess.getUnion_typeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getUnion_typeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Union_type__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group_1__0__Impl
	rule__Union_type__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypenameAssignment_1_0()); }
(rule__Union_type__TypenameAssignment_1_0)
{ after(grammarAccess.getUnion_typeAccess().getTypenameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getColonKeyword_1_1()); }

	Colon 

{ after(grammarAccess.getUnion_typeAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Union_type__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group_3__0__Impl
	rule__Union_type__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getCommaKeyword_3_0()); }

	Comma 

{ after(grammarAccess.getUnion_typeAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group_3__1__Impl
	rule__Union_type__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getGroup_3_1()); }
(rule__Union_type__Group_3_1__0)?
{ after(grammarAccess.getUnion_typeAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypeAssignment_3_2()); }
(rule__Union_type__TypeAssignment_3_2)
{ after(grammarAccess.getUnion_typeAccess().getTypeAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Union_type__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group_3_1__0__Impl
	rule__Union_type__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypenameAssignment_3_1_0()); }
(rule__Union_type__TypenameAssignment_3_1_0)
{ after(grammarAccess.getUnion_typeAccess().getTypenameAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union_type__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union_type__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getColonKeyword_3_1_1()); }

	Colon 

{ after(grammarAccess.getUnion_typeAccess().getColonKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Id_type_pair__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Id_type_pair__Group__0__Impl
	rule__Id_type_pair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Id_type_pair__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_type_pairAccess().getNameAssignment_0()); }
(rule__Id_type_pair__NameAssignment_0)
{ after(grammarAccess.getId_type_pairAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Id_type_pair__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Id_type_pair__Group__1__Impl
	rule__Id_type_pair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Id_type_pair__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_type_pairAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getId_type_pairAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Id_type_pair__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Id_type_pair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Id_type_pair__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_type_pairAccess().getTypeAssignment_2()); }
(rule__Id_type_pair__TypeAssignment_2)
{ after(grammarAccess.getId_type_pairAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FQCREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group__0__Impl
	rule__FQCREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFQCREFAccess().getGroup_0()); }
(rule__FQCREF__Group_0__0)
{ after(grammarAccess.getFQCREFAccess().getGroup_0()); }
)
(
{ before(grammarAccess.getFQCREFAccess().getGroup_0()); }
(rule__FQCREF__Group_0__0)*
{ after(grammarAccess.getFQCREFAccess().getGroup_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQCREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group__1__Impl
	rule__FQCREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQCREF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getGroup_2()); }
(rule__FQCREF__Group_2__0)?
{ after(grammarAccess.getFQCREFAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FQCREF__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group_0__0__Impl
	rule__FQCREF__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQCREF__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getColonColonKeyword_0_1()); }

	ColonColon 

{ after(grammarAccess.getFQCREFAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQCREF__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group_2__0__Impl
	rule__FQCREF__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getFullStopKeyword_2_0()); }

	FullStop 

{ after(grammarAccess.getFQCREFAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQCREF__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQCREF__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQCREF__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getFQCREFAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__0__Impl
	rule__QCREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getGroup_0()); }
(rule__QCREF__Group_0__0)*
{ after(grammarAccess.getQCREFAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__1__Impl
	rule__QCREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getGroup_2()); }
(rule__QCREF__Group_2__0)?
{ after(grammarAccess.getQCREFAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QCREF__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_0__0__Impl
	rule__QCREF__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }

	ColonColon 

{ after(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCREF__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_2__0__Impl
	rule__QCREF__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }

	FullStop 

{ after(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QPREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group__0__Impl
	rule__QPREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QPREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getGroup_1()); }
(rule__QPREF__Group_1__0)?
{ after(grammarAccess.getQPREFAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QPREF__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group_1__0__Impl
	rule__QPREF__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); }

	ColonColon 

{ after(grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QPREF__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAssignment__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__0__Impl
	rule__XAssignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0()); }
(

)
{ after(grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__1__Impl
	rule__XAssignment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureAssignment_0_1()); }
(rule__XAssignment__FeatureAssignment_0_1)
{ after(grammarAccess.getXAssignmentAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__2__Impl
	rule__XAssignment__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); }
	ruleOpSingleAssign
{ after(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getValueAssignment_0_3()); }
(rule__XAssignment__ValueAssignment_0_3)
{ after(grammarAccess.getXAssignmentAccess().getValueAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XAssignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1__0__Impl
	rule__XAssignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); }
	ruleXOrExpression
{ after(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1_1()); }
(rule__XAssignment__Group_1_1__0)?
{ after(grammarAccess.getXAssignmentAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAssignment__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1__0__Impl
	rule__XAssignment__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1_1_0()); }
(rule__XAssignment__Group_1_1_0__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getRightOperandAssignment_1_1_1()); }
(rule__XAssignment__RightOperandAssignment_1_1_1)
{ after(grammarAccess.getXAssignmentAccess().getRightOperandAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAssignment__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getGroup_1_1_0_0()); }
(rule__XAssignment__Group_1_1_0_0__0)
{ after(grammarAccess.getXAssignmentAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAssignment__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1_0_0__0__Impl
	rule__XAssignment__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAssignment__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAssignment__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureAssignment_1_1_0_0_1()); }
(rule__XAssignment__FeatureAssignment_1_1_0_0_1)
{ after(grammarAccess.getXAssignmentAccess().getFeatureAssignment_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpMultiAssign__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_5__0__Impl
	rule__OpMultiAssign__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0()); }

	LessThanSign 

{ after(grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiAssign__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_5__1__Impl
	rule__OpMultiAssign__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1()); }

	LessThanSign 

{ after(grammarAccess.getOpMultiAssignAccess().getLessThanSignKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiAssign__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2()); }

	EqualsSign 

{ after(grammarAccess.getOpMultiAssignAccess().getEqualsSignKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OpMultiAssign__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_6__0__Impl
	rule__OpMultiAssign__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); }

	GreaterThanSign 

{ after(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiAssign__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_6__1__Impl
	rule__OpMultiAssign__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1()); }
(
	GreaterThanSign 
)?
{ after(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpMultiAssign__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpMultiAssign__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiAssign__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2()); }

	GreaterThanSignEqualsSign 

{ after(grammarAccess.getOpMultiAssignAccess().getGreaterThanSignEqualsSignKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group__0__Impl
	rule__XOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); }
	ruleXAndExpression
{ after(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1()); }
(rule__XOrExpression__Group_1__0)*
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1__0__Impl
	rule__XOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1_0()); }
(rule__XOrExpression__Group_1_0__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XOrExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXOrExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1_0_0()); }
(rule__XOrExpression__Group_1_0_0__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XOrExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0_0__0__Impl
	rule__XOrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XOrExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group__0__Impl
	rule__XAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); }
	ruleXEqualityExpression
{ after(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1()); }
(rule__XAndExpression__Group_1__0)*
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1__0__Impl
	rule__XAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1_0()); }
(rule__XAndExpression__Group_1_0__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XAndExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXAndExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1_0_0()); }
(rule__XAndExpression__Group_1_0_0__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAndExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0_0__0__Impl
	rule__XAndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XAndExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group__0__Impl
	rule__XEqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); }
	ruleXRelationalExpression
{ after(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1()); }
(rule__XEqualityExpression__Group_1__0)*
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1__0__Impl
	rule__XEqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0()); }
(rule__XEqualityExpression__Group_1_0__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XEqualityExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0_0()); }
(rule__XEqualityExpression__Group_1_0_0__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XEqualityExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0_0__0__Impl
	rule__XEqualityExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XEqualityExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group__0__Impl
	rule__XRelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); }
	ruleXOtherOperatorExpression
{ after(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1()); }
(rule__XRelationalExpression__Alternatives_1)*
{ after(grammarAccess.getXRelationalExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0__0__Impl
	rule__XRelationalExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0()); }
(rule__XRelationalExpression__Group_1_0_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_1()); }
(rule__XRelationalExpression__TypeAssignment_1_0_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getTypeAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0_0()); }
(rule__XRelationalExpression__Group_1_0_0_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XRelationalExpression__Group_1_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0_0__0__Impl
	rule__XRelationalExpression__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0()); }
(

)
{ after(grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1()); }

	Instanceof 

{ after(grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1__0__Impl
	rule__XRelationalExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0()); }
(rule__XRelationalExpression__Group_1_1_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getRightOperandAssignment_1_1_1()); }
(rule__XRelationalExpression__RightOperandAssignment_1_1_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getRightOperandAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0_0()); }
(rule__XRelationalExpression__Group_1_1_0_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XRelationalExpression__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1_0_0__0__Impl
	rule__XRelationalExpression__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1()); }
(rule__XRelationalExpression__FeatureAssignment_1_1_0_0_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpCompare__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpCompare__Group_1__0__Impl
	rule__OpCompare__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0()); }

	LessThanSign 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpCompare__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpCompare__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1()); }

	EqualsSign 

{ after(grammarAccess.getOpCompareAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group__0__Impl
	rule__XOtherOperatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); }
	ruleXAdditiveExpression
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1()); }
(rule__XOtherOperatorExpression__Group_1__0)*
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1__0__Impl
	rule__XOtherOperatorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0()); }
(rule__XOtherOperatorExpression__Group_1_0__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XOtherOperatorExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0_0()); }
(rule__XOtherOperatorExpression__Group_1_0_0__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XOtherOperatorExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0_0__0__Impl
	rule__XOtherOperatorExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XOtherOperatorExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_2__0__Impl
	rule__OpOther__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); }

	GreaterThanSign 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); }

	FullStopFullStop 

{ after(grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5__0__Impl
	rule__OpOther__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); }

	GreaterThanSign 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives_5_1()); }
(rule__OpOther__Alternatives_5_1)
{ after(grammarAccess.getOpOtherAccess().getAlternatives_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_5_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_5_1_0_0()); }
(rule__OpOther__Group_5_1_0_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OpOther__Group_5_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0_0__0__Impl
	rule__OpOther__Group_5_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); }

	GreaterThanSign 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_5_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_5_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_5_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); }

	GreaterThanSign 

{ after(grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_5_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6__0__Impl
	rule__OpOther__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); }

	LessThanSign 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives_6_1()); }
(rule__OpOther__Alternatives_6_1)
{ after(grammarAccess.getOpOtherAccess().getAlternatives_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpOther__Group_6_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getGroup_6_1_0_0()); }
(rule__OpOther__Group_6_1_0_0__0)
{ after(grammarAccess.getOpOtherAccess().getGroup_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OpOther__Group_6_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0_0__0__Impl
	rule__OpOther__Group_6_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); }

	LessThanSign 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpOther__Group_6_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpOther__Group_6_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Group_6_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); }

	LessThanSign 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignKeyword_6_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group__0__Impl
	rule__XAdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); }
	ruleXMultiplicativeExpression
{ after(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1()); }
(rule__XAdditiveExpression__Group_1__0)*
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1__0__Impl
	rule__XAdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0()); }
(rule__XAdditiveExpression__Group_1_0__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XAdditiveExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0_0()); }
(rule__XAdditiveExpression__Group_1_0_0__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAdditiveExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0_0__0__Impl
	rule__XAdditiveExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XAdditiveExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group__0__Impl
	rule__XMultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); }
	ruleXUnaryOperation
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1()); }
(rule__XMultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1__0__Impl
	rule__XMultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0()); }
(rule__XMultiplicativeExpression__Group_1_0__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XMultiplicativeExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0_0()); }
(rule__XMultiplicativeExpression__Group_1_0_0__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XMultiplicativeExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0_0__0__Impl
	rule__XMultiplicativeExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XMultiplicativeExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XUnaryOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__0__Impl
	rule__XUnaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0()); }
(

)
{ after(grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__1__Impl
	rule__XUnaryOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1()); }
(rule__XUnaryOperation__FeatureAssignment_0_1)
{ after(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2()); }
(rule__XUnaryOperation__OperandAssignment_0_2)
{ after(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XCastedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group__0__Impl
	rule__XCastedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0()); }
	ruleXPostfixOperation
{ after(grammarAccess.getXCastedExpressionAccess().getXPostfixOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCastedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup_1()); }
(rule__XCastedExpression__Group_1__0)*
{ after(grammarAccess.getXCastedExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XCastedExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1__0__Impl
	rule__XCastedExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup_1_0()); }
(rule__XCastedExpression__Group_1_0__0)
{ after(grammarAccess.getXCastedExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCastedExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getTypeAssignment_1_1()); }
(rule__XCastedExpression__TypeAssignment_1_1)
{ after(grammarAccess.getXCastedExpressionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XCastedExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getGroup_1_0_0()); }
(rule__XCastedExpression__Group_1_0_0__0)
{ after(grammarAccess.getXCastedExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XCastedExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1_0_0__0__Impl
	rule__XCastedExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCastedExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCastedExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1()); }

	As 

{ after(grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XPostfixOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XPostfixOperation__Group__0__Impl
	rule__XPostfixOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XPostfixOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0()); }
	ruleXMemberFeatureCall
{ after(grammarAccess.getXPostfixOperationAccess().getXMemberFeatureCallParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XPostfixOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XPostfixOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XPostfixOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPostfixOperationAccess().getGroup_1()); }
(rule__XPostfixOperation__Group_1__0)?
{ after(grammarAccess.getXPostfixOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XPostfixOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XPostfixOperation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XPostfixOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPostfixOperationAccess().getGroup_1_0()); }
(rule__XPostfixOperation__Group_1_0__0)
{ after(grammarAccess.getXPostfixOperationAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XPostfixOperation__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XPostfixOperation__Group_1_0__0__Impl
	rule__XPostfixOperation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XPostfixOperation__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0()); }
(

)
{ after(grammarAccess.getXPostfixOperationAccess().getXPostfixOperationOperandAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XPostfixOperation__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XPostfixOperation__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XPostfixOperation__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPostfixOperationAccess().getFeatureAssignment_1_0_1()); }
(rule__XPostfixOperation__FeatureAssignment_1_0_1)
{ after(grammarAccess.getXPostfixOperationAccess().getFeatureAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group__0__Impl
	rule__XMemberFeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); }
	ruleXPrimaryExpression
{ after(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1()); }
(rule__XMemberFeatureCall__Alternatives_1)*
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0__0__Impl
	rule__XMemberFeatureCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0()); }
(rule__XMemberFeatureCall__Group_1_0_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getValueAssignment_1_0_1()); }
(rule__XMemberFeatureCall__ValueAssignment_1_0_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getValueAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0_0()); }
(rule__XMemberFeatureCall__Group_1_0_0_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XMemberFeatureCall__Group_1_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__0__Impl
	rule__XMemberFeatureCall__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0()); }
(

)
{ after(grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__1__Impl
	rule__XMemberFeatureCall__Group_1_0_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_0_0_0_1()); }
(rule__XMemberFeatureCall__Alternatives_1_0_0_0_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__2__Impl
	rule__XMemberFeatureCall__Group_1_0_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2()); }
(rule__XMemberFeatureCall__FeatureAssignment_1_0_0_0_2)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_0_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_0_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_0_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_0_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); }
	ruleOpSingleAssign
{ after(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XMemberFeatureCall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0()); }
(rule__XMemberFeatureCall__Group_1_1_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__1__Impl
	rule__XMemberFeatureCall__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1()); }
(rule__XMemberFeatureCall__Group_1_1_1__0)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__2__Impl
	rule__XMemberFeatureCall__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_1_2()); }
(rule__XMemberFeatureCall__FeatureAssignment_1_1_2)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__3__Impl
	rule__XMemberFeatureCall__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3()); }
(rule__XMemberFeatureCall__Group_1_1_3__0)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_4()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_4)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XMemberFeatureCall__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0_0()); }
(rule__XMemberFeatureCall__Group_1_1_0_0__0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XMemberFeatureCall__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_0_0__0__Impl
	rule__XMemberFeatureCall__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0()); }
(

)
{ after(grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_0_0_1()); }
(rule__XMemberFeatureCall__Alternatives_1_1_0_0_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0()); }

	LessThanSign 

{ after(grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__1__Impl
	rule__XMemberFeatureCall__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_1()); }
(rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__2__Impl
	rule__XMemberFeatureCall__Group_1_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1_2()); }
(rule__XMemberFeatureCall__Group_1_1_1_2__0)*
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3()); }

	GreaterThanSign 

{ after(grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XMemberFeatureCall__Group_1_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1_2__0__Impl
	rule__XMemberFeatureCall__Group_1_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0()); }

	Comma 

{ after(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_2_1()); }
(rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_2_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsAssignment_1_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3__0__Impl
	rule__XMemberFeatureCall__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_1_3_0()); }
(rule__XMemberFeatureCall__ExplicitOperationCallAssignment_1_1_3_0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallAssignment_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3__1__Impl
	rule__XMemberFeatureCall__Group_1_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_3_1()); }
(rule__XMemberFeatureCall__Alternatives_1_1_3_1)?
{ after(grammarAccess.getXMemberFeatureCallAccess().getAlternatives_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2()); }

	RightParenthesis 

{ after(grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XMemberFeatureCall__Group_1_1_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_0()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_0)
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1_1()); }
(rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0)*
{ after(grammarAccess.getXMemberFeatureCallAccess().getGroup_1_1_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0__Impl
	rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0()); }

	Comma 

{ after(grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__Group_1_1_3_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_1_1()); }
(rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_1_1)
{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsAssignment_1_1_3_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSetLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__0__Impl
	rule__XSetLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0()); }
(

)
{ after(grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__1__Impl
	rule__XSetLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1()); }

	NumberSign 

{ after(grammarAccess.getXSetLiteralAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__2__Impl
	rule__XSetLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2()); }

	LeftCurlyBracket 

{ after(grammarAccess.getXSetLiteralAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__3__Impl
	rule__XSetLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup_3()); }
(rule__XSetLiteral__Group_3__0)?
{ after(grammarAccess.getXSetLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4()); }

	RightCurlyBracket 

{ after(grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XSetLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3__0__Impl
	rule__XSetLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_0()); }
(rule__XSetLiteral__ElementsAssignment_3_0)
{ after(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup_3_1()); }
(rule__XSetLiteral__Group_3_1__0)*
{ after(grammarAccess.getXSetLiteralAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSetLiteral__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3_1__0__Impl
	rule__XSetLiteral__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0()); }

	Comma 

{ after(grammarAccess.getXSetLiteralAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_1_1()); }
(rule__XSetLiteral__ElementsAssignment_3_1_1)
{ after(grammarAccess.getXSetLiteralAccess().getElementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XListLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__0__Impl
	rule__XListLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getXListLiteralAction_0()); }
(

)
{ after(grammarAccess.getXListLiteralAccess().getXListLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__1__Impl
	rule__XListLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1()); }

	NumberSign 

{ after(grammarAccess.getXListLiteralAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__2__Impl
	rule__XListLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2()); }

	LeftSquareBracket 

{ after(grammarAccess.getXListLiteralAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__3__Impl
	rule__XListLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup_3()); }
(rule__XListLiteral__Group_3__0)?
{ after(grammarAccess.getXListLiteralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4()); }

	RightSquareBracket 

{ after(grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XListLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3__0__Impl
	rule__XListLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_0()); }
(rule__XListLiteral__ElementsAssignment_3_0)
{ after(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup_3_1()); }
(rule__XListLiteral__Group_3_1__0)*
{ after(grammarAccess.getXListLiteralAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XListLiteral__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3_1__0__Impl
	rule__XListLiteral__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0()); }

	Comma 

{ after(grammarAccess.getXListLiteralAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_1_1()); }
(rule__XListLiteral__ElementsAssignment_3_1_1)
{ after(grammarAccess.getXListLiteralAccess().getElementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__0__Impl
	rule__XClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_0()); }
(rule__XClosure__Group_0__0)
{ after(grammarAccess.getXClosureAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__1__Impl
	rule__XClosure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1()); }
(rule__XClosure__Group_1__0)?
{ after(grammarAccess.getXClosureAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__2__Impl
	rule__XClosure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExpressionAssignment_2()); }
(rule__XClosure__ExpressionAssignment_2)
{ after(grammarAccess.getXClosureAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3()); }

	RightSquareBracket 

{ after(grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XClosure__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_0_0()); }
(rule__XClosure__Group_0_0__0)
{ after(grammarAccess.getXClosureAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XClosure__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_0_0__0__Impl
	rule__XClosure__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getXClosureAction_0_0_0()); }
(

)
{ after(grammarAccess.getXClosureAccess().getXClosureAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1()); }

	LeftSquareBracket 

{ after(grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1_0()); }
(rule__XClosure__Group_1_0__0)
{ after(grammarAccess.getXClosureAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XClosure__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0__0__Impl
	rule__XClosure__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1_0_0()); }
(rule__XClosure__Group_1_0_0__0)?
{ after(grammarAccess.getXClosureAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExplicitSyntaxAssignment_1_0_1()); }
(rule__XClosure__ExplicitSyntaxAssignment_1_0_1)
{ after(grammarAccess.getXClosureAccess().getExplicitSyntaxAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0__0__Impl
	rule__XClosure__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0()); }
(rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_0)
{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getGroup_1_0_0_1()); }
(rule__XClosure__Group_1_0_0_1__0)*
{ after(grammarAccess.getXClosureAccess().getGroup_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XClosure__Group_1_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0_1__0__Impl
	rule__XClosure__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0()); }

	Comma 

{ after(grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XClosure__Group_1_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XClosure__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__Group_1_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1()); }
(rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_1_1)
{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersAssignment_1_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionInClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group__0__Impl
	rule__XExpressionInClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0()); }
(

)
{ after(grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionInClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getGroup_1()); }
(rule__XExpressionInClosure__Group_1__0)*
{ after(grammarAccess.getXExpressionInClosureAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XExpressionInClosure__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group_1__0__Impl
	rule__XExpressionInClosure__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getExpressionsAssignment_1_0()); }
(rule__XExpressionInClosure__ExpressionsAssignment_1_0)
{ after(grammarAccess.getXExpressionInClosureAccess().getExpressionsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XExpressionInClosure__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XExpressionInClosure__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1()); }
(
	Semicolon 
)?
{ after(grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XShortClosure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group__0__Impl
	rule__XShortClosure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0()); }
(rule__XShortClosure__Group_0__0)
{ after(grammarAccess.getXShortClosureAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExpressionAssignment_1()); }
(rule__XShortClosure__ExpressionAssignment_1)
{ after(grammarAccess.getXShortClosureAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XShortClosure__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0_0()); }
(rule__XShortClosure__Group_0_0__0)
{ after(grammarAccess.getXShortClosureAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XShortClosure__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0__0__Impl
	rule__XShortClosure__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0()); }
(

)
{ after(grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0__1__Impl
	rule__XShortClosure__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0_0_1()); }
(rule__XShortClosure__Group_0_0_1__0)?
{ after(grammarAccess.getXShortClosureAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExplicitSyntaxAssignment_0_0_2()); }
(rule__XShortClosure__ExplicitSyntaxAssignment_0_0_2)
{ after(grammarAccess.getXShortClosureAccess().getExplicitSyntaxAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XShortClosure__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1__0__Impl
	rule__XShortClosure__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0()); }
(rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_0)
{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getGroup_0_0_1_1()); }
(rule__XShortClosure__Group_0_0_1_1__0)*
{ after(grammarAccess.getXShortClosureAccess().getGroup_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XShortClosure__Group_0_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1_1__0__Impl
	rule__XShortClosure__Group_0_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0()); }

	Comma 

{ after(grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XShortClosure__Group_0_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XShortClosure__Group_0_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__Group_0_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1()); }
(rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1)
{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersAssignment_0_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__0__Impl
	rule__XParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	LeftParenthesis 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__1__Impl
	rule__XParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); }
	ruleXExpression
{ after(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	RightParenthesis 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XIfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__0__Impl
	rule__XIfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__1__Impl
	rule__XIfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfKeyword_1()); }

	If 

{ after(grammarAccess.getXIfExpressionAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__2__Impl
	rule__XIfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2()); }

	LeftParenthesis 

{ after(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__3__Impl
	rule__XIfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfAssignment_3()); }
(rule__XIfExpression__IfAssignment_3)
{ after(grammarAccess.getXIfExpressionAccess().getIfAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__4__Impl
	rule__XIfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__5__Impl
	rule__XIfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenAssignment_5()); }
(rule__XIfExpression__ThenAssignment_5)
{ after(grammarAccess.getXIfExpressionAccess().getThenAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup_6()); }
(rule__XIfExpression__Group_6__0)?
{ after(grammarAccess.getXIfExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XIfExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_6__0__Impl
	rule__XIfExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0()); }
(
	Else 
)
{ after(grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseAssignment_6_1()); }
(rule__XIfExpression__ElseAssignment_6_1)
{ after(grammarAccess.getXIfExpressionAccess().getElseAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__0__Impl
	rule__XSwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0()); }
(

)
{ after(grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__1__Impl
	rule__XSwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1()); }

	Switch 

{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__2__Impl
	rule__XSwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getAlternatives_2()); }
(rule__XSwitchExpression__Alternatives_2)
{ after(grammarAccess.getXSwitchExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__3__Impl
	rule__XSwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3()); }

	LeftCurlyBracket 

{ after(grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__4__Impl
	rule__XSwitchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4()); }
(rule__XSwitchExpression__CasesAssignment_4)*
{ after(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__5__Impl
	rule__XSwitchExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_5()); }
(rule__XSwitchExpression__Group_5__0)?
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6()); }

	RightCurlyBracket 

{ after(grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XSwitchExpression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0__0__Impl
	rule__XSwitchExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0()); }
(rule__XSwitchExpression__Group_2_0_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0__1__Impl
	rule__XSwitchExpression__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_0_1()); }
(rule__XSwitchExpression__SwitchAssignment_2_0_1)
{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2()); }

	RightParenthesis 

{ after(grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XSwitchExpression__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0_0()); }
(rule__XSwitchExpression__Group_2_0_0_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XSwitchExpression__Group_2_0_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0_0_0__0__Impl
	rule__XSwitchExpression__Group_2_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0()); }

	LeftParenthesis 

{ after(grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_0_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0_0_0__1__Impl
	rule__XSwitchExpression__Group_2_0_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamAssignment_2_0_0_0_1()); }
(rule__XSwitchExpression__DeclaredParamAssignment_2_0_0_0_1)
{ after(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamAssignment_2_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_0_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_0_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_0_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2()); }

	Colon 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XSwitchExpression__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1__0__Impl
	rule__XSwitchExpression__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0()); }
(rule__XSwitchExpression__Group_2_1_0__0)?
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_1_1()); }
(rule__XSwitchExpression__SwitchAssignment_2_1_1)
{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0_0()); }
(rule__XSwitchExpression__Group_2_1_0_0__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XSwitchExpression__Group_2_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0_0__0__Impl
	rule__XSwitchExpression__Group_2_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamAssignment_2_1_0_0_0()); }
(rule__XSwitchExpression__DeclaredParamAssignment_2_1_0_0_0)
{ after(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamAssignment_2_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_2_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_2_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_2_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1()); }

	Colon 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_5__0__Impl
	rule__XSwitchExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0()); }

	Default 

{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_5__1__Impl
	rule__XSwitchExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1()); }

	Colon 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_5_2()); }
(rule__XSwitchExpression__DefaultAssignment_5_2)
{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XCasePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__0__Impl
	rule__XCasePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getXCasePartAction_0()); }
(

)
{ after(grammarAccess.getXCasePartAccess().getXCasePartAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__1__Impl
	rule__XCasePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getTypeGuardAssignment_1()); }
(rule__XCasePart__TypeGuardAssignment_1)?
{ after(grammarAccess.getXCasePartAccess().getTypeGuardAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__2__Impl
	rule__XCasePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getGroup_2()); }
(rule__XCasePart__Group_2__0)?
{ after(grammarAccess.getXCasePartAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getAlternatives_3()); }
(rule__XCasePart__Alternatives_3)
{ after(grammarAccess.getXCasePartAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XCasePart__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group_2__0__Impl
	rule__XCasePart__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseKeyword_2_0()); }

	Case 

{ after(grammarAccess.getXCasePartAccess().getCaseKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseAssignment_2_1()); }
(rule__XCasePart__CaseAssignment_2_1)
{ after(grammarAccess.getXCasePartAccess().getCaseAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XCasePart__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group_3_0__0__Impl
	rule__XCasePart__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0()); }

	Colon 

{ after(grammarAccess.getXCasePartAccess().getColonKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getThenAssignment_3_0_1()); }
(rule__XCasePart__ThenAssignment_3_0_1)
{ after(grammarAccess.getXCasePartAccess().getThenAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XForLoopExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__0__Impl
	rule__XForLoopExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getGroup_0()); }
(rule__XForLoopExpression__Group_0__0)
{ after(grammarAccess.getXForLoopExpressionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__1__Impl
	rule__XForLoopExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getForExpressionAssignment_1()); }
(rule__XForLoopExpression__ForExpressionAssignment_1)
{ after(grammarAccess.getXForLoopExpressionAccess().getForExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__2__Impl
	rule__XForLoopExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2()); }

	RightParenthesis 

{ after(grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getEachExpressionAssignment_3()); }
(rule__XForLoopExpression__EachExpressionAssignment_3)
{ after(grammarAccess.getXForLoopExpressionAccess().getEachExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XForLoopExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getGroup_0_0()); }
(rule__XForLoopExpression__Group_0_0__0)
{ after(grammarAccess.getXForLoopExpressionAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XForLoopExpression__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group_0_0__0__Impl
	rule__XForLoopExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0()); }
(

)
{ after(grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group_0_0__1__Impl
	rule__XForLoopExpression__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1()); }

	For 

{ after(grammarAccess.getXForLoopExpressionAccess().getForKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group_0_0__2__Impl
	rule__XForLoopExpression__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2()); }

	LeftParenthesis 

{ after(grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group_0_0__3__Impl
	rule__XForLoopExpression__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamAssignment_0_0_3()); }
(rule__XForLoopExpression__DeclaredParamAssignment_0_0_3)
{ after(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamAssignment_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForLoopExpression__Group_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForLoopExpression__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__Group_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4()); }

	Colon 

{ after(grammarAccess.getXForLoopExpressionAccess().getColonKeyword_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XBasicForLoopExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group__0__Impl
	rule__XBasicForLoopExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0()); }
(

)
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getXBasicForLoopExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group__1__Impl
	rule__XBasicForLoopExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1()); }

	For 

{ after(grammarAccess.getXBasicForLoopExpressionAccess().getForKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group__2__Impl
	rule__XBasicForLoopExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2()); }

	LeftParenthesis 

{ after(grammarAccess.getXBasicForLoopExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group__3__Impl
	rule__XBasicForLoopExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_3()); }
(rule__XBasicForLoopExpression__Group_3__0)?
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group__4__Impl
	rule__XBasicForLoopExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4()); }

	Semicolon 

{ after(grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group__5__Impl
	rule__XBasicForLoopExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionAssignment_5()); }
(rule__XBasicForLoopExpression__ExpressionAssignment_5)?
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group__6__Impl
	rule__XBasicForLoopExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6()); }

	Semicolon 

{ after(grammarAccess.getXBasicForLoopExpressionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group__7__Impl
	rule__XBasicForLoopExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_7()); }
(rule__XBasicForLoopExpression__Group_7__0)?
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group__8__Impl
	rule__XBasicForLoopExpression__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8()); }

	RightParenthesis 

{ after(grammarAccess.getXBasicForLoopExpressionAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionAssignment_9()); }
(rule__XBasicForLoopExpression__EachExpressionAssignment_9)
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__XBasicForLoopExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group_3__0__Impl
	rule__XBasicForLoopExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_0()); }
(rule__XBasicForLoopExpression__InitExpressionsAssignment_3_0)
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_3_1()); }
(rule__XBasicForLoopExpression__Group_3_1__0)*
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XBasicForLoopExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group_3_1__0__Impl
	rule__XBasicForLoopExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0()); }

	Comma 

{ after(grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_1_1()); }
(rule__XBasicForLoopExpression__InitExpressionsAssignment_3_1_1)
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XBasicForLoopExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group_7__0__Impl
	rule__XBasicForLoopExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_0()); }
(rule__XBasicForLoopExpression__UpdateExpressionsAssignment_7_0)
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_7_1()); }
(rule__XBasicForLoopExpression__Group_7_1__0)*
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getGroup_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XBasicForLoopExpression__Group_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group_7_1__0__Impl
	rule__XBasicForLoopExpression__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group_7_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0()); }

	Comma 

{ after(grammarAccess.getXBasicForLoopExpressionAccess().getCommaKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBasicForLoopExpression__Group_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBasicForLoopExpression__Group_7_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__Group_7_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_1_1()); }
(rule__XBasicForLoopExpression__UpdateExpressionsAssignment_7_1_1)
{ after(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsAssignment_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XWhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__0__Impl
	rule__XWhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0()); }
(

)
{ after(grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__1__Impl
	rule__XWhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1()); }

	While 

{ after(grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__2__Impl
	rule__XWhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2()); }

	LeftParenthesis 

{ after(grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__3__Impl
	rule__XWhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_3()); }
(rule__XWhileExpression__PredicateAssignment_3)
{ after(grammarAccess.getXWhileExpressionAccess().getPredicateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__4__Impl
	rule__XWhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XWhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XWhileExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_5()); }
(rule__XWhileExpression__BodyAssignment_5)
{ after(grammarAccess.getXWhileExpressionAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XDoWhileExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__0__Impl
	rule__XDoWhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0()); }
(

)
{ after(grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__1__Impl
	rule__XDoWhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1()); }

	Do 

{ after(grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__2__Impl
	rule__XDoWhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getBodyAssignment_2()); }
(rule__XDoWhileExpression__BodyAssignment_2)
{ after(grammarAccess.getXDoWhileExpressionAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__3__Impl
	rule__XDoWhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3()); }

	While 

{ after(grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__4__Impl
	rule__XDoWhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4()); }

	LeftParenthesis 

{ after(grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__5__Impl
	rule__XDoWhileExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getPredicateAssignment_5()); }
(rule__XDoWhileExpression__PredicateAssignment_5)
{ after(grammarAccess.getXDoWhileExpressionAccess().getPredicateAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XDoWhileExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XDoWhileExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6()); }

	RightParenthesis 

{ after(grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XBlockExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__0__Impl
	rule__XBlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0()); }
(

)
{ after(grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__1__Impl
	rule__XBlockExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	LeftCurlyBracket 

{ after(grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__2__Impl
	rule__XBlockExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getGroup_2()); }
(rule__XBlockExpression__Group_2__0)*
{ after(grammarAccess.getXBlockExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }

	RightCurlyBracket 

{ after(grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XBlockExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group_2__0__Impl
	rule__XBlockExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_2_0()); }
(rule__XBlockExpression__ExpressionsAssignment_2_0)
{ after(grammarAccess.getXBlockExpressionAccess().getExpressionsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBlockExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBlockExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1()); }
(
	Semicolon 
)?
{ after(grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__0__Impl
	rule__XVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0()); }
(

)
{ after(grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__1__Impl
	rule__XVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getAlternatives_1()); }
(rule__XVariableDeclaration__Alternatives_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__2__Impl
	rule__XVariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getAlternatives_2()); }
(rule__XVariableDeclaration__Alternatives_2)
{ after(grammarAccess.getXVariableDeclarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup_3()); }
(rule__XVariableDeclaration__Group_3__0)?
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XVariableDeclaration__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_2_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0_0()); }
(rule__XVariableDeclaration__Group_2_0_0__0)
{ after(grammarAccess.getXVariableDeclarationAccess().getGroup_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XVariableDeclaration__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_2_0_0__0__Impl
	rule__XVariableDeclaration__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_2_0_0_0()); }
(rule__XVariableDeclaration__TypeAssignment_2_0_0_0)
{ after(grammarAccess.getXVariableDeclarationAccess().getTypeAssignment_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_0_0_1()); }
(rule__XVariableDeclaration__NameAssignment_2_0_0_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getNameAssignment_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XVariableDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_3__0__Impl
	rule__XVariableDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }

	EqualsSign 

{ after(grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XVariableDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_3_1()); }
(rule__XVariableDeclaration__RightAssignment_3_1)
{ after(grammarAccess.getXVariableDeclarationAccess().getRightAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmFormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmFormalParameter__Group__0__Impl
	rule__JvmFormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
(rule__JvmFormalParameter__ParameterTypeAssignment_0)?
{ after(grammarAccess.getJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmFormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmFormalParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1()); }
(rule__JvmFormalParameter__NameAssignment_1)
{ after(grammarAccess.getJvmFormalParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FullJvmFormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FullJvmFormalParameter__Group__0__Impl
	rule__FullJvmFormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
(rule__FullJvmFormalParameter__ParameterTypeAssignment_0)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FullJvmFormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FullJvmFormalParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_1()); }
(rule__FullJvmFormalParameter__NameAssignment_1)
{ after(grammarAccess.getFullJvmFormalParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__0__Impl
	rule__XFeatureCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0()); }
(

)
{ after(grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__1__Impl
	rule__XFeatureCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_1()); }
(rule__XFeatureCall__Group_1__0)?
{ after(grammarAccess.getXFeatureCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__2__Impl
	rule__XFeatureCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureAssignment_2()); }
(rule__XFeatureCall__FeatureAssignment_2)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__3__Impl
	rule__XFeatureCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_3()); }
(rule__XFeatureCall__Group_3__0)?
{ after(grammarAccess.getXFeatureCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_4)?
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__XFeatureCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1__0__Impl
	rule__XFeatureCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0()); }

	LessThanSign 

{ after(grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1__1__Impl
	rule__XFeatureCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_1_1()); }
(rule__XFeatureCall__TypeArgumentsAssignment_1_1)
{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1__2__Impl
	rule__XFeatureCall__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_1_2()); }
(rule__XFeatureCall__Group_1_2__0)*
{ after(grammarAccess.getXFeatureCallAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3()); }

	GreaterThanSign 

{ after(grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XFeatureCall__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1_2__0__Impl
	rule__XFeatureCall__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0()); }

	Comma 

{ after(grammarAccess.getXFeatureCallAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_1_2_1()); }
(rule__XFeatureCall__TypeArgumentsAssignment_1_2_1)
{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3__0__Impl
	rule__XFeatureCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallAssignment_3_0()); }
(rule__XFeatureCall__ExplicitOperationCallAssignment_3_0)
{ after(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3__1__Impl
	rule__XFeatureCall__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getAlternatives_3_1()); }
(rule__XFeatureCall__Alternatives_3_1)?
{ after(grammarAccess.getXFeatureCallAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2()); }

	RightParenthesis 

{ after(grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFeatureCall__Group_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3_1_1__0__Impl
	rule__XFeatureCall__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_0()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_1_0)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getGroup_3_1_1_1()); }
(rule__XFeatureCall__Group_3_1_1_1__0)*
{ after(grammarAccess.getXFeatureCallAccess().getGroup_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFeatureCall__Group_3_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3_1_1_1__0__Impl
	rule__XFeatureCall__Group_3_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0()); }

	Comma 

{ after(grammarAccess.getXFeatureCallAccess().getCommaKeyword_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFeatureCall__Group_3_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFeatureCall__Group_3_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__Group_3_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_1_1()); }
(rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_1_1_1)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsAssignment_3_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__0__Impl
	rule__XConstructorCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0()); }
(

)
{ after(grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__1__Impl
	rule__XConstructorCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getNewKeyword_1()); }

	New 

{ after(grammarAccess.getXConstructorCallAccess().getNewKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__2__Impl
	rule__XConstructorCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getConstructorAssignment_2()); }
(rule__XConstructorCall__ConstructorAssignment_2)
{ after(grammarAccess.getXConstructorCallAccess().getConstructorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__3__Impl
	rule__XConstructorCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_3()); }
(rule__XConstructorCall__Group_3__0)?
{ after(grammarAccess.getXConstructorCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__4__Impl
	rule__XConstructorCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_4()); }
(rule__XConstructorCall__Group_4__0)?
{ after(grammarAccess.getXConstructorCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_5()); }
(rule__XConstructorCall__ArgumentsAssignment_5)?
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XConstructorCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__0__Impl
	rule__XConstructorCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0()); }
(
	LessThanSign 
)
{ after(grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__1__Impl
	rule__XConstructorCall__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_1()); }
(rule__XConstructorCall__TypeArgumentsAssignment_3_1)
{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__2__Impl
	rule__XConstructorCall__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_3_2()); }
(rule__XConstructorCall__Group_3_2__0)*
{ after(grammarAccess.getXConstructorCallAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3()); }

	GreaterThanSign 

{ after(grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XConstructorCall__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3_2__0__Impl
	rule__XConstructorCall__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0()); }

	Comma 

{ after(grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_2_1()); }
(rule__XConstructorCall__TypeArgumentsAssignment_3_2_1)
{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4__0__Impl
	rule__XConstructorCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallAssignment_4_0()); }
(rule__XConstructorCall__ExplicitConstructorCallAssignment_4_0)
{ after(grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4__1__Impl
	rule__XConstructorCall__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getAlternatives_4_1()); }
(rule__XConstructorCall__Alternatives_4_1)?
{ after(grammarAccess.getXConstructorCallAccess().getAlternatives_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2()); }

	RightParenthesis 

{ after(grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XConstructorCall__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1__0__Impl
	rule__XConstructorCall__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_0()); }
(rule__XConstructorCall__ArgumentsAssignment_4_1_1_0)
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1_1()); }
(rule__XConstructorCall__Group_4_1_1_1__0)*
{ after(grammarAccess.getXConstructorCallAccess().getGroup_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XConstructorCall__Group_4_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1_1__0__Impl
	rule__XConstructorCall__Group_4_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0()); }

	Comma 

{ after(grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XConstructorCall__Group_4_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XConstructorCall__Group_4_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__Group_4_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_1_1()); }
(rule__XConstructorCall__ArgumentsAssignment_4_1_1_1_1)
{ after(grammarAccess.getXConstructorCallAccess().getArgumentsAssignment_4_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XBooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBooleanLiteral__Group__0__Impl
	rule__XBooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getAlternatives_1()); }
(rule__XBooleanLiteral__Alternatives_1)
{ after(grammarAccess.getXBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XNullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNullLiteral__Group__0__Impl
	rule__XNullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XNullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XNullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XNullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNullLiteralAccess().getNullKeyword_1()); }

	Null 

{ after(grammarAccess.getXNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XNumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNumberLiteral__Group__0__Impl
	rule__XNumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0()); }
(

)
{ after(grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XNumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getValueAssignment_1()); }
(rule__XNumberLiteral__ValueAssignment_1)
{ after(grammarAccess.getXNumberLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XStringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStringLiteral__Group__0__Impl
	rule__XStringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getValueAssignment_1()); }
(rule__XStringLiteral__ValueAssignment_1)
{ after(grammarAccess.getXStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTypeLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__0__Impl
	rule__XTypeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0()); }
(

)
{ after(grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__1__Impl
	rule__XTypeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1()); }

	Typeof 

{ after(grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__2__Impl
	rule__XTypeLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2()); }

	LeftParenthesis 

{ after(grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__3__Impl
	rule__XTypeLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_3()); }
(rule__XTypeLiteral__TypeAssignment_3)
{ after(grammarAccess.getXTypeLiteralAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__4__Impl
	rule__XTypeLiteral__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsAssignment_4()); }
(rule__XTypeLiteral__ArrayDimensionsAssignment_4)*
{ after(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTypeLiteral__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTypeLiteral__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5()); }

	RightParenthesis 

{ after(grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XThrowExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XThrowExpression__Group__0__Impl
	rule__XThrowExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0()); }
(

)
{ after(grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XThrowExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XThrowExpression__Group__1__Impl
	rule__XThrowExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1()); }

	Throw 

{ after(grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XThrowExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XThrowExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getExpressionAssignment_2()); }
(rule__XThrowExpression__ExpressionAssignment_2)
{ after(grammarAccess.getXThrowExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XReturnExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XReturnExpression__Group__0__Impl
	rule__XReturnExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0()); }
(

)
{ after(grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XReturnExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XReturnExpression__Group__1__Impl
	rule__XReturnExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1()); }

	Return 

{ after(grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XReturnExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XReturnExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getExpressionAssignment_2()); }
(rule__XReturnExpression__ExpressionAssignment_2)?
{ after(grammarAccess.getXReturnExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XTryCatchFinallyExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__0__Impl
	rule__XTryCatchFinallyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0()); }
(

)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__1__Impl
	rule__XTryCatchFinallyExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1()); }

	Try 

{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__2__Impl
	rule__XTryCatchFinallyExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionAssignment_2()); }
(rule__XTryCatchFinallyExpression__ExpressionAssignment_2)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getAlternatives_3()); }
(rule__XTryCatchFinallyExpression__Alternatives_3)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XTryCatchFinallyExpression__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0__0__Impl
	rule__XTryCatchFinallyExpression__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
(rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
)
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
(rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0)*
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesAssignment_3_0_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0_1()); }
(rule__XTryCatchFinallyExpression__Group_3_0_1__0)?
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getGroup_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTryCatchFinallyExpression__Group_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0_1__0__Impl
	rule__XTryCatchFinallyExpression__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0()); }
(
	Finally 
)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1()); }
(rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XTryCatchFinallyExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_1__0__Impl
	rule__XTryCatchFinallyExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0()); }

	Finally 

{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XTryCatchFinallyExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XTryCatchFinallyExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1()); }
(rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1)
{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSynchronizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSynchronizedExpression__Group__0__Impl
	rule__XSynchronizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSynchronizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getGroup_0()); }
(rule__XSynchronizedExpression__Group_0__0)
{ after(grammarAccess.getXSynchronizedExpressionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSynchronizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSynchronizedExpression__Group__1__Impl
	rule__XSynchronizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSynchronizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getParamAssignment_1()); }
(rule__XSynchronizedExpression__ParamAssignment_1)
{ after(grammarAccess.getXSynchronizedExpressionAccess().getParamAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSynchronizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSynchronizedExpression__Group__2__Impl
	rule__XSynchronizedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSynchronizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2()); }

	RightParenthesis 

{ after(grammarAccess.getXSynchronizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSynchronizedExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSynchronizedExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSynchronizedExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getExpressionAssignment_3()); }
(rule__XSynchronizedExpression__ExpressionAssignment_3)
{ after(grammarAccess.getXSynchronizedExpressionAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XSynchronizedExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSynchronizedExpression__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSynchronizedExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getGroup_0_0()); }
(rule__XSynchronizedExpression__Group_0_0__0)
{ after(grammarAccess.getXSynchronizedExpressionAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XSynchronizedExpression__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSynchronizedExpression__Group_0_0__0__Impl
	rule__XSynchronizedExpression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSynchronizedExpression__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0()); }
(

)
{ after(grammarAccess.getXSynchronizedExpressionAccess().getXSynchronizedExpressionAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSynchronizedExpression__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSynchronizedExpression__Group_0_0__1__Impl
	rule__XSynchronizedExpression__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSynchronizedExpression__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1()); }

	Synchronized 

{ after(grammarAccess.getXSynchronizedExpressionAccess().getSynchronizedKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSynchronizedExpression__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSynchronizedExpression__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSynchronizedExpression__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2()); }

	LeftParenthesis 

{ after(grammarAccess.getXSynchronizedExpressionAccess().getLeftParenthesisKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XCatchClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__0__Impl
	rule__XCatchClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getCatchKeyword_0()); }
(
	Catch 
)
{ after(grammarAccess.getXCatchClauseAccess().getCatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__1__Impl
	rule__XCatchClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__2__Impl
	rule__XCatchClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getDeclaredParamAssignment_2()); }
(rule__XCatchClause__DeclaredParamAssignment_2)
{ after(grammarAccess.getXCatchClauseAccess().getDeclaredParamAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__3__Impl
	rule__XCatchClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCatchClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCatchClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getExpressionAssignment_4()); }
(rule__XCatchClause__ExpressionAssignment_4)
{ after(grammarAccess.getXCatchClauseAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	FullStop 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__0__Impl
	rule__Number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
(rule__Number__Alternatives_1_0)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getGroup_1_1()); }
(rule__Number__Group_1_1__0)?
{ after(grammarAccess.getNumberAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__0__Impl
	rule__Number__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }

	FullStop 

{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
(rule__Number__Alternatives_1_1_1)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__JvmTypeReference__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0__0__Impl
	rule__JvmTypeReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); }
	ruleJvmParameterizedTypeReference
{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1()); }
(rule__JvmTypeReference__Group_0_1__0)*
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmTypeReference__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0()); }
(rule__JvmTypeReference__Group_0_1_0__0)
{ after(grammarAccess.getJvmTypeReferenceAccess().getGroup_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__JvmTypeReference__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1_0__0__Impl
	rule__JvmTypeReference__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0()); }
(

)
{ after(grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmTypeReference__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmTypeReference__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmTypeReference__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); }
	ruleArrayBrackets
{ after(grammarAccess.getJvmTypeReferenceAccess().getArrayBracketsParserRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayBrackets__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayBrackets__Group__0__Impl
	rule__ArrayBrackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); }

	LeftSquareBracket 

{ after(grammarAccess.getArrayBracketsAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayBrackets__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayBrackets__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayBrackets__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); }

	RightSquareBracket 

{ after(grammarAccess.getArrayBracketsAccess().getRightSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunctionTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__0__Impl
	rule__XFunctionTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
(rule__XFunctionTypeRef__Group_0__0)?
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__1__Impl
	rule__XFunctionTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	EqualsSignGreaterThanSign 

{ after(grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
(rule__XFunctionTypeRef__ReturnTypeAssignment_2)
{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFunctionTypeRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__0__Impl
	rule__XFunctionTypeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }

	LeftParenthesis 

{ after(grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__1__Impl
	rule__XFunctionTypeRef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1()); }
(rule__XFunctionTypeRef__Group_0_1__0)?
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2()); }

	RightParenthesis 

{ after(grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XFunctionTypeRef__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1__0__Impl
	rule__XFunctionTypeRef__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0()); }
(rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0)
{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1()); }
(rule__XFunctionTypeRef__Group_0_1_1__0)*
{ after(grammarAccess.getXFunctionTypeRefAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XFunctionTypeRef__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1_1__0__Impl
	rule__XFunctionTypeRef__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0()); }

	Comma 

{ after(grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionTypeRef__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionTypeRef__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1()); }
(rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1)
{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group__0__Impl
	rule__JvmParameterizedTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0()); }
(rule__JvmParameterizedTypeReference__TypeAssignment_0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1()); }
(rule__JvmParameterizedTypeReference__Group_1__0)?
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__0__Impl
	rule__JvmParameterizedTypeReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
(
	LessThanSign 
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__1__Impl
	rule__JvmParameterizedTypeReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__2__Impl
	rule__JvmParameterizedTypeReference__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2()); }
(rule__JvmParameterizedTypeReference__Group_1_2__0)*
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__3__Impl
	rule__JvmParameterizedTypeReference__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }

	GreaterThanSign 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4()); }
(rule__JvmParameterizedTypeReference__Group_1_4__0)*
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JvmParameterizedTypeReference__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0()); }

	Comma 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0()); }
(rule__JvmParameterizedTypeReference__Group_1_4_0__0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4__1__Impl
	rule__JvmParameterizedTypeReference__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_1_4_1()); }
(rule__JvmParameterizedTypeReference__TypeAssignment_1_4_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2()); }
(rule__JvmParameterizedTypeReference__Group_1_4_2__0)?
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JvmParameterizedTypeReference__Group_1_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0_0()); }
(rule__JvmParameterizedTypeReference__Group_1_4_0_0__0)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__JvmParameterizedTypeReference__Group_1_4_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_0_0__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0()); }
(

)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getJvmInnerTypeReferenceOuterAction_1_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1()); }

	FullStop 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getFullStopKeyword_1_4_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmParameterizedTypeReference__Group_1_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0()); }
(
	LessThanSign 
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__1__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__2__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2_2()); }
(rule__JvmParameterizedTypeReference__Group_1_4_2_2__0)*
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGroup_1_4_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3()); }

	GreaterThanSign 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_4_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JvmParameterizedTypeReference__Group_1_4_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2_2__0__Impl
	rule__JvmParameterizedTypeReference__Group_1_4_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0()); }

	Comma 

{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_4_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmParameterizedTypeReference__Group_1_4_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmParameterizedTypeReference__Group_1_4_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__Group_1_4_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_2_1()); }
(rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_2_1)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsAssignment_1_4_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmWildcardTypeReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__0__Impl
	rule__JvmWildcardTypeReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0()); }
(

)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__1__Impl
	rule__JvmWildcardTypeReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1()); }

	QuestionMark 

{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2()); }
(rule__JvmWildcardTypeReference__Alternatives_2)?
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JvmWildcardTypeReference__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group_2_0__0__Impl
	rule__JvmWildcardTypeReference__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_0()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_1()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_1)*
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmWildcardTypeReference__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group_2_1__0__Impl
	rule__JvmWildcardTypeReference__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_0()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_0)
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmWildcardTypeReference__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmWildcardTypeReference__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_1()); }
(rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_1)*
{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmUpperBound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBound__Group__0__Impl
	rule__JvmUpperBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0()); }

	Extends 

{ after(grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmUpperBound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1()); }
(rule__JvmUpperBound__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmUpperBoundAnded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBoundAnded__Group__0__Impl
	rule__JvmUpperBoundAnded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0()); }

	Ampersand 

{ after(grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmUpperBoundAnded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmUpperBoundAnded__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1()); }
(rule__JvmUpperBoundAnded__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmLowerBound__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBound__Group__0__Impl
	rule__JvmLowerBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0()); }

	Super 

{ after(grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmLowerBound__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBound__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1()); }
(rule__JvmLowerBound__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JvmLowerBoundAnded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBoundAnded__Group__0__Impl
	rule__JvmLowerBoundAnded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBoundAnded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0()); }

	Ampersand 

{ after(grammarAccess.getJvmLowerBoundAndedAccess().getAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JvmLowerBoundAnded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JvmLowerBoundAnded__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBoundAnded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceAssignment_1()); }
(rule__JvmLowerBoundAnded__TypeReferenceAssignment_1)
{ after(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
	rule__QualifiedNameWithWildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }

	FullStop 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }

	Asterisk 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XImportDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__0__Impl
	rule__XImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportKeyword_0()); }

	Import 

{ after(grammarAccess.getXImportDeclarationAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__1__Impl
	rule__XImportDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getAlternatives_1()); }
(rule__XImportDeclaration__Alternatives_1)
{ after(grammarAccess.getXImportDeclarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2()); }
(
	Semicolon 
)?
{ after(grammarAccess.getXImportDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XImportDeclaration__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__0__Impl
	rule__XImportDeclaration__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0()); }
(rule__XImportDeclaration__StaticAssignment_1_0_0)
{ after(grammarAccess.getXImportDeclarationAccess().getStaticAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__1__Impl
	rule__XImportDeclaration__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1()); }
(rule__XImportDeclaration__ExtensionAssignment_1_0_1)?
{ after(grammarAccess.getXImportDeclarationAccess().getExtensionAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__2__Impl
	rule__XImportDeclaration__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2()); }
(rule__XImportDeclaration__ImportedTypeAssignment_1_0_2)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XImportDeclaration__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XImportDeclaration__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getAlternatives_1_0_3()); }
(rule__XImportDeclaration__Alternatives_1_0_3)
{ after(grammarAccess.getXImportDeclarationAccess().getAlternatives_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QualifiedNameInStaticImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameInStaticImport__Group__0__Impl
	rule__QualifiedNameInStaticImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameInStaticImport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameInStaticImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameInStaticImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameInStaticImport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); }

	FullStop 

{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__MCSGrammarRoot__LibAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getLibMCSAnnexLibraryParserRuleCall_0_0()); }
	ruleMCSAnnexLibrary{ after(grammarAccess.getMCSGrammarRootAccess().getLibMCSAnnexLibraryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSGrammarRoot__SubclauseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSGrammarRootAccess().getSubclauseMCSAnnexSubclauseParserRuleCall_1_0()); }
	ruleMCSAnnexSubclause{ after(grammarAccess.getMCSGrammarRootAccess().getSubclauseMCSAnnexSubclauseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__TypesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTypesType_declarationParserRuleCall_1_1_0()); }
	ruletype_declaration{ after(grammarAccess.getMCSAnnexLibraryAccess().getTypesType_declarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__ConstantsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getConstantsConstant_declarationParserRuleCall_2_1_0()); }
	ruleconstant_declaration{ after(grammarAccess.getMCSAnnexLibraryAccess().getConstantsConstant_declarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__FunctionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsFunction_declarationParserRuleCall_3_1_0()); }
	rulefunction_declaration{ after(grammarAccess.getMCSAnnexLibraryAccess().getFunctionsFunction_declarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__TheoremsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsTheorem_declarationParserRuleCall_4_1_0()); }
	ruletheorem_declaration{ after(grammarAccess.getMCSAnnexLibraryAccess().getTheoremsTheorem_declarationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__ViewpointsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getViewpointsMCSViewpointParserRuleCall_5_0_0()); }
	ruleMCSViewpoint{ after(grammarAccess.getMCSAnnexLibraryAccess().getViewpointsMCSViewpointParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__ViewpointsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getViewpointsMCSViewpointParserRuleCall_5_1_0()); }
	ruleMCSViewpoint{ after(grammarAccess.getMCSAnnexLibraryAccess().getViewpointsMCSViewpointParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__EnforceclausesAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getEnforceclausesPackageEnforceParserRuleCall_6_0_0()); }
	rulePackageEnforce{ after(grammarAccess.getMCSAnnexLibraryAccess().getEnforceclausesPackageEnforceParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexLibrary__EnforceclausesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexLibraryAccess().getEnforceclausesPackageEnforceParserRuleCall_6_1_0()); }
	rulePackageEnforce{ after(grammarAccess.getMCSAnnexLibraryAccess().getEnforceclausesPackageEnforceParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getType_declarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getTypeType_expressionParserRuleCall_3_0()); }
	ruletype_expression{ after(grammarAccess.getType_declarationAccess().getTypeType_expressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__ConstAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getConstConstKeyword_0_0()); }
(
{ before(grammarAccess.getConstant_declarationAccess().getConstConstKeyword_0_0()); }

	Const 

{ after(grammarAccess.getConstant_declarationAccess().getConstConstKeyword_0_0()); }
)

{ after(grammarAccess.getConstant_declarationAccess().getConstConstKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConstant_declarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getTypeType_expressionParserRuleCall_2_0()); }
	ruletype_expression{ after(grammarAccess.getConstant_declarationAccess().getTypeType_expressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_declaration__Left_exprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_declarationAccess().getLeft_exprConstant_expressionParserRuleCall_4_0()); }
	ruleconstant_expression{ after(grammarAccess.getConstant_declarationAccess().getLeft_exprConstant_expressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSViewpoint__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSViewpointAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMCSViewpointAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSViewpoint__PolicyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSViewpointAccess().getPolicyEnforcement_policyParserRuleCall_2_0()); }
	ruleEnforcement_policy{ after(grammarAccess.getMCSViewpointAccess().getPolicyEnforcement_policyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSViewpoint__PscriptAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSViewpointAccess().getPscriptPackageScriptParserRuleCall_3_0()); }
	rulePackageScript{ after(grammarAccess.getMCSViewpointAccess().getPscriptPackageScriptParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enforcement_policy__PackAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnforcement_policyAccess().getPackPackageKeyword_0_0_0()); }
(
{ before(grammarAccess.getEnforcement_policyAccess().getPackPackageKeyword_0_0_0()); }

	Package 

{ after(grammarAccess.getEnforcement_policyAccess().getPackPackageKeyword_0_0_0()); }
)

{ after(grammarAccess.getEnforcement_policyAccess().getPackPackageKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enforcement_policy__ClassAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnforcement_policyAccess().getClassClassifierKeyword_0_1_0()); }
(
{ before(grammarAccess.getEnforcement_policyAccess().getClassClassifierKeyword_0_1_0()); }

	Classifier 

{ after(grammarAccess.getEnforcement_policyAccess().getClassClassifierKeyword_0_1_0()); }
)

{ after(grammarAccess.getEnforcement_policyAccess().getClassClassifierKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageScript__AppliesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageScriptAccess().getAppliesAppliesToClauseParserRuleCall_1_0_0()); }
	ruleAppliesToClause{ after(grammarAccess.getPackageScriptAccess().getAppliesAppliesToClauseParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageScript__C_blockAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageScriptAccess().getC_blockConstraintsBlockParserRuleCall_1_1_0()); }
	ruleConstraintsBlock{ after(grammarAccess.getPackageScriptAccess().getC_blockConstraintsBlockParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageScript__RefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageScriptAccess().getRefViewpointReferenceParserRuleCall_3_0()); }
	ruleViewpointReference{ after(grammarAccess.getPackageScriptAccess().getRefViewpointReferenceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__AllAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getAllAllKeyword_2_0_0()); }
(
{ before(grammarAccess.getAppliesToClauseAccess().getAllAllKeyword_2_0_0()); }

	All 

{ after(grammarAccess.getAppliesToClauseAccess().getAllAllKeyword_2_0_0()); }
)

{ after(grammarAccess.getAppliesToClauseAccess().getAllAllKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__CategoryAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getCategoryClassifierCategoryParserRuleCall_2_1_0_0()); }
	ruleClassifierCategory{ after(grammarAccess.getAppliesToClauseAccess().getCategoryClassifierCategoryParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AppliesToClause__CategoryAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliesToClauseAccess().getCategoryClassifierCategoryParserRuleCall_2_1_1_1_0()); }
	ruleClassifierCategory{ after(grammarAccess.getAppliesToClauseAccess().getCategoryClassifierCategoryParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__ComponentAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getComponentComponentCategoryParserRuleCall_1_0_0_0()); }
	ruleComponentCategory{ after(grammarAccess.getClassifierCategoryAccess().getComponentComponentCategoryParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__CtAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getCtComponentTypeCrossReference_1_0_1_0()); }
(
{ before(grammarAccess.getClassifierCategoryAccess().getCtComponentTypeQCREFParserRuleCall_1_0_1_0_1()); }
	ruleQCREF{ after(grammarAccess.getClassifierCategoryAccess().getCtComponentTypeQCREFParserRuleCall_1_0_1_0_1()); }
)
{ after(grammarAccess.getClassifierCategoryAccess().getCtComponentTypeCrossReference_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__ImplAssignment_1_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getImplImplementationKeyword_1_0_2_0_0()); }
(
{ before(grammarAccess.getClassifierCategoryAccess().getImplImplementationKeyword_1_0_2_0_0()); }

	Implementation 

{ after(grammarAccess.getClassifierCategoryAccess().getImplImplementationKeyword_1_0_2_0_0()); }
)

{ after(grammarAccess.getClassifierCategoryAccess().getImplImplementationKeyword_1_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__CiAssignment_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getCiComponentImplementationCrossReference_1_0_2_1_0()); }
(
{ before(grammarAccess.getClassifierCategoryAccess().getCiComponentImplementationQCREFParserRuleCall_1_0_2_1_0_1()); }
	ruleQCREF{ after(grammarAccess.getClassifierCategoryAccess().getCiComponentImplementationQCREFParserRuleCall_1_0_2_1_0_1()); }
)
{ after(grammarAccess.getClassifierCategoryAccess().getCiComponentImplementationCrossReference_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Feat_gAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getFeat_gFeatureGroupKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getClassifierCategoryAccess().getFeat_gFeatureGroupKeyword_1_1_0_0()); }

	FeatureGroup 

{ after(grammarAccess.getClassifierCategoryAccess().getFeat_gFeatureGroupKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getClassifierCategoryAccess().getFeat_gFeatureGroupKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierCategory__Ref_to_fAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierCategoryAccess().getRef_to_fFeatureGroupClassifierReferenceParserRuleCall_1_1_1_0()); }
	ruleFeatureGroupClassifierReference{ after(grammarAccess.getClassifierCategoryAccess().getRef_to_fFeatureGroupClassifierReferenceParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureGroupClassifierReference__FgAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureGroupClassifierReferenceAccess().getFgFeatureGroupTypeCrossReference_0()); }
(
{ before(grammarAccess.getFeatureGroupClassifierReferenceAccess().getFgFeatureGroupTypeQCREFParserRuleCall_0_1()); }
	ruleQCREF{ after(grammarAccess.getFeatureGroupClassifierReferenceAccess().getFgFeatureGroupTypeQCREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getFeatureGroupClassifierReferenceAccess().getFgFeatureGroupTypeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewpointReference__PolicyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewpointReferenceAccess().getPolicyEnforcement_policyCrossReference_0_0()); }
(
{ before(grammarAccess.getViewpointReferenceAccess().getPolicyEnforcement_policyIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getViewpointReferenceAccess().getPolicyEnforcement_policyIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getViewpointReferenceAccess().getPolicyEnforcement_policyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewpointReference__Vp_refAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewpointReferenceAccess().getVp_refMCSViewpointCrossReference_1_0()); }
(
{ before(grammarAccess.getViewpointReferenceAccess().getVp_refMCSViewpointIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getViewpointReferenceAccess().getVp_refMCSViewpointIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getViewpointReferenceAccess().getVp_refMCSViewpointCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintsBlock__B_labelAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsBlockAccess().getB_labelBlock_label_idParserRuleCall_0_0_0()); }
	ruleblock_label_id{ after(grammarAccess.getConstraintsBlockAccess().getB_labelBlock_label_idParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintsBlock__CsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsBlockAccess().getCsLabelled_check_statementParserRuleCall_2_0()); }
	rulelabelled_check_statement{ after(grammarAccess.getConstraintsBlockAccess().getCsLabelled_check_statementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Labelled_check_statement__C_labelAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelled_check_statementAccess().getC_labelCheck_label_idParserRuleCall_0_0_0()); }
	rulecheck_label_id{ after(grammarAccess.getLabelled_check_statementAccess().getC_labelCheck_label_idParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Labelled_check_statement__CsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelled_check_statementAccess().getCsCheck_statementParserRuleCall_1_0()); }
	rulecheck_statement{ after(grammarAccess.getLabelled_check_statementAccess().getCsCheck_statementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block_label_id__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlock_label_idAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getBlock_label_idAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check_label_id__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_label_idAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getCheck_label_idAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getNameTheorem_declarationCrossReference_2_0()); }
(
{ before(grammarAccess.getCheck_theoremAccess().getNameTheorem_declarationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getCheck_theoremAccess().getNameTheorem_declarationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getCheck_theoremAccess().getNameTheorem_declarationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__RootAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getRootRoot_elementParserRuleCall_3_1_0()); }
	ruleroot_element{ after(grammarAccess.getCheck_theoremAccess().getRootRoot_elementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__InmodeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getInmodeModeSpecParserRuleCall_4_0()); }
	ruleModeSpec{ after(grammarAccess.getCheck_theoremAccess().getInmodeModeSpecParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check_theorem__StrAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_theoremAccess().getStrString_expressionParserRuleCall_5_1_0()); }
	rulestring_expression{ after(grammarAccess.getCheck_theoremAccess().getStrString_expressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModeSpec__ModeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeSpecAccess().getModeModeNameParserRuleCall_2_0()); }
	ruleModeName{ after(grammarAccess.getModeSpecAccess().getModeModeNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModeName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModeNameAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getModeNameAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__RootAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getRootRoot_elementParserRuleCall_1_0()); }
	ruleroot_element{ after(grammarAccess.getCheck_assertionAccess().getRootRoot_elementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__InmodeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getInmodeModeSpecParserRuleCall_2_0()); }
	ruleModeSpec{ after(grammarAccess.getCheck_assertionAccess().getInmodeModeSpecParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__ExprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getExprAssertion_expressionParserRuleCall_4_0()); }
	ruleassertion_expression{ after(grammarAccess.getCheck_assertionAccess().getExprAssertion_expressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check_assertion__StrAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheck_assertionAccess().getStrString_expressionParserRuleCall_6_1_0()); }
	rulestring_expression{ after(grammarAccess.getCheck_assertionAccess().getStrString_expressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__SelfAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getSelfSelfKeyword_0_1_0()); }
(
{ before(grammarAccess.getElement_referenceAccess().getSelfSelfKeyword_0_1_0()); }

	Self 

{ after(grammarAccess.getElement_referenceAccess().getSelfSelfKeyword_0_1_0()); }
)

{ after(grammarAccess.getElement_referenceAccess().getSelfSelfKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__RootAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getRootRootKeyword_1_0()); }
(
{ before(grammarAccess.getElement_referenceAccess().getRootRootKeyword_1_0()); }

	Root 

{ after(grammarAccess.getElement_referenceAccess().getRootRootKeyword_1_0()); }
)

{ after(grammarAccess.getElement_referenceAccess().getRootRootKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__CurrentmodeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getCurrentmodeCurrent_modeKeyword_2_0()); }
(
{ before(grammarAccess.getElement_referenceAccess().getCurrentmodeCurrent_modeKeyword_2_0()); }

	Current_mode 

{ after(grammarAccess.getElement_referenceAccess().getCurrentmodeCurrent_modeKeyword_2_0()); }
)

{ after(grammarAccess.getElement_referenceAccess().getCurrentmodeCurrent_modeKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__CrefAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getCrefClassifierCrossReference_3_2_0()); }
(
{ before(grammarAccess.getElement_referenceAccess().getCrefClassifierQCREFParserRuleCall_3_2_0_1()); }
	ruleQCREF{ after(grammarAccess.getElement_referenceAccess().getCrefClassifierQCREFParserRuleCall_3_2_0_1()); }
)
{ after(grammarAccess.getElement_referenceAccess().getCrefClassifierCrossReference_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__PackageNameAssignment_4_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getPackageNameIDTerminalRuleCall_4_2_0_0()); }
	RULE_ID{ after(grammarAccess.getElement_referenceAccess().getPackageNameIDTerminalRuleCall_4_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_reference__RefAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_referenceAccess().getRefContainmentPathElementParserRuleCall_4_3_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getElement_referenceAccess().getRefContainmentPathElementParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__NamedElementAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0_0()); }
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__ArrayRangeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_0_1_0()); }
	ruleArrayRange{ after(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__PathAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getPathContainmentPathElementParserRuleCall_1_1_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getContainmentPathElementAccess().getPathContainmentPathElementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__LowerBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLowerBoundINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getArrayRangeAccess().getLowerBoundINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__UpperBoundAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getUpperBoundINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getArrayRangeAccess().getUpperBoundINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageEnforce__ViewpointAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageEnforceAccess().getViewpointMCSViewpointCrossReference_1_0()); }
(
{ before(grammarAccess.getPackageEnforceAccess().getViewpointMCSViewpointIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPackageEnforceAccess().getViewpointMCSViewpointIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPackageEnforceAccess().getViewpointMCSViewpointCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion_expression__ExprAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertion_expressionAccess().getExprExpressionParserRuleCall_0()); }
	ruleexpression{ after(grammarAccess.getAssertion_expressionAccess().getExprExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__String_expression__ExprAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getString_expressionAccess().getExprExpressionParserRuleCall_0()); }
	ruleexpression{ after(grammarAccess.getString_expressionAccess().getExprExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNameXExpressionParserRuleCall_0()); }
	ruleXExpression{ after(grammarAccess.getExpressionAccess().getNameXExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__TypesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getTypesType_declarationParserRuleCall_1_1_0()); }
	ruletype_declaration{ after(grammarAccess.getMCSAnnexSubclauseAccess().getTypesType_declarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__ConstantsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getConstantsConstant_declarationParserRuleCall_2_1_0()); }
	ruleconstant_declaration{ after(grammarAccess.getMCSAnnexSubclauseAccess().getConstantsConstant_declarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__FunctionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getFunctionsFunction_declarationParserRuleCall_3_1_0()); }
	rulefunction_declaration{ after(grammarAccess.getMCSAnnexSubclauseAccess().getFunctionsFunction_declarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__TheoremsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getTheoremsTheorem_declarationParserRuleCall_4_1_0()); }
	ruletheorem_declaration{ after(grammarAccess.getMCSAnnexSubclauseAccess().getTheoremsTheorem_declarationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__EnforceclausesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getEnforceclausesClassifierEnforceParserRuleCall_5_0_0()); }
	ruleClassifierEnforce{ after(grammarAccess.getMCSAnnexSubclauseAccess().getEnforceclausesClassifierEnforceParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSAnnexSubclause__EnforceclausesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSAnnexSubclauseAccess().getEnforceclausesClassifierEnforceParserRuleCall_5_1_0()); }
	ruleClassifierEnforce{ after(grammarAccess.getMCSAnnexSubclauseAccess().getEnforceclausesClassifierEnforceParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierEnforce__ViewpointAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierEnforceAccess().getViewpointMCSViewpointCrossReference_1_0()); }
(
{ before(grammarAccess.getClassifierEnforceAccess().getViewpointMCSViewpointIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassifierEnforceAccess().getViewpointMCSViewpointIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getClassifierEnforceAccess().getViewpointMCSViewpointCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierEnforce__ScriptAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierEnforceAccess().getScriptClassifierScriptParserRuleCall_2_0()); }
	ruleClassifierScript{ after(grammarAccess.getClassifierEnforceAccess().getScriptClassifierScriptParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierScript__C_blockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierScriptAccess().getC_blockConstraintsBlockParserRuleCall_1_0()); }
	ruleConstraintsBlock{ after(grammarAccess.getClassifierScriptAccess().getC_blockConstraintsBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierScript__RefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierScriptAccess().getRefViewpointReferenceParserRuleCall_3_0()); }
	ruleViewpointReference{ after(grammarAccess.getClassifierScriptAccess().getRefViewpointReferenceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFunction_declarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__ArgAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getArgArgumentParserRuleCall_1_0_1_0()); }
	ruleargument{ after(grammarAccess.getFunction_declarationAccess().getArgArgumentParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__ArgAssignment_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getArgArgumentParserRuleCall_1_0_2_1_0()); }
	ruleargument{ after(grammarAccess.getFunction_declarationAccess().getArgArgumentParserRuleCall_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__OutAssignment_1_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getOutType_expressionParserRuleCall_1_0_4_1_0()); }
	ruletype_expression{ after(grammarAccess.getFunction_declarationAccess().getOutType_expressionParserRuleCall_1_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__FtypeAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getFtypeUnnamedFunctionTypeParserRuleCall_1_1_1_0_0()); }
	ruleUnnamedFunctionType{ after(grammarAccess.getFunction_declarationAccess().getFtypeUnnamedFunctionTypeParserRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__TyperefAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getTyperefType_declarationCrossReference_1_1_1_1_0()); }
(
{ before(grammarAccess.getFunction_declarationAccess().getTyperefType_declarationIDTerminalRuleCall_1_1_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFunction_declarationAccess().getTyperefType_declarationIDTerminalRuleCall_1_1_1_1_0_1()); }
)
{ after(grammarAccess.getFunction_declarationAccess().getTyperefType_declarationCrossReference_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__ClosureAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getClosureMCSClosureParserRuleCall_3_0_0()); }
	ruleMCSClosure{ after(grammarAccess.getFunction_declarationAccess().getClosureMCSClosureParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Exp_bodyAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getExp_bodyXExpressionParserRuleCall_3_1_0()); }
	ruleXExpression{ after(grammarAccess.getFunction_declarationAccess().getExp_bodyXExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Arg_typeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getArg_typeType_expressionParserRuleCall_2_1_0()); }
	ruletype_expression{ after(grammarAccess.getArgumentAccess().getArg_typeType_expressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__DeclaredFormalParametersAssignment_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getDeclaredFormalParametersArgumentParserRuleCall_1_0_0_0_0()); }
	ruleargument{ after(grammarAccess.getMCSClosureAccess().getDeclaredFormalParametersArgumentParserRuleCall_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__DeclaredFormalParametersAssignment_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getDeclaredFormalParametersArgumentParserRuleCall_1_0_0_1_1_0()); }
	ruleargument{ after(grammarAccess.getMCSClosureAccess().getDeclaredFormalParametersArgumentParserRuleCall_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__ExplicitSyntaxAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getMCSClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }

	VerticalLine 

{ after(grammarAccess.getMCSClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getMCSClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MCSClosure__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMCSClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); }
	ruleXExpressionInClosure{ after(grammarAccess.getMCSClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTheorem_declarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__MlAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getMlIn_modes_listParserRuleCall_2_0()); }
	rulein_modes_list{ after(grammarAccess.getTheorem_declarationAccess().getMlIn_modes_listParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__LocalsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getLocalsLocal_declarationParserRuleCall_3_0()); }
	rulelocal_declaration{ after(grammarAccess.getTheorem_declarationAccess().getLocalsLocal_declarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__StatementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getStatementsTheorem_statementParserRuleCall_4_0()); }
	ruletheorem_statement{ after(grammarAccess.getTheorem_declarationAccess().getStatementsTheorem_statementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_declaration__EndnameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_declarationAccess().getEndnameTheorem_declarationCrossReference_6_0()); }
(
{ before(grammarAccess.getTheorem_declarationAccess().getEndnameTheorem_declarationIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getTheorem_declarationAccess().getEndnameTheorem_declarationIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getTheorem_declarationAccess().getEndnameTheorem_declarationCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__In_modes_list__ModesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIn_modes_listAccess().getModesIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getIn_modes_listAccess().getModesIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__In_modes_list__ModesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIn_modes_listAccess().getModesIDTerminalRuleCall_4_1_0()); }
	RULE_ID{ after(grammarAccess.getIn_modes_listAccess().getModesIDTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__ConstAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getConstConstKeyword_0_0()); }
(
{ before(grammarAccess.getLocal_declarationAccess().getConstConstKeyword_0_0()); }

	Const 

{ after(grammarAccess.getLocal_declarationAccess().getConstConstKeyword_0_0()); }
)

{ after(grammarAccess.getLocal_declarationAccess().getConstConstKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLocal_declarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getTypeType_expressionParserRuleCall_2_0()); }
	ruletype_expression{ after(grammarAccess.getLocal_declarationAccess().getTypeType_expressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__Left_exprAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getLeft_exprMCSClosureParserRuleCall_4_0_0()); }
	ruleMCSClosure{ after(grammarAccess.getLocal_declarationAccess().getLeft_exprMCSClosureParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Local_declaration__Left_exprAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocal_declarationAccess().getLeft_exprConstant_expressionParserRuleCall_4_1_0()); }
	ruleconstant_expression{ after(grammarAccess.getLocal_declarationAccess().getLeft_exprConstant_expressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Theorem_statement__StatementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheorem_statementAccess().getStatementCheck_statementParserRuleCall_0()); }
	rulecheck_statement{ after(grammarAccess.getTheorem_statementAccess().getStatementCheck_statementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_expression__BasicAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_expressionAccess().getBasicBasic_typeParserRuleCall_0_0()); }
	rulebasic_type{ after(grammarAccess.getType_expressionAccess().getBasicBasic_typeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_expression__CompositeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_expressionAccess().getCompositeComposite_typeParserRuleCall_1_0()); }
	rulecomposite_type{ after(grammarAccess.getType_expressionAccess().getCompositeComposite_typeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_expression__ElementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_expressionAccess().getElementElement_typeParserRuleCall_2_0()); }
	ruleelement_type{ after(grammarAccess.getType_expressionAccess().getElementElement_typeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__BoolAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getBoolUnnamedBooleanTypeParserRuleCall_0_0()); }
	ruleUnnamedBooleanType{ after(grammarAccess.getBasic_typeAccess().getBoolUnnamedBooleanTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__StringAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getStringUnnamedStringTypeParserRuleCall_1_0()); }
	ruleUnnamedStringType{ after(grammarAccess.getBasic_typeAccess().getStringUnnamedStringTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__EnumerAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getEnumerUnnamedEnumerationTypeParserRuleCall_2_0()); }
	ruleUnnamedEnumerationType{ after(grammarAccess.getBasic_typeAccess().getEnumerUnnamedEnumerationTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__UnitsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getUnitsUnnamedUnitsTypeParserRuleCall_3_0()); }
	ruleUnnamedUnitsType{ after(grammarAccess.getBasic_typeAccess().getUnitsUnnamedUnitsTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__IntegerAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getIntegerUnnamedIntegerTypeParserRuleCall_4_0()); }
	ruleUnnamedIntegerType{ after(grammarAccess.getBasic_typeAccess().getIntegerUnnamedIntegerTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__RealAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getRealUnnamedRealTypeParserRuleCall_5_0()); }
	ruleUnnamedRealType{ after(grammarAccess.getBasic_typeAccess().getRealUnnamedRealTypeParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__RangeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getRangeUnnamedRangeTypeParserRuleCall_6_0()); }
	ruleUnnamedRangeType{ after(grammarAccess.getBasic_typeAccess().getRangeUnnamedRangeTypeParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__ClassAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getClassUnnamedClassifierTypeParserRuleCall_7_0()); }
	ruleUnnamedClassifierType{ after(grammarAccess.getBasic_typeAccess().getClassUnnamedClassifierTypeParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__RefAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getRefUnnamedReferenceTypeParserRuleCall_8_0()); }
	ruleUnnamedReferenceType{ after(grammarAccess.getBasic_typeAccess().getRefUnnamedReferenceTypeParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__FuncAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getFuncUnnamedFunctionTypeParserRuleCall_9_0()); }
	ruleUnnamedFunctionType{ after(grammarAccess.getBasic_typeAccess().getFuncUnnamedFunctionTypeParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Basic_type__TypenameAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasic_typeAccess().getTypenameType_declarationCrossReference_10_0()); }
(
{ before(grammarAccess.getBasic_typeAccess().getTypenameType_declarationIDTerminalRuleCall_10_0_1()); }
	RULE_ID{ after(grammarAccess.getBasic_typeAccess().getTypenameType_declarationIDTerminalRuleCall_10_0_1()); }
)
{ after(grammarAccess.getBasic_typeAccess().getTypenameType_declarationCrossReference_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__ParmAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getParmType_expressionParserRuleCall_1_0()); }
	ruletype_expression{ after(grammarAccess.getUnnamedFunctionTypeAccess().getParmType_expressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__ParmAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getParmType_expressionParserRuleCall_2_1_0()); }
	ruletype_expression{ after(grammarAccess.getUnnamedFunctionTypeAccess().getParmType_expressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__OutspecAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getOutspecReturnsKeyword_4_0_0()); }
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getOutspecReturnsKeyword_4_0_0()); }

	Returns 

{ after(grammarAccess.getUnnamedFunctionTypeAccess().getOutspecReturnsKeyword_4_0_0()); }
)

{ after(grammarAccess.getUnnamedFunctionTypeAccess().getOutspecReturnsKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedFunctionType__ResultAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedFunctionTypeAccess().getResultType_expressionParserRuleCall_4_1_0()); }
	ruletype_expression{ after(grammarAccess.getUnnamedFunctionTypeAccess().getResultType_expressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__OwnedLiteralAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralEnumerationLiteralParserRuleCall_2_0()); }
	ruleEnumerationLiteral{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralEnumerationLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedEnumerationType__OwnedLiteralAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralEnumerationLiteralParserRuleCall_3_1_0()); }
	ruleEnumerationLiteral{ after(grammarAccess.getUnnamedEnumerationTypeAccess().getOwnedLiteralEnumerationLiteralParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteral__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getEnumerationLiteralAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__OwnedLiteralAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralUnitLiteralParserRuleCall_2_0()); }
	ruleUnitLiteral{ after(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralUnitLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedUnitsType__OwnedLiteralAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralUnitLiteralConversionParserRuleCall_3_1_0()); }
	ruleUnitLiteralConversion{ after(grammarAccess.getUnnamedUnitsTypeAccess().getOwnedLiteralUnitLiteralConversionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteral__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getUnitLiteralAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getUnitLiteralConversionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__BaseUnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitUnitLiteralCrossReference_2_0()); }
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitUnitLiteralIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitUnitLiteralIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getUnitLiteralConversionAccess().getBaseUnitUnitLiteralCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLiteralConversion__FactorAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitLiteralConversionAccess().getFactorNumberValueParserRuleCall_4_0()); }
	ruleNumberValue{ after(grammarAccess.getUnitLiteralConversionAccess().getFactorNumberValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLit__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLitAccess().getValueSignedRealParserRuleCall_0()); }
	ruleSignedReal{ after(grammarAccess.getRealLitAccess().getValueSignedRealParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLit__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLitAccess().getValueSignedIntParserRuleCall_0()); }
	ruleSignedInt{ after(grammarAccess.getIntegerLitAccess().getValueSignedIntParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__RangeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getRangeIntegerRangeParserRuleCall_2_0()); }
	ruleIntegerRange{ after(grammarAccess.getUnnamedIntegerTypeAccess().getRangeIntegerRangeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__OwnedUnitsTypeAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getOwnedUnitsTypeUnnamedUnitsTypeParserRuleCall_3_0_0()); }
	ruleUnnamedUnitsType{ after(grammarAccess.getUnnamedIntegerTypeAccess().getOwnedUnitsTypeUnnamedUnitsTypeParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedIntegerType__ReferencedUnitsTypeAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeUnitsTypeCrossReference_3_1_1_0()); }
(
{ before(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeUnitsTypeQPREFParserRuleCall_3_1_1_0_1()); }
	ruleQPREF{ after(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeUnitsTypeQPREFParserRuleCall_3_1_1_0_1()); }
)
{ after(grammarAccess.getUnnamedIntegerTypeAccess().getReferencedUnitsTypeUnitsTypeCrossReference_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__LowerBoundAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getLowerBoundAlternatives_0_0()); }
(rule__IntegerRange__LowerBoundAlternatives_0_0)
{ after(grammarAccess.getIntegerRangeAccess().getLowerBoundAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerRange__UpperBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerRangeAccess().getUpperBoundAlternatives_2_0()); }
(rule__IntegerRange__UpperBoundAlternatives_2_0)
{ after(grammarAccess.getIntegerRangeAccess().getUpperBoundAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getValueSignedIntParserRuleCall_0_0()); }
	ruleSignedInt{ after(grammarAccess.getIntegerTermAccess().getValueSignedIntParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
(
{ before(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); }
	rulePlusMinus{ after(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__OwnedPropertyExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); }
	ruleConstantValue{ after(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__NamedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); }
(
{ before(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantQPREFParserRuleCall_0_1()); }
	ruleQPREF{ after(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantQPREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__RangeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getRangeRealRangeParserRuleCall_2_0()); }
	ruleRealRange{ after(grammarAccess.getUnnamedRealTypeAccess().getRangeRealRangeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__OwnedUnitsTypeAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getOwnedUnitsTypeUnnamedUnitsTypeParserRuleCall_3_0_0()); }
	ruleUnnamedUnitsType{ after(grammarAccess.getUnnamedRealTypeAccess().getOwnedUnitsTypeUnnamedUnitsTypeParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRealType__ReferencedUnitsTypeAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeUnitsTypeCrossReference_3_1_1_0()); }
(
{ before(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeUnitsTypeQPREFParserRuleCall_3_1_1_0_1()); }
	ruleQPREF{ after(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeUnitsTypeQPREFParserRuleCall_3_1_1_0_1()); }
)
{ after(grammarAccess.getUnnamedRealTypeAccess().getReferencedUnitsTypeUnitsTypeCrossReference_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__LowerBoundAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getLowerBoundAlternatives_0_0()); }
(rule__RealRange__LowerBoundAlternatives_0_0)
{ after(grammarAccess.getRealRangeAccess().getLowerBoundAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealRange__UpperBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealRangeAccess().getUpperBoundAlternatives_2_0()); }
(rule__RealRange__UpperBoundAlternatives_2_0)
{ after(grammarAccess.getRealRangeAccess().getUpperBoundAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getValueSignedRealParserRuleCall_0_0()); }
	ruleSignedReal{ after(grammarAccess.getRealTermAccess().getValueSignedRealParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
(
{ before(grammarAccess.getRealTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRealTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__OwnedNumberTypeAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeAlternatives_3_0_0()); }
(rule__UnnamedRangeType__OwnedNumberTypeAlternatives_3_0_0)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getOwnedNumberTypeAlternatives_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedRangeType__NumberTypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getNumberTypeNumberTypeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getUnnamedRangeTypeAccess().getNumberTypeNumberTypeQPREFParserRuleCall_3_1_0_1()); }
	ruleQPREF{ after(grammarAccess.getUnnamedRangeTypeAccess().getNumberTypeNumberTypeQPREFParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getUnnamedRangeTypeAccess().getNumberTypeNumberTypeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__ClassifierReferenceAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierReferenceQMReferenceParserRuleCall_2_1_0()); }
	ruleQMReference{ after(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierReferenceQMReferenceParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedClassifierType__ClassifierReferenceAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierReferenceQMReferenceParserRuleCall_2_2_1_0()); }
	ruleQMReference{ after(grammarAccess.getUnnamedClassifierTypeAccess().getClassifierReferenceQMReferenceParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__NamedElementReferenceAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getNamedElementReferenceQMReferenceParserRuleCall_2_1_0()); }
	ruleQMReference{ after(grammarAccess.getUnnamedReferenceTypeAccess().getNamedElementReferenceQMReferenceParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnnamedReferenceType__NamedElementReferenceAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnnamedReferenceTypeAccess().getNamedElementReferenceQMReferenceParserRuleCall_2_2_1_0()); }
	ruleQMReference{ after(grammarAccess.getUnnamedReferenceTypeAccess().getNamedElementReferenceQMReferenceParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QMReference__AnnexNameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQMReferenceAccess().getAnnexNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getQMReferenceAccess().getAnnexNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QMReference__MetaclassNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQMReferenceAccess().getMetaclassNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getQMReferenceAccess().getMetaclassNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set_type__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getTypeType_expressionParserRuleCall_2_0()); }
	ruletype_expression{ after(grammarAccess.getSet_typeAccess().getTypeType_expressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__List_type__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getList_typeAccess().getTypeType_expressionParserRuleCall_2_0()); }
	ruletype_expression{ after(grammarAccess.getList_typeAccess().getTypeType_expressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Map_type__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMap_typeAccess().getTypeType_expressionParserRuleCall_2_0()); }
	ruletype_expression{ after(grammarAccess.getMap_typeAccess().getTypeType_expressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__FieldAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getFieldId_type_pairParserRuleCall_2_0()); }
	ruleid_type_pair{ after(grammarAccess.getRecord_typeAccess().getFieldId_type_pairParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__TypenameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypenameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getUnion_typeAccess().getTypenameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypeType_expressionParserRuleCall_2_0()); }
	ruletype_expression{ after(grammarAccess.getUnion_typeAccess().getTypeType_expressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__TypenameAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypenameIDTerminalRuleCall_3_1_0_0()); }
	RULE_ID{ after(grammarAccess.getUnion_typeAccess().getTypenameIDTerminalRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union_type__TypeAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnion_typeAccess().getTypeType_expressionParserRuleCall_3_2_0()); }
	ruletype_expression{ after(grammarAccess.getUnion_typeAccess().getTypeType_expressionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Id_type_pair__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_type_pairAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getId_type_pairAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Id_type_pair__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getId_type_pairAccess().getTypeType_expressionParserRuleCall_2_0()); }
	ruletype_expression{ after(grammarAccess.getId_type_pairAccess().getTypeType_expressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_type__TelemAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_typeAccess().getTelemT_ElementKeyword_0_0()); }
(
{ before(grammarAccess.getElement_typeAccess().getTelemT_ElementKeyword_0_0()); }

	T_Element 

{ after(grammarAccess.getElement_typeAccess().getTelemT_ElementKeyword_0_0()); }
)

{ after(grammarAccess.getElement_typeAccess().getTelemT_ElementKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_type__T_classAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_typeAccess().getT_classT_classifiersParserRuleCall_1_0()); }
	rulet_classifiers{ after(grammarAccess.getElement_typeAccess().getT_classT_classifiersParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element_type__T_refAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElement_typeAccess().getT_refT_named_referencesParserRuleCall_2_0()); }
	rulet_named_references{ after(grammarAccess.getElement_typeAccess().getT_refT_named_referencesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifiers__T_classAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifiersAccess().getT_classT_ClassifierKeyword_0_0()); }
(
{ before(grammarAccess.getT_classifiersAccess().getT_classT_ClassifierKeyword_0_0()); }

	T_Classifier 

{ after(grammarAccess.getT_classifiersAccess().getT_classT_ClassifierKeyword_0_0()); }
)

{ after(grammarAccess.getT_classifiersAccess().getT_classT_ClassifierKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifiers__T_class_subtypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifiersAccess().getT_class_subtypeT_classifier_subtypesParserRuleCall_1_0()); }
	rulet_classifier_subtypes{ after(grammarAccess.getT_classifiersAccess().getT_class_subtypeT_classifier_subtypesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifier_subtypes__T_ctypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeT_Component_Type_ClassifierKeyword_0_0()); }
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeT_Component_Type_ClassifierKeyword_0_0()); }

	T_Component_Type_Classifier 

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeT_Component_Type_ClassifierKeyword_0_0()); }
)

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_ctypeT_Component_Type_ClassifierKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifier_subtypes__T_cimplAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_cimplT_Component_Impl_ClassifierKeyword_1_0()); }
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_cimplT_Component_Impl_ClassifierKeyword_1_0()); }

	T_Component_Impl_Classifier 

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_cimplT_Component_Impl_ClassifierKeyword_1_0()); }
)

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_cimplT_Component_Impl_ClassifierKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifier_subtypes__T_fgclassAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassT_Feature_Group_ClassifierKeyword_2_0()); }
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassT_Feature_Group_ClassifierKeyword_2_0()); }

	T_Feature_Group_Classifier 

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassT_Feature_Group_ClassifierKeyword_2_0()); }
)

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_fgclassT_Feature_Group_ClassifierKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_classifier_subtypes__T_annexclassAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassT_Annex_ClassifierKeyword_3_0()); }
(
{ before(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassT_Annex_ClassifierKeyword_3_0()); }

	T_Annex_Classifier 

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassT_Annex_ClassifierKeyword_3_0()); }
)

{ after(grammarAccess.getT_classifier_subtypesAccess().getT_annexclassT_Annex_ClassifierKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__T_named_references__T_nrefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getT_named_referencesAccess().getT_nrefT_Named_ReferenceKeyword_0()); }
(
{ before(grammarAccess.getT_named_referencesAccess().getT_nrefT_Named_ReferenceKeyword_0()); }

	T_Named_Reference 

{ after(grammarAccess.getT_named_referencesAccess().getT_nrefT_Named_ReferenceKeyword_0()); }
)

{ after(grammarAccess.getT_named_referencesAccess().getT_nrefT_Named_ReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_0_1_0_1()); }
	ruleFeatureCallID{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__ValueAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); }
	ruleXAssignment{ after(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__FeatureAssignment_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
(
{ before(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementOpMultiAssignParserRuleCall_1_1_0_0_1_0_1()); }
	ruleOpMultiAssign{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementOpMultiAssignParserRuleCall_1_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAssignment__RightOperandAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); }
	ruleXAssignment{ after(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementOpOrParserRuleCall_1_0_0_1_0_1()); }
	ruleOpOr{ after(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementOpOrParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); }
	ruleXAndExpression{ after(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementOpAndParserRuleCall_1_0_0_1_0_1()); }
	ruleOpAnd{ after(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementOpAndParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); }
	ruleXEqualityExpression{ after(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementOpEqualityParserRuleCall_1_0_0_1_0_1()); }
	ruleOpEquality{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementOpEqualityParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); }
	ruleXRelationalExpression{ after(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__TypeAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__FeatureAssignment_1_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementOpCompareParserRuleCall_1_1_0_0_1_0_1()); }
	ruleOpCompare{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementOpCompareParserRuleCall_1_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__RightOperandAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); }
	ruleXOtherOperatorExpression{ after(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementOpOtherParserRuleCall_1_0_0_1_0_1()); }
	ruleOpOther{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementOpOtherParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); }
	ruleXAdditiveExpression{ after(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementOpAddParserRuleCall_1_0_0_1_0_1()); }
	ruleOpAdd{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementOpAddParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); }
	ruleXMultiplicativeExpression{ after(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementOpMultiParserRuleCall_1_0_0_1_0_1()); }
	ruleOpMulti{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementOpMultiParserRuleCall_1_0_0_1_0_1()); }
)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); }
	ruleXUnaryOperation{ after(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1()); }
	ruleOpUnary{ after(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementOpUnaryParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); }
	ruleXUnaryOperation{ after(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCastedExpression__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XPostfixOperation__FeatureAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0()); }
(
{ before(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementOpPostfixParserRuleCall_1_0_1_0_1()); }
	ruleOpPostfix{ after(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementOpPostfixParserRuleCall_1_0_1_0_1()); }
)
{ after(grammarAccess.getXPostfixOperationAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__ExplicitStaticAssignment_1_0_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0()); }

	ColonColon 

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_0_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__FeatureAssignment_1_0_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_1_0_0_0_2_0_1()); }
	ruleFeatureCallID{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementFeatureCallIDParserRuleCall_1_0_0_0_2_0_1()); }
)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__ValueAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); }
	ruleXAssignment{ after(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__NullSafeAssignment_1_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }

	QuestionMarkFullStop 

{ after(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__ExplicitStaticAssignment_1_1_0_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }

	ColonColon 

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitStaticColonColonKeyword_1_1_0_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__TypeArgumentsAssignment_1_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__FeatureAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_1_1_2_0_1()); }
	ruleIdOrSuper{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_1_1_2_0_1()); }
)
{ after(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__ExplicitOperationCallAssignment_1_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }

	LeftParenthesis 

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
)

{ after(grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); }
	ruleXShortClosure{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_3_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMemberFeatureCall__MemberCallArgumentsAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); }
	ruleXClosure{ after(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__ElementsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
	ruleXExpression{ after(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__ElementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__ElementsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
	ruleXExpression{ after(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__ElementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__DeclaredFormalParametersAssignment_1_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__ExplicitSyntaxAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }

	VerticalLine 

{ after(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XClosure__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); }
	ruleXExpressionInClosure{ after(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XExpressionInClosure__ExpressionsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0()); }
	ruleXExpressionOrVarDeclaration{ after(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__DeclaredFormalParametersAssignment_0_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__ExplicitSyntaxAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
(
{ before(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }

	VerticalLine 

{ after(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
)

{ after(grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XShortClosure__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__IfAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ThenAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ElseAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__DeclaredParamAssignment_2_0_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__SwitchAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__DeclaredParamAssignment_2_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXSwitchExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__SwitchAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__CasesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); }
	ruleXCasePart{ after(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__DefaultAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__TypeGuardAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__CaseAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0()); }
	ruleXExpression{ after(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__ThenAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0()); }
	ruleXExpression{ after(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__FallThroughAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0()); }
(
{ before(grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0()); }

	Comma 

{ after(grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0()); }
)

{ after(grammarAccess.getXCasePartAccess().getFallThroughCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__DeclaredParamAssignment_0_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0()); }
	ruleJvmFormalParameter{ after(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__ForExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForLoopExpression__EachExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__InitExpressionsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0()); }
	ruleXExpressionOrVarDeclaration{ after(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__InitExpressionsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0()); }
	ruleXExpressionOrVarDeclaration{ after(grammarAccess.getXBasicForLoopExpressionAccess().getInitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__ExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXBasicForLoopExpressionAccess().getExpressionXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__UpdateExpressionsAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0()); }
	ruleXExpression{ after(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__UpdateExpressionsAssignment_7_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXBasicForLoopExpressionAccess().getUpdateExpressionsXExpressionParserRuleCall_7_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBasicForLoopExpression__EachExpressionAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0()); }
	ruleXExpression{ after(grammarAccess.getXBasicForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__PredicateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XWhileExpression__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XDoWhileExpression__PredicateAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBlockExpression__ExpressionsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0()); }
	ruleXExpressionOrVarDeclaration{ after(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__WriteableAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }
(
{ before(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }

	Var 

{ after(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }
)

{ after(grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__TypeAssignment_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__NameAssignment_2_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); }
	ruleValidID{ after(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); }
	ruleValidID{ after(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableDeclaration__RightAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); }
	ruleXExpression{ after(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__ParameterTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmFormalParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__ParameterTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FullJvmFormalParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
	ruleValidID{ after(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__TypeArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__TypeArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); }
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_2_0_1()); }
	ruleIdOrSuper{ after(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementIdOrSuperParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__ExplicitOperationCallAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }
(
{ before(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }

	LeftParenthesis 

{ after(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }
)

{ after(grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); }
	ruleXShortClosure{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_3_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFeatureCall__FeatureCallArgumentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); }
	ruleXClosure{ after(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ConstructorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); }
(
{ before(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__TypeArgumentsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__TypeArgumentsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ExplicitConstructorCallAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0()); }
(
{ before(grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0()); }

	LeftParenthesis 

{ after(grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0()); }
)

{ after(grammarAccess.getXConstructorCallAccess().getExplicitConstructorCallLeftParenthesisKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); }
	ruleXShortClosure{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); }
	ruleXExpression{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_4_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XConstructorCall__ArgumentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); }
	ruleXClosure{ after(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__IsTrueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }

	True 

{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
	ruleNumber{ after(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTypeLiteral__ArrayDimensionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); }
	ruleArrayBrackets{ after(grammarAccess.getXTypeLiteralAccess().getArrayDimensionsArrayBracketsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XThrowExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XReturnExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
	ruleXExpression{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__CatchClausesAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); }
	ruleXCatchClause{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XTryCatchFinallyExpression__FinallyExpressionAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSynchronizedExpression__ParamAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSynchronizedExpressionAccess().getParamXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSynchronizedExpression__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXSynchronizedExpressionAccess().getExpressionXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__DeclaredParamAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); }
	ruleFullJvmFormalParameter{ after(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCatchClause__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); }
	ruleXExpression{ after(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ParamTypesAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionTypeRef__ReturnTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__TypeAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); }
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeValidIDParserRuleCall_1_4_1_0_1()); }
	ruleValidID{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeValidIDParserRuleCall_1_4_1_0_1()); }
)
{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmParameterizedTypeReference__ArgumentsAssignment_1_4_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); }
	ruleJvmArgumentTypeReference{ after(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); }
	ruleJvmUpperBound{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); }
	ruleJvmUpperBoundAnded{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); }
	ruleJvmLowerBound{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmWildcardTypeReference__ConstraintsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); }
	ruleJvmLowerBoundAnded{ after(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBound__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmUpperBoundAnded__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBound__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JvmLowerBoundAnded__TypeReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
	ruleJvmTypeReference{ after(grammarAccess.getJvmLowerBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__XImportDeclaration__StaticAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }

	Static 

{ after(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getXImportDeclarationAccess().getStaticStaticKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ExtensionAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }

	Extension 

{ after(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getXImportDeclarationAccess().getExtensionExtensionKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedTypeAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameInStaticImportParserRuleCall_1_0_2_0_1()); }
	ruleQualifiedNameInStaticImport{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameInStaticImportParserRuleCall_1_0_2_0_1()); }
)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__WildcardAssignment_1_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }

	Asterisk 

{ after(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }
)

{ after(grammarAccess.getXImportDeclarationAccess().getWildcardAsteriskKeyword_1_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__MemberNameAssignment_1_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); }
	ruleValidID{ after(grammarAccess.getXImportDeclarationAccess().getMemberNameValidIDParserRuleCall_1_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedTypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); }
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeQualifiedNameParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getXImportDeclarationAccess().getImportedTypeJvmDeclaredTypeCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XImportDeclaration__ImportedNamespaceAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getXImportDeclarationAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


